{"version":3,"sources":["routes/posts/2016/11-29-python-conda/document.mdx"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_runner_work_mzvast_github_io_mzvast_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"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","file":"static/js/93.bec8c4a3.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.37,\"time\":22200,\"words\":74}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"适用环境\"\n    }}>{`适用环境`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`全平台(windows、linux、macOS)`}</li>\n      <li parentName=\"ul\">{`本文主要针对windows`}</li>\n      <li parentName=\"ul\">{`参考这段`}<a parentName=\"li\" {...{\n          \"href\": \"https://www.youtube.com/watch?v=YJC6ldI3hWk\"\n        }}>{`视频`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"安装conda\"\n    }}>{`安装conda`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`这里仅安装包管理器`}<a parentName=\"li\" {...{\n          \"href\": \"http://conda.pydata.org/miniconda.html\"\n        }}>{`miniconda`}</a>{`，而不是400MB+的conda(包含n多科学计算库)`}</li>\n      <li parentName=\"ul\">{`miniconda版本的选择并不特别重要，因为conda可以以项目为单位，分别安装python版本，并在之间切换。这里以安装`}<a parentName=\"li\" {...{\n          \"href\": \"https://repo.continuum.io/miniconda/Miniconda2-latest-Windows-x86_64.exe\"\n        }}>{`自带Python 2.7的版本`}</a>{`为例。也是考虑到linux下系统自带也是2.x版本的。`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"基本使用，以创建flask项目为例\"\n    }}>{`基本使用，以创建flask项目为例`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`创建环境，并安装flask包`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\",\n            \"data-language\": \"bash\",\n            \"data-highlighted-line-numbers\": \"\",\n            \"dangerouslySetInnerHTML\": {\n              \"__html\": \"<span class=\\\"token comment\\\">#conda create --name &lt;env名称> &lt;要安装的包(可选),空格分隔>  </span>\\n\\n<span class=\\\"token comment\\\">#基于当前全局python版本产生新环境，这跟virtualenv类似</span>\\nconda create --name my_app flask\\n\\n<span class=\\\"token comment\\\">#指定python版本为3.x系列，conda自动下载并安装python3的最新版本，这点跟pyenv类似</span>\\nconda create --name <span class=\\\"token assign-left variable\\\">python</span><span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">3</span> my_app flask\\n\"\n            }\n          }}></code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`激活/退出该环境`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\",\n            \"data-language\": \"bash\",\n            \"data-highlighted-line-numbers\": \"\",\n            \"dangerouslySetInnerHTML\": {\n              \"__html\": \"activate my_app\\ndeactivate my_app\\n\"\n            }\n          }}></code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`查看所有的环境`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\",\n            \"data-language\": \"bash\",\n            \"data-highlighted-line-numbers\": \"\",\n            \"dangerouslySetInnerHTML\": {\n              \"__html\": \"conda <span class=\\\"token function\\\">env</span> list\\n\"\n            }\n          }}></code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`删除某环境`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\",\n            \"data-language\": \"bash\",\n            \"data-highlighted-line-numbers\": \"\",\n            \"dangerouslySetInnerHTML\": {\n              \"__html\": \"conda remove --name my_app --all\\n\"\n            }\n          }}></code></pre>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"兼容性提示\"\n    }}>{`兼容性提示`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`假如当前chcp是utf-8，那么在python2.7下会报错 `}<inlineCode parentName=\"li\">{`LookupError: unknown encoding: cp65001`}</inlineCode></li>\n      <li parentName=\"ul\">{`解决方法是在cmder的环境变量加入一条`}<inlineCode parentName=\"li\">{`set PYTHONIOENCODING=utf-8`}</inlineCode></li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"适用环境\",\n    level: 2,\n    title: \"适用环境\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"安装conda\",\n    level: 2,\n    title: \"安装conda\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"基本使用，以创建flask项目为例\",\n    level: 2,\n    title: \"基本使用，以创建flask项目为例\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"兼容性提示\",\n    level: 2,\n    title: \"兼容性提示\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}