(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{235:function(n,s,a){"use strict";a.r(s),a.d(s,"readingTime",function(){return o}),a.d(s,"default",function(){return l}),a.d(s,"tableOfContents",function(){return u}),a.d(s,"frontMatter",function(){return i});var t=a(32),p=(a(0),a(44)),o={text:"2 min read",minutes:1.48,time:88800,words:296},e={},c="wrapper";function l(n){var s=n.components,a=Object(t.a)(n,["components"]);return Object(p.b)(c,Object.assign({},e,a,{components:s,mdxType:"MDXLayout"}),Object(p.b)("h2",{id:"\u4f60\u53ef\u4ee5\u4ece\u672c\u6587\u4e86\u89e3\u5230"},"\u4f60\u53ef\u4ee5\u4ece\u672c\u6587\u4e86\u89e3\u5230"),Object(p.b)("h3",{id:"\u95ee\u9898\u80cc\u666f"},"\u95ee\u9898\u80cc\u666f"),Object(p.b)("p",null,"\u6700\u8fd1taobao npm registry\u4e0b\u7ebf\uff0c\u5bfc\u81f4\u4e4b\u524dlock\u6587\u4ef6\u91cc\u663e\u5f0f\u4f9d\u8d56taobao\u6e90\u7684\u901a\u901a\u7206\u70b8\u4e86\uff0c\u8fd9\u662f\u672c\u6587\u7684\u5199\u4f5c\u80cc\u666f\u3002\n\u6211\u4eec\u7684\u76ee\u6807\u5c31\u662f\u8ba9lock\u6587\u4ef6\u80fd\u5207\u6362\u5230\u5176\u4ed6\u6b63\u5e38\u5de5\u4f5c\u7684\u6e90\uff0c\u6bd4\u5982npmjs\u3002"),Object(p.b)("h3",{id:"\u539f\u56e0\u4e0e\u89e3\u51b3\u65b9\u6848"},"\u539f\u56e0\u4e0e\u89e3\u51b3\u65b9\u6848"),Object(p.b)("h4",{id:"lock\u6587\u4ef6\u5982\u4f55\u8bb0\u5f55\u6e90\u53ca\u5982\u4f55\u4fee\u590d"},"lock\u6587\u4ef6\u5982\u4f55\u8bb0\u5f55\u6e90\u53ca\u5982\u4f55\u4fee\u590d"),Object(p.b)("p",null,'\u6211\u4eec\u77e5\u9053lock\u6587\u4ef6\u4e3b\u8981\u7684\u4f5c\u7528\u662f\u8bb0\u5f55\u4f9d\u8d56\u53ca\u5176\u89e3\u6790\u7ed3\u679c\uff08\u7248\u672c\u3001\u6563\u5217\u503c\u7b49\uff09\uff0c\u4ece\u800c\u52a0\u901f\u4f9d\u8d56\u5b89\u88c5\u901f\u5ea6\u3002\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u6761\u89e3\u6790\u7ed3\u679c\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u5176\u4e2d\u5f88\u663e\u8457\u7684\u4e00\u4e2a\u6807\u5fd7\u5c31\u662f\u3010resolved "\u89e3\u6790\u7684\u6e90\u5730\u5740/\u5305\u4fe1\u606f"\u3011\u3002'),Object(p.b)("pre",null,Object(p.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token string">"@babel/core@7.4.3"</span><span class="token punctuation">:</span>\n  version <span class="token string">"7.4.3"</span>\n<span class="highlighted-line">  resolved <span class="token string">"https://registry.npm.taobao.org/@babel/core/download/@babel/core-7.4.3.tgz#198d6d3af4567be3989550d97e068de94503074f"</span></span>  integrity sha1<span class="token operator">-</span>GY1tOvRWe<span class="token operator">+</span>OYlVDZfgaN6UUDB08<span class="token operator">=</span>\n  dependencies<span class="token punctuation">:</span>\n    <span class="token string">"@babel/code-frame"</span> <span class="token string">"^7.0.0"</span>\n    <span class="token string">"@babel/generator"</span> <span class="token string">"^7.4.0"</span>\n    <span class="token string">"@babel/helpers"</span> <span class="token string">"^7.4.3"</span>\n    <span class="token string">"@babel/parser"</span> <span class="token string">"^7.4.3"</span>\n    <span class="token string">"@babel/template"</span> <span class="token string">"^7.4.0"</span>\n'}}))),Object(p.b)("p",null,"\u7531\u4e8e\u4e0d\u540c\u7684\u6e90\u5b83\u7684\u5305\u4fe1\u606f\u90fd\u662f\u4e00\u6837\u7684\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u8fd9\u4e9bresolved\u7684\u5b9e\u6548\u7684\u5185\u5bb9\u901a\u8fc7\u5b57\u7b26\u4e32\u5339\u914d\u7684\u65b9\u5f0f\u66ff\u6362\u6389\u5c31\u884c\u4e86\u3002"),Object(p.b)("p",null,"\u76f4\u63a5\u624b\u52a8\u62ab\u9732\u66ff\u6362\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u5462\uff0c\u6709\u4eba\u5df2\u7ecf\u5199\u4e86\u4e00\u4e2a",Object(p.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/kiegroup/lock-treatment-tool"}),"locktt\u5de5\u5177"),"\u4e13\u95e8\u505a\u8fd9\u4e8b\u3002"),Object(p.b)("p",null,"\u4f7f\u7528\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff1a"),Object(p.b)("pre",null,Object(p.b)("code",Object.assign({parentName:"pre"},{className:"language-bash","data-language":"bash","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token function">npm</span> i -g @kie/lock-treatment-tool // \u5b89\u88c5\u8fd9\u4e2a\u5305\nlocktt --registry<span class="token operator">=</span>https://registry.npmjs.org/ // \u66ff\u6362lock\u4e2d\u7684\u6e90\u4e3a\u6307\u5b9a\u6e90\n'}}))),Object(p.b)("p",null,"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u518d\u770b\u4e00\u4e0b\u8fd9\u4e2alocktt\u7684\u4ee3\u7801\u7ed3\u6784"),Object(p.b)("pre",null,Object(p.b)("code",Object.assign({parentName:"pre"},{}),"scripts/treat-lock-files.js // \u5904\u7406\u547d\u4ee4\u884c\u53c2\u6570\nlib/treat-locks/common.lock.js // \u7528\u4e8e\u66ff\u6362\u7684\u65b9\u6cd5\uff08\u6b63\u5219\uff09\nlib/treat-locks/yarn.lock.js // \u9488\u5bf9yarn\u7684\u4fee\u590d\u65b9\u6cd5\nlib/treat-locks/npm.lock.js // \u9488\u5bf9npm\u7684\u4fee\u590d\u65b9\u6cd5\n")),Object(p.b)("p",null,"\u5176\u4e2drun\u51fd\u6570\u5c31\u662f\u529f\u80fd\u4e3b\u5165\u53e3"),Object(p.b)("pre",null,Object(p.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// scripts/treat-lock-files.js </span>\n<span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Treating fields...\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> folderPath <span class="token operator">=</span> argv<span class="token punctuation">.</span>folder <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token string">\'.\'</span> <span class="token punctuation">:</span> argv<span class="token punctuation">.</span>folder<span class="token punctuation">;</span>\n  <span class="token keyword">const</span> outputFolderPath <span class="token operator">=</span> argv<span class="token punctuation">.</span>outputFolder <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> folderPath <span class="token punctuation">:</span> argv<span class="token punctuation">.</span>outputFolder<span class="token punctuation">;</span>\n  <span class="token keyword">const</span> npmOptions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NpmOptions</span><span class="token punctuation">(</span>\n    argv<span class="token punctuation">.</span>registry <span class="token operator">||</span> <span class="token function">getRegistryFromNpmCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    argv<span class="token punctuation">.</span>replacePackageLockRegistry<span class="token punctuation">,</span>\n    argv<span class="token punctuation">.</span>skipIntegrity<span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">npmLock</span><span class="token punctuation">(</span>folderPath<span class="token punctuation">,</span> outputFolderPath<span class="token punctuation">,</span> npmOptions<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4fee\u590dnpm.lock</span>\n  <span class="token function">yarnLock</span><span class="token punctuation">(</span>folderPath<span class="token punctuation">,</span> outputFolderPath<span class="token punctuation">,</span> npmOptions<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u4fee\u590dyarn.lock</span>\n<span class="token punctuation">}</span>\n'}}))),Object(p.b)("pre",null,Object(p.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// lib/treat-locks/yarn.lock.js</span>\n<span class="token keyword">const</span> <span class="token constant">FILE_NAME</span> <span class="token operator">=</span> <span class="token string">\'yarn.lock\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'fs\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> fileUtil <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'../utils/file.util\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> commonLock <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./common.lock\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> NpmOptions <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./npm.options\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">treatLine</span><span class="token punctuation">(</span><span class="token parameter">line<span class="token punctuation">,</span> npmOptions</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>line<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">\'  resolved "http\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// \u8c03\u7528\u901a\u7528\u66ff\u6362\u65b9\u6cd5</span>\n    <span class="token keyword">return</span> commonLock<span class="token punctuation">.</span><span class="token function">replaceHost</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> npmOptions<span class="token punctuation">.</span>registry<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">\'\\n\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>line<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">\'  integrity \'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> npmOptions<span class="token punctuation">.</span>skipIntegrity <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> line<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">\'\\n\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/**\n * In the yarn case the host from \'resolved\' should be replaced by &lt;INTERNAL_REGISTRY> https://github.com/yarnpkg/yarn/issues/5892#issuecomment-414796103\n * @param {string} folderPath the path where the lock file is\n * @param {string} outputFolder the path where the lock should be saved\n */</span>\n<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span>folderPath<span class="token punctuation">,</span> outputFolder<span class="token punctuation">,</span> npmOptions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NpmOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  fileUtil<span class="token punctuation">.</span><span class="token function">checkOutputFolderExistance</span><span class="token punctuation">(</span>outputFolder<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> filePath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>folderPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">FILE_NAME</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> output <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>outputFolder<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">FILE_NAME</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">\'utf8\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>npmOptions<span class="token punctuation">.</span>registry <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>filePath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file exist but the registry has not been set. Please use --registry=&lt;NPM_REGISTRY></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">let</span> content <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span> <span class="token comment">// \u65b0\u6587\u4ef6buffer</span>\n    <span class="token keyword">await</span> fileUtil<span class="token punctuation">.</span><span class="token function">readLineSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">line</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token comment">// \u9010\u884c\u626b\u63cf\u65e7\u6587\u4ef6\uff0c\u6309\u89c4\u5219\u66ff\u6362</span>\n      content <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token function">treatLine</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> npmOptions<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>output<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// buffer\u5199\u5165\u78c1\u76d8</span>\n    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>filePath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> treated</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>filePath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> does not exist</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> run<span class="token punctuation">;</span>\n'}}))),Object(p.b)("h3",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),Object(p.b)("p",null,"\u672c\u6587\u4ece\u6e90\u5931\u6548\u51fa\u53d1\uff0c\u5206\u6790\u4e86lock\u6587\u4ef6\u8bb0\u5f55\u6e90\u7684\u65b9\u5f0f\uff0c\u4ee5\u53ca\u6211\u4eec\u5982\u4f55\u8fdb\u884c\u4fee\u590d\uff0c\u5e76\u4e14\u987a\u5e26\u5206\u6790\u4e86\u4e00\u4e0b\u8fd9\u4e2a\u5de5\u5177\u7684\u8fd0\u884c\u539f\u7406\u3002"))}l.isMDXComponent=!0;var u=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];return[{id:"\u4f60\u53ef\u4ee5\u4ece\u672c\u6587\u4e86\u89e3\u5230",level:2,title:"\u4f60\u53ef\u4ee5\u4ece\u672c\u6587\u4e86\u89e3\u5230",children:[{id:"\u95ee\u9898\u80cc\u666f",level:3,title:"\u95ee\u9898\u80cc\u666f",children:[]},{id:"\u539f\u56e0\u4e0e\u89e3\u51b3\u65b9\u6848",level:3,title:"\u539f\u56e0\u4e0e\u89e3\u51b3\u65b9\u6848",children:[]},{id:"\u603b\u7ed3",level:3,title:"\u603b\u7ed3",children:[]}]}]},i={}}}]);
//# sourceMappingURL=141.7bd31f3d.chunk.js.map