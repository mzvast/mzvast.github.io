{"version":3,"sources":["routes/posts/2022/07/17-1351-from-zero-to-USD/document.mdx"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_runner_work_mzvast_github_io_mzvast_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","src","alt","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"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","file":"static/js/145.62b0bf5e.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.175,\"time\":70500,\"words\":235}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"你可以从本文了解到\"\n    }}>{`你可以从本文了解到`}</h2>\n    <h3 {...{\n      \"id\": \"背景\"\n    }}>{`背景`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/PixarAnimationStudios/USD\"\n      }}>{`USD(Universal Scene Description)`}</a>{`是pixar开发的文件格式，用来描述3D场景。可以类比photoshop的PSD文件格式。`}</p>\n    <p>{`我们可以用USD来描述一个3D场景，比如这个只有一个球的`}<a parentName=\"p\" {...{\n        \"href\": \"https://graphics.pixar.com/usd/release/tut_helloworld.html\"\n      }}>{`场景`}</a>{`。`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"http://graphics.pixar.com/usd/docs/attachments/368705904/568921522.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`就可以用这样的USD描述。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\",\n        \"data-language\": \"python\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">#usda 1.0</span>\\n\\n<span class=\\\"token keyword\\\">def</span> Xform <span class=\\\"token string\\\">\\\"hello\\\"</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">def</span> Sphere <span class=\\\"token string\\\">\\\"world\\\"</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`那么为了生成这样的文件并看到渲染效果我们就需要USD和usdview这个可视化工具。`}</p>\n    <p>{`对于windows和linux，nvidia有提供`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.nvidia.com/usd\"\n      }}>{`编译好的binary`}</a>{`。`}</p>\n    <p>{`而唯独没有macOS的prebuilt binary，所以我们只能自己编译。也就是本文的初衷：记录编译和踩坑过程。`}</p>\n    <h3 {...{\n      \"id\": \"如何在macos上编译安装usd\"\n    }}>{`如何在macOS上编译安装USD`}</h3>\n    <p>{`首先整体编译流程，需要参考官方流水线的`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/PixarAnimationStudios/USD/blob/c6ff717c76724b576a841c41c0814fadd98e0bc2/azure-pipelines.yml\"\n      }}>{`编译流程`}</a></p>\n    <p>{`下面的步骤无非是对其进行了新系统的适配和细化（毕竟那个流水线有点古老`}<inlineCode parentName=\"p\">{`macOS-10.15`}</inlineCode>{`）`}</p>\n    <h4 {...{\n      \"id\": \"预设\"\n    }}>{`预设`}</h4>\n    <p>{`假设用户可以正常使用terminal，已经安装了homebrew，并且网络环境良好(github什么的可以正常访问)。`}</p>\n    <h4 {...{\n      \"id\": \"准备c环境\"\n    }}>{`准备c++环境`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`安装cmake`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\",\n        \"data-language\": \"bash\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"brew <span class=\\\"token function\\\">install</span> cmake\\n\"\n        }\n      }}></code></pre>\n    <h4 {...{\n      \"id\": \"准备python环境\"\n    }}>{`准备python环境`}</h4>\n    <p>{`首先我这台电脑是12.4（最新的系统默认已经去除了python2，有自带python3，但没有链接到python。）`}</p>\n    <p>{`我们这里不用系统的python3，而是通过pyenv新安装一个python3。`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`安装`}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/pyenv/pyenv\"\n          }}>{`pyenv`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`正确安装python3.7.13。`}<a parentName=\"p\" {...{\n            \"href\": \"https://stackoverflow.com/questions/42245620/python-libpython3-5-dylib-not-found\"\n          }}>{`坑1`}</a><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/pyenv/pyenv/wiki#how-to-build-cpython-with-framework-support-on-os-x\"\n          }}>{`坑2`}</a></p>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\",\n        \"data-language\": \"bash\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token function\\\">env</span> <span class=\\\"token assign-left variable\\\">PYTHON_CONFIGURE_OPTS</span><span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"--enable-framework\\\"</span> pyenv <span class=\\\"token function\\\">install</span> <span class=\\\"token number\\\">3.7</span>.13\\n\"\n        }\n      }}></code></pre>\n    <p>{`此时可以看到我们系统的python版本情况。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\",\n        \"data-language\": \"bash\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"$ pyenv versions\\n* system \\n  <span class=\\\"token number\\\">3.7</span>.13\\n\"\n        }\n      }}></code></pre>\n    <p>{`让3.7.13变成系统默认的python版本。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\",\n        \"data-language\": \"bash\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"$ pyenv global <span class=\\\"token number\\\">3.7</span>.13\\n\"\n        }\n      }}></code></pre>\n    <ul>\n      <li parentName=\"ul\">{`安装python相关依赖`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\",\n        \"data-language\": \"bash\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"pip <span class=\\\"token function\\\">install</span> pyside2 PyOpenGL\\n\"\n        }\n      }}></code></pre>\n    <p>{`至此我们已经准备好了环境。`}</p>\n    <h4 {...{\n      \"id\": \"开始编译安装\"\n    }}>{`开始编译安装`}</h4>\n    <p>{`首先把代码down下来`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/PixarAnimationStudios/USD\"\n      }}>{`USD`}</a>{`，可以看到`}<inlineCode parentName=\"p\">{`azure-pipelines.yml`}</inlineCode>{`文件里面有编译相关的指令。`}</p>\n    <p>{`执行下面这条：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\",\n        \"data-language\": \"bash\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"python build_scripts/build_usd.py --generator Xcode --build <span class=\\\"token environment constant\\\">$HOME</span>/USDgen/build --src <span class=\\\"token environment constant\\\">$HOME</span>/USDgen/src <span class=\\\"token environment constant\\\">$HOME</span>/USDinst -v\\n\"\n        }\n      }}></code></pre>\n    <p>{`预期会看到一串安装日志，等待安装完成。（过程根据网络和机器性能差异可能需要20min以上）`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Building with settings:\n  USD source directory          /Users/work/@Projects/USD\n  USD install directory         /Users/work/USDinst\n  3rd-party source directory    /Users/work/USDgen/src\n  3rd-party install directory   /Users/work/USDinst\n  Build directory               /Users/work/USDgen/build\n  CMake generator               Xcode\n  CMake toolset                 Default\n  Downloader                    curl\n\n  Building                      Shared libraries\n    Variant                     Release\n    Imaging                     On\n      Ptex support:             Off\n      OpenVDB support:          Off\n      OpenImageIO support:      Off \n      OpenColorIO support:      Off \n      PRMan support:            Off\n    UsdImaging                  On\n      usdview:                  On\n    Python support              On\n      Python Debug:             Off\n      Python 3:                 On\n    Documentation               Off\n    Tests                       Off\n    Examples                    On\n    Tutorials                   On\n    Tools                       On\n    Alembic Plugin              Off\n      HDF5 support:             Off\n    Draco Plugin                Off\n    MaterialX Plugin            Off\n\n  Dependencies                  zlib, boost, TBB, OpenSubdiv\nSTATUS: Installing zlib...\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"后续环境变量设置\"\n    }}>{`后续环境变量设置`}</h4>\n    <p>{`预期安装成功会提示你把一串PTYHONPATH和PATH添加到环境变量中。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\",\n        \"data-language\": \"bash\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token builtin class-name\\\">export</span> <span class=\\\"token assign-left variable\\\">PYTHONPATH</span><span class=\\\"token operator\\\">=</span><span class=\\\"token environment constant\\\">$HOME</span>/USDinst/lib/python:<span class=\\\"token variable\\\">$PYTHONPATH</span>\\n<span class=\\\"token builtin class-name\\\">export</span> <span class=\\\"token assign-left variable\\\"><span class=\\\"token environment constant\\\">PATH</span></span><span class=\\\"token operator\\\">=</span><span class=\\\"token environment constant\\\">$HOME</span>/USDinst/bin:<span class=\\\"token environment constant\\\">$PATH</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`可以自行添加到`}<inlineCode parentName=\"p\">{`~/.zshrc`}</inlineCode>{`或者`}<inlineCode parentName=\"p\">{`~/.bashrc`}</inlineCode>{`中。`}</p>\n    <p>{`然后就可以运行`}<inlineCode parentName=\"p\">{`usdview`}</inlineCode>{`工具了。`}</p>\n    <h4 {...{\n      \"id\": \"运行usdview遇到的坑及解决\"\n    }}>{`运行usdview遇到的坑及解决`}</h4>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`usdview xxx.usda`}</inlineCode>{`报错OpenGL找不到路径。`}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/PixarAnimationStudios/USD/issues/1372\"\n        }}>{`参考`}</a></li>\n    </ul>\n    <p>{`问题的原因是这个库对于路径的解析存在bug，只判断了linux和windows，没有对macOS做判断。因此咱们需要patch一下文件`}<inlineCode parentName=\"p\">{`~/.pyenv/versions/3.7.13/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/OpenGL/platform/ctypesloader.py`}</inlineCode></p>\n    <p>{`由于这个文件pyenv直接安装在用户目录下，我们可以直接编辑它。\n在79行，把`}<inlineCode parentName=\"p\">{`fullName = util.find_library( name )`}</inlineCode>{`改成`}<inlineCode parentName=\"p\">{`fullName = '/System/Library/Frameworks/OpenGL.framework/OpenGL'`}</inlineCode></p>\n    <ul>\n      <li parentName=\"ul\">{`然后运行的时候可能会提示没有安装numPy，这是一个数学库，我们可以通过pip安装一下。`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\",\n        \"data-language\": \"bash\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"pip <span class=\\\"token function\\\">install</span> numpy\\n\"\n        }\n      }}></code></pre>\n    <p>{`应该到这里就没什么问题了，可以愉快的用usdview工具了。`}</p>\n    <h3 {...{\n      \"id\": \"回顾与总结\"\n    }}>{`回顾与总结`}</h3>\n    <p>{`这次USD的安装，涉及到c++和python编译相关的工具，同时也有一些坑(c++那块没什么大问题，主要是python坑多)，如果不注意，容易卡住。好在其他人在不同的地方对这些问题进行了解决，我们找到这些问题的解决方案，汇总起来，就是这篇文章的意义。一方面记录踩坑的不易，另一方面希望可以对你有用。`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"你可以从本文了解到\",\n    level: 2,\n    title: \"你可以从本文了解到\",\n    children: [\n        {\n              id: \"背景\",\n              level: 3,\n              title: \"背景\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"如何在macos上编译安装usd\",\n              level: 3,\n              title: \"如何在macOS上编译安装USD\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"回顾与总结\",\n              level: 3,\n              title: \"回顾与总结\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}