{"version":3,"sources":["routes/posts/2020/12/07-2322-official-website-project-review2/document.mdx"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_runner_work_mzvast_github_io_mzvast_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"sSAGaA,EAAc,CAACC,KAAO,aAAaC,QAAU,KAAMC,KAAO,MAAMC,MAAQ,IAS/EC,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,0DADR,0DAGAL,OAAAE,EAAA,EAAAF,CAAA,uGACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,uBADR,yBAGAL,OAAAE,EAAA,EAAAF,CAAA,ylBACAA,OAAAE,EAAA,EAAAF,CAAA,0FACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,iBACbC,gBAAiB,QACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,6uCAGhBX,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,qFADR,qFAGAL,OAAAE,EAAA,EAAAF,CAAA,8GACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,iBACbC,gBAAiB,QACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,8MAGhBX,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,2FADR,2FAGAL,OAAAE,EAAA,EAAAF,CAAA,yHACAA,OAAAE,EAAA,EAAAF,CAAA,qOACAA,OAAAE,EAAA,EAAAF,CAAA,8IACAA,OAAAE,EAAA,EAAAF,CAAA,wLACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,+BADR,+BAGAL,OAAAE,EAAA,EAAAF,CAAA,oOAKJJ,EAAWgB,gBAAiB,EACrB,IAAMC,EAAkB,WAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAmB,CAChD,CACET,GAAI,yDACJY,MAAO,EACPC,MAAO,yDACPC,SAAU,IAId,CACId,GAAI,sBACJY,MAAO,EACPC,MAAO,wBACPC,SAAU,IAId,CACId,GAAI,oFACJY,MAAO,EACPC,MAAO,oFACPC,SAAU,IAId,CACId,GAAI,0FACJY,MAAO,EACPC,MAAO,0FACPC,SAAU,IAId,CACId,GAAI,8BACJY,MAAO,EACPC,MAAO,8BACPC,SAAU,MAMDC,EAAc","file":"static/js/122.3c8c8046.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.445,\"time\":26700,\"words\":89}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"你可以从本文了解到\"\n    }}>{`你可以从本文了解到`}</h2>\n    <p>{`本文是某官网项目二期的一些回顾`}</p>\n    <h2 {...{\n      \"id\": \"razzleafter--？\"\n    }}>{`razzle+after = ？`}</h2>\n    <p>{`在项目一期中，我们选型是razzle就是为了能切换到SSR。而After并未列入初期选型。after是一个用于实现SSR的框架。after跟next可以类比，after用react-router作为路由基础，支持基于路由的代码分割，并且支持了基于路由的各种功能（数据预载等）。`}</p>\n    <p>{`可以简单看一下after的目录结构`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"data-language\": \"shell\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"packages/after.js/src\\n├── After.tsx // 路由（基于react-router）\\n├── Document.tsx // 页面模板\\n├── NotFoundComponent.tsx // <span class=\\\"token number\\\">404</span>页面\\n├── asyncComponent.tsx // 异步组件hoc，类似loadableComponent\\n├── ensureReady.ts // 浏览器确保路由对应的js片段load完成后，将预渲染数据进行传给路由所对应的组件作为初始值\\n├── getAssets.ts // 从webpack打出的包中取出路由对应的js，css\\n├── index.tsx\\n├── loadInitialProps.tsx // 匹配路由，执行getInitialProps\\n├── render.tsx // render成html string\\n├── serializeData.tsx // 以script标签作为载体，进行序列化、反序列化\\n├── <span class=\\\"token builtin class-name\\\">test</span>\\n├── types.ts\\n└── utils.ts\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"如何让ssr基于ua提供pc和h5双版本？\"\n    }}>{`如何让SSR基于ua提供PC和H5双版本？`}</h2>\n    <p>{`UA侦测，在路由上对PC/H5代码分割。比如`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"data-language\": \"shell\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"src\\n├── pages // PC路由\\n├── pages-h5 // H5 路由\\n├── components // PC组件\\n└── components-h5 // H5组件\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"如何让ssr结合ssg、csr提高整体可用性\"\n    }}>{`如何让SSR结合SSG、CSR提高整体可用性`}</h2>\n    <p>{`按不同需求场景，采用不同的渲染方式。`}</p>\n    <p>{`SSG：不需要SEO、不变的页面，用SSG预渲染。然后在SSR的路由判定中适时返回这些文件。`}</p>\n    <p>{`CSR：负载压力大的时候，直接切成CSR，增加QPS能力。`}</p>\n    <p>{`极端SSR：对于爬虫特殊照顾，通过UA判定，只给他SSR。其他都走CSR/SSG。`}</p>\n    <h2 {...{\n      \"id\": \"ssr注意的点\"\n    }}>{`SSR注意的点`}</h2>\n    <p>{`Node单线程，不要污染全局变量，渲染前后环境要保持一致，否则影响下一次渲染。`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"你可以从本文了解到\",\n    level: 2,\n    title: \"你可以从本文了解到\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"razzleafter--？\",\n    level: 2,\n    title: \"razzle+after = ？\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"如何让ssr基于ua提供pc和h5双版本？\",\n    level: 2,\n    title: \"如何让SSR基于ua提供PC和H5双版本？\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"如何让ssr结合ssg、csr提高整体可用性\",\n    level: 2,\n    title: \"如何让SSR结合SSG、CSR提高整体可用性\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"ssr注意的点\",\n    level: 2,\n    title: \"SSR注意的点\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}