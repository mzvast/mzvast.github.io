{"version":3,"sources":["routes/posts/2018/04-09-js-css-text-overflow/document.mdx"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_runner_work_mzvast_github_io_mzvast_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","align","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"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","file":"static/js/102.928e5a7c.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.645,\"time\":38700,\"words\":129}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"需求描述\"\n    }}>{`需求描述`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`一个不定宽度的 div，其中的文本当超出 div 宽度时候自动缩略成…`}</li>\n      <li parentName=\"ul\">{`中英文混排`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"纯-css-的方案（推荐）\"\n    }}>{`纯 CSS 的方案（推荐）`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\",\n        \"data-language\": \"css\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token selector\\\">div</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">overflow</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'hidden'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">whiteSpace</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'nowrap'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">textOverflow</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'ellipsis'</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`textOverflow 这个属性，有“clip|ellipsis|string”三种属性，作用分别如下`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`值`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`描述`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`clip`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`修剪文本。`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`ellipsis`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`显示省略符号来代表被修剪的文本。`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`使用给定的字符串来代表被修剪的文本。`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"纯-js-的方案（不推荐）\"\n    }}>{`纯 JS 的方案（不推荐）`}</h2>\n    <p>{`JS 在实现这块就显得比较不便，首先，仅仅根据字符数量进行截取，不能很好适应动态的 div 宽度。这里仅给出固定宽度（rem 定义 div 宽度）下可能的办法（但是没法保证不同浏览器和不同默认字体下的一致性）。下面这个 sub 函数就是截取固定长度（先把中文统一转成英文字符计算宽度）。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token class-name\\\">String</span><span class=\\\"token punctuation\\\">.</span>prototype<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">len</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">replace</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token regex\\\">/[^\\\\x00-\\\\xff]/g</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'rr'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token class-name\\\">String</span><span class=\\\"token punctuation\\\">.</span>prototype<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">sub</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">n</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">let</span> r <span class=\\\"token operator\\\">=</span> <span class=\\\"token regex\\\">/[^\\\\x00-\\\\xff]/g</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">replace</span><span class=\\\"token punctuation\\\">(</span>r<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'mm'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">&lt;=</span> n<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token comment\\\">// n = n - 3;</span>\\n    <span class=\\\"token keyword\\\">let</span> m <span class=\\\"token operator\\\">=</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">floor</span><span class=\\\"token punctuation\\\">(</span>n <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> m<span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">substr</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> i<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">replace</span><span class=\\\"token punctuation\\\">(</span>r<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'mm'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">>=</span> n<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">substr</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> i<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">'...'</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"需求描述\",\n    level: 2,\n    title: \"需求描述\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"纯-css-的方案（推荐）\",\n    level: 2,\n    title: \"纯 CSS 的方案（推荐）\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"纯-js-的方案（不推荐）\",\n    level: 2,\n    title: \"纯 JS 的方案（不推荐）\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}