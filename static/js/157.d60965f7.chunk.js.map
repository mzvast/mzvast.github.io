{"version":3,"sources":["routes/posts/2023/04/29-0029-面向开发人员的-ChatGPT-提示工程-lesson5-inferring/document.mdx"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_runner_work_mzvast_github_io_mzvast_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"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","file":"static/js/157.d60965f7.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"4 min read\",\"minutes\":3.045,\"time\":182700,\"words\":609}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"你可以从本文了解到\"\n    }}>{`你可以从本文了解到`}</h2>\n    <p>{`产品评论文字`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\",\n        \"data-language\": \"python\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"lamp_review <span class=\\\"token operator\\\">=</span> <span class=\\\"token triple-quoted-string string\\\">\\\"\\\"\\\"\\nNeeded a nice lamp for my bedroom, and this one had \\\\\\nadditional storage and not too high of a price point. \\\\\\nGot it fast.  The string to our lamp broke during the \\\\\\ntransit and the company happily sent over a new one. \\\\\\nCame within a few days as well. It was easy to put \\\\\\ntogether.  I had a missing part, so I contacted their \\\\\\nsupport and they very quickly got me the missing piece! \\\\\\nLumina seems to me to be a great company that cares \\\\\\nabout their customers and products!!\\n\\\"\\\"\\\"</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"情绪（正面负面）\"\n    }}>{`情绪（正面/负面）`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\",\n        \"data-language\": \"python\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"prompt <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"\\\"\\\"\\n以下产品评论的情感是什么、 \\n用三条反斜线划定界限？\\n\\nReview text: '''</span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>lamp_review<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">'''\\n\\\"\\\"\\\"</span></span>\\nresponse <span class=\\\"token operator\\\">=</span> get_completion<span class=\\\"token punctuation\\\">(</span>prompt<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>response<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\"># Positive</span>\\n\"\n        }\n      }}></code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\",\n        \"data-language\": \"python\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"prompt <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"\\\"\\\"\\n以下产品评论的情感是什么、 \\n用三条反斜线划定界限？\\n\\n请用一个词来回答，可以是 \\\"正面 \\\"或 \\\"负面\\\"。\\n或 \\\"负面\\\"。\\n\\nReview text: '''</span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>lamp_review<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">'''\\n\\\"\\\"\\\"</span></span>\\nresponse <span class=\\\"token operator\\\">=</span> get_completion<span class=\\\"token punctuation\\\">(</span>prompt<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>response<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\"># 正面</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"识别情绪类型\"\n    }}>{`识别情绪类型`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\",\n        \"data-language\": \"python\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"prompt <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"\\\"\\\"\\n确定以下评论的作者所表达的情绪的清单。包括不超过 \\n列表中的五个项目。你的答案的格式为 \\n用逗号隔开的小写词语。\\n\\nReview text: '''</span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>lamp_review<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">'''\\n\\\"\\\"\\\"</span></span>\\nresponse <span class=\\\"token operator\\\">=</span> get_completion<span class=\\\"token punctuation\\\">(</span>prompt<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>response<span class=\\\"token punctuation\\\">)</span>\\nsatisfied<span class=\\\"token punctuation\\\">,</span> grateful<span class=\\\"token punctuation\\\">,</span> impressed<span class=\\\"token punctuation\\\">,</span> content<span class=\\\"token punctuation\\\">,</span> pleased\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"识别愤怒\"\n    }}>{`识别愤怒`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\",\n        \"data-language\": \"python\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"prompt <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"\\\"\\\"\\n以下评论的作者是在表达愤怒吗？\\n该评论用三个反斜线划定。\\n请给出您的答案，是或不是。\\n\\nReview text: '''</span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>lamp_review<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">'''\\n\\\"\\\"\\\"</span></span>\\nresponse <span class=\\\"token operator\\\">=</span> get_completion<span class=\\\"token punctuation\\\">(</span>prompt<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>response<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\"># 不是。</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"从客户评论中提取产品和公司名称\"\n    }}>{`从客户评论中提取产品和公司名称`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\",\n        \"data-language\": \"python\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"prompt <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"\\\"\\\"\\n从评论文本中找出以下物品： \\n- 评论者购买的物品\\n- 制造该物品的公司\\n\\n该评论以三条反斜线为界。\\n将你的响应格式化为一个JSON对象，以 \\n\\\"Item \\\"和 \\\"Brand \\\"为键。\\n如果信息不存在，使用 \\\"未知 \\\"作为值。\\n作为值。\\n使你的响应尽可能的短。\\n  \\nReview text: '''</span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>lamp_review<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">'''\\n\\\"\\\"\\\"</span></span>\\nresponse <span class=\\\"token operator\\\">=</span> get_completion<span class=\\\"token punctuation\\\">(</span>prompt<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>response<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\"># {</span>\\n<span class=\\\"token comment\\\">#   \\\"Item\\\": \\\"lamp with additional storage\\\",</span>\\n<span class=\\\"token comment\\\">#   \\\"Brand\\\": \\\"Lumina\\\"</span>\\n<span class=\\\"token comment\\\"># }</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"一次执行多个任务\"\n    }}>{`一次执行多个任务`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\",\n        \"data-language\": \"python\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"prompt <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"\\\"\\\"\\n从评论文本中找出以下物品： \\n- 情绪（积极或消极）\\n- 评论者是否在表达愤怒？(真或假)\\n- 评论者购买的物品\\n- 制造该物品的公司\\n\\n评论以三条反斜线为界。\\n将您的回复格式化为JSON对象，其中包括 \\n\\\"Sentiment\\\", \\\"Anger\\\", \\\"Item \\\"和 \\\"Brand \\\"作为键。\\n如果这些信息不存在，请使用 \\\"未知\\\"。\\n作为值。\\n使你的回答尽可能简短。\\n将 \\\"愤怒 \\\"的值格式化为一个布尔值。\\n\\nReview text: '''</span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>lamp_review<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">'''\\n\\\"\\\"\\\"</span></span>\\nresponse <span class=\\\"token operator\\\">=</span> get_completion<span class=\\\"token punctuation\\\">(</span>prompt<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>response<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\"># {</span>\\n<span class=\\\"token comment\\\">#   \\\"Sentiment\\\": \\\"积极\\\",</span>\\n<span class=\\\"token comment\\\">#   \\\"Anger\\\": false,</span>\\n<span class=\\\"token comment\\\">#   \\\"Item\\\": \\\"灯\\\",</span>\\n<span class=\\\"token comment\\\">#   \\\"Brand\\\": \\\"Lumina\\\"</span>\\n<span class=\\\"token comment\\\"># }</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"推断主题\"\n    }}>{`推断主题`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\",\n        \"data-language\": \"python\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"story <span class=\\\"token operator\\\">=</span> <span class=\\\"token triple-quoted-string string\\\">\\\"\\\"\\\"\\nIn a recent survey conducted by the government, \\npublic sector employees were asked to rate their level \\nof satisfaction with the department they work at. \\nThe results revealed that NASA was the most popular \\ndepartment with a satisfaction rating of 95%.\\n\\nOne NASA employee, John Smith, commented on the findings, \\nstating, \\\"I'm not surprised that NASA came out on top. \\nIt's a great place to work with amazing people and \\nincredible opportunities. I'm proud to be a part of \\nsuch an innovative organization.\\\"\\n\\nThe results were also welcomed by NASA's management team, \\nwith Director Tom Johnson stating, \\\"We are thrilled to \\nhear that our employees are satisfied with their work at NASA. \\nWe have a talented and dedicated team who work tirelessly \\nto achieve our goals, and it's fantastic to see that their \\nhard work is paying off.\\\"\\n\\nThe survey also revealed that the \\nSocial Security Administration had the lowest satisfaction \\nrating, with only 45% of employees indicating they were \\nsatisfied with their job. The government has pledged to \\naddress the concerns raised by employees in the survey and \\nwork towards improving job satisfaction across all departments.\\n\\\"\\\"\\\"</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"推断-5-个主题\"\n    }}>{`推断 5 个主题`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\",\n        \"data-language\": \"python\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"prompt <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"\\\"\\\"\\n确定在以下文本中讨论的五个主题。\\n下面的文字是由三个反斜线划定的。\\n\\n使每个项目有一到两个字的长度。\\n\\n将你的回答格式化为由逗号分隔的项目清单。\\n\\nText sample: '''</span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>story<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">'''\\n\\\"\\\"\\\"</span></span>\\nresponse <span class=\\\"token operator\\\">=</span> get_completion<span class=\\\"token punctuation\\\">(</span>prompt<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>response<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\"># 主题清单：</span>\\n<span class=\\\"token comment\\\"># - 调查公共部门员工的满意度</span>\\n<span class=\\\"token comment\\\"># - NASA是最受欢迎的部门</span>\\n<span class=\\\"token comment\\\"># - NASA员工对工作的评价</span>\\n<span class=\\\"token comment\\\"># - 社会保障管理局的满意度最低</span>\\n<span class=\\\"token comment\\\"># - 政府承诺改善所有部门的工作满意度</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"对某些主题进行新闻提醒\"\n    }}>{`对某些主题进行新闻提醒`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\",\n        \"data-language\": \"python\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"response<span class=\\\"token punctuation\\\">.</span>split<span class=\\\"token punctuation\\\">(</span>sep<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">','</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\"># ['主题清单：\\\\n- 调查公共部门员工的满意度\\\\n- NASA是最受欢迎的部门\\\\n- NASA员工对工作的评价\\\\n- 社会保障管理局的满意度最低\\\\n- 政府承诺改善所有部门的工作满意度']</span>\\n\\ntopic_list <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token string\\\">\\\"nasa\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"local government\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"engineering\\\"</span><span class=\\\"token punctuation\\\">,</span> \\n    <span class=\\\"token string\\\">\\\"employee satisfaction\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"federal government\\\"</span>\\n<span class=\\\"token punctuation\\\">]</span>\\n\\nprompt <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"\\\"\\\"\\n判断以下列表中的每个项目是否是以下文本中的一个主题？\\n中的每一项是否是下面文本中的一个主题，该文本\\n是用三条反斜线划定的。\\n\\n请以列表的形式给出你的答案，每个主题的答案为0或1。\\n\\nList of topics: </span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token string\\\">\\\", \\\"</span><span class=\\\"token punctuation\\\">.</span>join<span class=\\\"token punctuation\\\">(</span>topic_list<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">\\n\\nText sample: '''</span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>story<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">'''\\n\\\"\\\"\\\"</span></span>\\nresponse <span class=\\\"token operator\\\">=</span> get_completion<span class=\\\"token punctuation\\\">(</span>prompt<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>response<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\"># nasa: 1</span>\\n<span class=\\\"token comment\\\"># local government: 0</span>\\n<span class=\\\"token comment\\\"># engineering: 0</span>\\n<span class=\\\"token comment\\\"># employee satisfaction: 1</span>\\n<span class=\\\"token comment\\\"># federal government: 1</span>\\n\\ntopic_dict <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>i<span class=\\\"token punctuation\\\">.</span>split<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">': '</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">.</span>split<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">': '</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">for</span> i <span class=\\\"token keyword\\\">in</span> response<span class=\\\"token punctuation\\\">.</span>split<span class=\\\"token punctuation\\\">(</span>sep<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">'\\\\n'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">if</span> topic_dict<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'nasa'</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"ALERT: New NASA story!\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\"># ALERT: New NASA story!</span>\\n\"\n        }\n      }}></code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"你可以从本文了解到\",\n    level: 2,\n    title: \"你可以从本文了解到\",\n    children: [\n        {\n              id: \"情绪（正面负面）\",\n              level: 3,\n              title: \"情绪（正面/负面）\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"识别情绪类型\",\n              level: 3,\n              title: \"识别情绪类型\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"识别愤怒\",\n              level: 3,\n              title: \"识别愤怒\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"从客户评论中提取产品和公司名称\",\n              level: 3,\n              title: \"从客户评论中提取产品和公司名称\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"一次执行多个任务\",\n              level: 3,\n              title: \"一次执行多个任务\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"推断主题\",\n              level: 3,\n              title: \"推断主题\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"推断-5-个主题\",\n              level: 3,\n              title: \"推断 5 个主题\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"对某些主题进行新闻提醒\",\n              level: 3,\n              title: \"对某些主题进行新闻提醒\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}