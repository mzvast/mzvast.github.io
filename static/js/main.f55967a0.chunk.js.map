{"version":3,"sources":["components/Pagination.module.css","serviceWorker.ts","AnalyticsWrap.tsx","index.tsx","components/BlogIndexPage.module.css","service/ThemeService.ts","utils/formats.ts","components/ArticleMeta.tsx","components/ArticleMeta.module.css","siteMetadata.ts","components/Bio.tsx","utils/getGravatarURL.ts","components/Pagination.tsx","components/SearchBox.tsx","components/BlogIndexPage.tsx","components/NotFoundPage.tsx","components/LoadingIndicator.tsx","components/BlogLayout.tsx","components/ArticleToc.tsx","components/BlogPostLayout.tsx","routes/posts/index.ts","routes/index.tsx","components/LoadingIndicator.module.css","components/BlogLayout.module.css","components/ArticleSummary.tsx","components/ArticleSummary.module.css","components/Bio.module.css","components/ArticleToc.module.css","components/BlogPostLayout.module.css","../node_modules/poindexter/runtime sync"],"names":["module","exports","Pagination","previous","next","Boolean","window","location","hostname","match","insertScript","src","hm","document","createElement","s","getElementsByTagName","parentNode","insertBefore","AnalyticsWrap","props","gtag","dataLayer","push","arguments","Date","addGoogle","console","log","children","register","routes","main","_main","Object","asyncToGenerator","regenerator_default","a","mark","_callee","navigation","wrap","_context","prev","ThemeService","syncTheme","createBrowserNavigation","getRoute","process","renderer","ReactDOM","hydrate","react_default","react_navi_helmet_async_dist_es","src_AnalyticsWrap","dist_es","hashScrollBehavior","getElementById","navigator","serviceWorker","ready","then","registration","unregister","stop","apply","this","title","themeButton","articlesList","footer","theme","getTheme","body","setAttribute","localStorage","setItem","getItem","__webpack_exports__","months","ArticleMeta","_ref","readingTimeElement","blogRoot","data","readingTime","minutes","Math","max","round","cups","Fragment","className","styles","Array","fill","join","dateTime","date","toUTCString","dateString","monthName","getMonth","dayOfMonth","getDate","fourDigitYear","getFullYear","concat","formatDate","tags","length","map","tag","key","es","href","siteMetadata","author","description","indexPageSize","Bio","photoURL","email","size","_ref$defaultURL","defaultURL","hash","md5","toLowerCase","trim","encodeURIComponent","getGravatarURL","alt","pageCount","pageNumber","String","pages","current","count","isClientLoad","Wrap","styled","Box","_templateObject","Popup","_templateObject2","Row","Ellipsis","_templateObject3","SearchBox","_useState","useState","_useState2","slicedToArray","query","setQuery","_useState3","_useState4","result","setResult","_useState5","_useState6","visible","setVisible","ref","useRef","useEffect","client","init","index","search","useClickAway","onFocus","value","onChange","e","target","filter","item","path","style","boxShadow","split","BlogIndexPage","postRoutes","onClick","getAttribute","setTheme","components_Bio","components_SearchBox","route","url","ArticleSummary","components_Pagination","float","NotFoundPage","NotFound","LoadingIndicator","active","BlogLayout","isViewingIndex","loadingRoute","useLoadingRoute","container","components_LoadingIndicator","render","components_NotFoundPage","ArticleToc","toc","tableOfContents","blockquote","TocItem","id","data-key","BlogPostLayout","_useCurrentRoute","useCurrentRoute","spoiler","_ref2","useView","connect","content","head","MDXComponent","disqusConfig","pathname","identifier","slug","name","header","dist_index_es","components","Link","wrapper","_ref3","components_ArticleToc","lib_default","DiscussionEmbed","shortname","config","bio","links","previousDetails","marginBottom","nextDetails","postModules","./2000-01-05-welcome/post.ts","__webpack_require__","bind","./2015/07-04-centos6-vps-wordpress/post.ts","./2015/07-05-wordpress-ip-site-to-www/post.ts","./2015/07-07-vagrant-experience/post.ts","./2015/07-08-docker-on-windows-experience/post.ts","./2015/07-29-time-and-space/post.ts","./2016/03-10-I've-never-been-to-me/post.ts","./2016/08-28-angular-component-ui-router/post.ts","./2016/11-16-raspberrypi-realvnc/post.ts","./2016/11-17-hello-hugo-and-more/post.ts","./2016/11-19-hello-kcp/post.ts","./2016/11-23-python-pyenv/post.ts","./2016/11-29-chcp-utf8/post.ts","./2016/11-29-proxychains-ng-ipv6-error/post.ts","./2016/11-29-python-conda/post.ts","./2016/12-01-win10-remove-uninstalled-app-from-notification-list/post.ts","./2016/12-07-about-wsl/post.ts","./2017/03-15-ios-writing-test/post.ts","./2017/03-19-markdown-image-tool-picorz/post.ts","./2017/03-22-spring-boot-livereload/post.ts","./2017/09-14-find-my-lost-heart/post.ts","./2018/04-09-js-css-text-overflow/post.ts","./2018/07-10-font-load/post.ts","./2019/02/01-cra-ts/post.ts","./2019/02/03-defining-component-apis-in-react/post.ts","./2019/02/12-react-play-with-styled-theming/post.ts","./2019/02/13-fira-code-font-setup/post.ts","./2019/02/15-git-subtree/post.ts","./2019/07/29-start-loving-change/post.ts","./2019/12/11-cra-polyfill/post.ts","./2019/12/29-disqus-addon/post.ts","./2019/12/29-velop-rewired/post.ts","./2020/06/30-how-to-build-screen-projection-app-with-WebRTC/post.ts","./2020/06/30-用hygen代码生成器优化效率/post.ts","./2020/07/08-theme-switch/post.ts","./2020/08/28-HTTP-headers/post.ts","./2020/08/28-performance-optimize-rethink/post.ts","./2020/09/04-tab-communication-topic/post.ts","./2020/09/05-omni-automation/post.ts","./2020/09/22-2200-多巴胺vs内啡肽/post.ts","./2020/09/22-2236-Why-does-academic-qualification-depreciate/post.ts","./2020/09/22-2332-react-fc/post.ts","./2020/09/23-0034-the-most-successful-developers-share-more-than-they-take/post.ts","./2020/09/23-1825-design-principles-of-software-development/post.ts","./2020/09/26-0126-Preparing-for-a-Tech-Talk/post.ts","./2020/09/26-1736-better-creating/post.ts","./2020/10/17-2313-official-project-review/post.ts","./2020/11/07-2114-how-to-debug-react-without-pain/post.ts","./2020/12/03-2102-General-Principles-of-software-development/post.ts","./2020/12/03-2230-Management-Principles-of-software-development/post.ts","./2020/12/03-2335-Coding-Principles-of-software-development/post.ts","./2020/12/04-0007-Evolution-principles-of-software-development/post.ts","./2020/12/04-0023-Testing-Principles-of-software-development/post.ts","./2020/12/07-2322-official-website-project-review2/post.ts","./2020/12/08-0152-official-website-project-review-part3/post.ts","./2020/12/09-0107-talk-of-sharing-ssr-project/post.ts","./2020/12/14-0059-what-we-can-learn-from-Dao-Sheng-He-Fu/post.ts","./2021/09/12-1514-Mermaid-And-Mdx/post.ts","./2021/12/27-1728-Two-History-Bug/post.ts","./2021/12/27-2027-Fix-Git-Merge-Mis-Deleting-files/post.ts","./2021/12/30-1332-Migrate-Razzle-from-3-to-4/post.ts","./2022/01/12-1915-iCopy-release-new-version/post.ts","./2022/01/19-1400-for-await-...-of/post.ts","./2022/05/15-1355-vite-webassembly-rust/post.ts","./2022/06/14-1331-how-to-build-a-level-logger/post.ts","./2022/06/15-1100-How-to-treat-lock-file/post.ts","./2022/06/21-1725-omni-outliner-plugin-try-try/post.ts","importPost","postPathnames","keys","datePattern","postDetails","slugify","replace","dateMatch","parseInt","posts","sortBy","reverse","i","getPage","Navi","_callee2","post","getContent","meta","previousSlug","previousPost","nextSlug","nextPost","previousPostDetails","nextPostDetails","_context2","sent","default","objectWithoutProperties","abrupt","getData","req","context","objectSpread","getView","_getView","_ref4","other","chunks","chunk","chunkPagePairs","pageTitle","method","Promise","all","resolve","_x3","components_BlogIndexPage","_x","_x2","compose","withContext","mountpath","withView","test","components_BlogLayout","mount","/","shift","/page","/1","redirect","fromPairs","/posts","components_BlogPostLayout","/tags","lazy","/about","/rss","LoadingIndicator-animation","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_navi__WEBPACK_IMPORTED_MODULE_1__","_ArticleMeta__WEBPACK_IMPORTED_MODULE_2__","_ArticleSummary_module_css__WEBPACK_IMPORTED_MODULE_3__","_ArticleSummary_module_css__WEBPACK_IMPORTED_MODULE_3___default","webpackEmptyContext","Error","code"],"mappings":"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","file":"static/js/main.f55967a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pagination\":\"Pagination_Pagination__2Xt2h\",\"previous\":\"Pagination_previous__1akUm\",\"next\":\"Pagination_next__7Ba4Y\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","/**\n * @file [BaiduWrap]\n * @author [mzvast]\n * @email [mzvast@gmail.com]\n * @create date 2020-09-05 21:58:50\n */\n/* eslint-disable max-len,babel/new-cap,operator-linebreak,fecs-export-on-declare,space-before-function-paren */\n// import React, {PureComponent} from 'react';\n\nfunction insertScript(src: string) {\n    var hm = document.createElement('script');\n    hm.src = src;\n    var s = document.getElementsByTagName('script')[0];\n    // @ts-ignore\n    s.parentNode.insertBefore(hm, s);\n}\n\nfunction addBaidu() {\n    window['_hmt'] = window['_hmt'] || [];\n    insertScript('https://hm.baidu.com/hm.js?edf54a88a7b7ef99363b4a726e7b2dc6');\n}\nfunction addGoogle() {\n    // @ts-ignore\n    window.dataLayer = window.dataLayer || [];\n    function gtag() {\n        // @ts-ignore\n        window.dataLayer.push(arguments);\n    }\n    // @ts-ignore\n    gtag('js', new Date());\n    // @ts-ignore\n    gtag('config', 'UA-87665383-1');\n    insertScript('https://www.googletagmanager.com/gtag/js?id=UA-87665383-1');\n}\n\nconst AnalyticsWrap = (props) => {\n    const shouldLoad = process.env.NODE_ENV === 'production';\n    if (shouldLoad) {\n        addBaidu();\n        addGoogle();\n        console.log('render::AnalyticsWrap');\n    }\n    return props.children;\n};\nexport default AnalyticsWrap;\n","import register from 'navi-scripts/register'\nimport { createBrowserNavigation } from 'navi'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Router } from 'react-navi'\nimport HelmetProvider from 'react-navi-helmet-async'\nimport './index.module.css'\nimport routes from './routes'\nimport * as serviceWorker from './serviceWorker'\nimport ThemeService from './service/ThemeService'\nimport AnalyticsWrap from './AnalyticsWrap'\n\n// `register()` is responsible for exporting your app's pages and App\n// component to the static renderer, and for starting the app with the\n// `main()` function when running within a browser.\nregister({\n  // Specify the pages that navi-app should statically build, by passing in a\n  // Switch object.\n  routes,\n\n  // This will only be called when loading your app in the browser. It won't\n  // be called when performing static generation.\n  async main() {\n    ThemeService.syncTheme();\n    let navigation = createBrowserNavigation({ routes })\n\n    // Wait until the navigation has loaded the page's content, or failed to do\n    // so. If you want to load other data in parallel while the initial page is\n    // loading, make sure to start loading before this line.\n    await navigation.getRoute()\n\n    // React requires that you call `ReactDOM.hydrate` if there is statically\n    // rendered content in the root element, but prefers us to call\n    // `ReactDOM.render` when it is empty.\n    let hasStaticContent = process.env.NODE_ENV === 'production'\n    let renderer = hasStaticContent ? ReactDOM.hydrate : ReactDOM.render\n\n    // Start react, passing in the current navigation state and\n    // rendering the top-level view.\n    renderer(\n      <HelmetProvider>\n        <AnalyticsWrap>\n          <Router hashScrollBehavior='smooth' navigation={navigation} />\n        </AnalyticsWrap>\n      </HelmetProvider>,\n      document.getElementById(\"root\")\n    )\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister()\n  },\n})\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BlogIndexPage_title__341hM\",\"themeButton\":\"BlogIndexPage_themeButton__1pxGL\",\"articlesList\":\"BlogIndexPage_articlesList__1V39R\",\"footer\":\"BlogIndexPage_footer__1vkZQ\"};","class ThemeService {\n    syncTheme() {\n        const theme = this.getTheme();\n        document.body.setAttribute('class', theme);\n    }\n    setTheme(theme) {\n        localStorage.setItem('theme', theme);\n        document.body.setAttribute('class', theme);\n    }\n    getTheme() {\n        return localStorage.getItem('theme') || 'light';\n    }\n}\n\nexport default new ThemeService();\n","export let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\nexport function formatDate(dateString) {\n  let date = new Date(dateString)\n  let monthName = months[date.getMonth()]\n  let dayOfMonth = date.getDate()\n  let fourDigitYear = date.getFullYear()\n\n  return `${monthName} ${dayOfMonth}, ${fourDigitYear}`\n}","import { join } from 'path'\nimport React from 'react'\nimport { Link } from 'react-navi'\nimport { formatDate } from '../utils/formats'\nimport styles from './ArticleMeta.module.css'\n\ninterface ArticleMetaProps {\n  blogRoot: string\n  data: any\n  readingTime?: any\n}\n\nfunction ArticleMeta({ blogRoot, data, readingTime }: ArticleMetaProps) {\n  let readingTimeElement\n  if (readingTime) {\n    let minutes = Math.max(Math.round(readingTime.minutes), 1)\n    let cups = Math.round(minutes / 5)\n    readingTimeElement = (\n      <React.Fragment>\n        {' '}\n        &bull;{' '}\n        <span className={styles.readingTime}>\n          {new Array(cups || 1).fill('☕️').join('')} {minutes} min read\n        </span>\n      </React.Fragment>\n    )\n  }\n\n  return (\n    <small className={styles.ArticleMeta}>\n      <time dateTime={data.date.toUTCString()}>{formatDate(data.date)}</time>\n      {data.tags && data.tags.length && (\n        <>\n          {' '}\n          &bull;{' '}\n          <ul className={styles.tags}>\n            {data.tags.map(tag => (\n              <li key={tag}>\n                <Link href={join(blogRoot, 'tags', tag)}>{tag}</Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n      {readingTimeElement || null}\n    </small>\n  )\n}\n\nexport default ArticleMeta\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"ArticleMeta_tags__1IJ9w\"};","export default {\n  // The blog's title as it appears in the layout header, and in the document\n  // <title> tag.\n  title: 'OverRainbow',\n\n  author: 'mzvast',\n  description:\n    \"If Nothing Changes, Nothing Is Going to Change\",\n\n  // The number of posts to a page on the site index.\n  indexPageSize: 10,\n}\n","import React from 'react'\nimport styles from './Bio.module.css'\nimport { getGravatarURL } from '../utils/getGravatarURL'\n\ninterface BioProps {\n  className?: string\n}\n\nfunction Bio(props: BioProps) {\n  let photoURL = getGravatarURL({\n    email: \"mzvast@gmail.com\",\n    size: 56,\n  })\n\n  return (\n    <div\n      className={`\n      ${styles.Bio}\n      ${props.className || ''}\n    `}>\n      <img src={photoURL} alt=\"Me\" />\n      <p>\n        Personal blog by <a href=\"https://twitter.com/mzvast/\">mzvast</a>.\n        <br />\n        If Nothing Changes, Nothing Is Going to Change\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import md5 from 'blueimp-md5'\n\ninterface GravatarOptions {\n  email: string,\n  size: number,\n  defaultURL?: string,\n}\n\nexport function getGravatarURL({ email, size, defaultURL = 'identicon' }: GravatarOptions) {\n  let hash = md5(email.toLowerCase().trim())\n  return `https://www.gravatar.com/avatar/${hash}.jpg?s=${size}&d=${encodeURIComponent(defaultURL)}`\n}\n","import { join } from 'path'\nimport React from 'react'\nimport { Link } from 'react-navi'\nimport styles from './Pagination.module.css'\n\ninterface PaginationProps {\n  blogRoot: string\n  pageCount: number\n  pageNumber: number\n}\n\nfunction Pagination({ blogRoot, pageCount, pageNumber }: PaginationProps) {\n  return (\n    <small className={styles.Pagination}>\n      {pageNumber !== 1 && (\n        <Link\n          className={styles.previous}\n          href={join(blogRoot, 'page', String(pageNumber - 1))}>\n          ← Previous\n        </Link>\n      )}\n      <span className={styles.pages}>\n        {' '}\n        Page <span className={styles.current}>{pageNumber}</span>/\n        <span className={styles.count}>{pageCount}</span>{' '}\n      </span>\n      {pageNumber < pageCount && (\n        <Link\n          className={styles.next}\n          href={join(blogRoot, 'page', String(pageNumber + 1))}>\n          Next →\n        </Link>\n      )}\n    </small>\n  )\n}\n\nexport default Pagination\n","/**\n * @file [SearchBox]\n * @author [mzvast]\n * @email [mzvast@gmail.com]\n * @create date 2021-09-12 20:14:58\n */\nimport React, {useEffect, useRef, useState} from 'react';\n// import {styled, css, keyframes, Box, palette, Flex}  from 'galaco';\nimport {client} from 'poindexter/runtime';\n// loads the poindexter.bundle.json.\n// for custom path: `client.init({ path: '/path/to/poindexter.bundle.js' })`\nimport {styled, Box, Ellipsis} from 'galaco';\nimport {useClickAway} from 'ahooks';\nimport {Link} from 'react-navi';\n\nlet isClientLoad = false;\n\nconst Wrap: any = styled(Box)`\n    position: fixed;\n    right: 1em;\n    top: 1em;\n    input {\n        height: 3em;\n        width: 25em;\n        outline: none;\n    }\n`;\nconst Popup: any = styled(Box)`\n    position: absolute;\n    top: 3em;\n    left: 0;\n    background-color: white;\n    border: solid 1px pink;\n    max-height: 500px;\n    overflow-y: scroll;\n    a {\n        line-height: 3em;\n    }\n`;\nconst Row: any = styled(Ellipsis(1))`\n    cursor: pointer;\n    height: 3em;\n    padding: 0.5em;\n    :hover {\n        background: pink;\n        color: white;\n    }\n`;\n// search the index.\ntype ResultShape = {\n    path: string;\n    keywords: string;\n    text: string;\n    title: string;\n};\ntype Props = {};\nconst SearchBox: React.FC<Props> = () => {\n    const [query, setQuery] = useState('');\n    const [result, setResult] = useState<ResultShape[]>([]);\n    const [visible, setVisible] = useState(false);\n    const ref = useRef<any>();\n    useEffect(() => {\n        // 不能在SSG时候发起init，因为此时json还没有产生\n        if (!isClientLoad) {\n            isClientLoad = true;\n            client.init('/poindexter.bundle.json');\n        }\n    }, []);\n    useEffect(() => {\n        if (query) {\n            const result = client.index.search(query);\n            setResult(result);\n            console.log('ddt::result', result);\n        } else {\n            setResult([]);\n        }\n\n        return () => {};\n    }, [query]);\n    // https://sourcegraph.com/github.com/alibaba/hooks/-/blob/packages/hooks/src/useClickAway/index.ts\n    useClickAway(() => {\n        setVisible(false);\n    }, ref);\n\n    return (\n        <Wrap>\n            <input\n                ref={ref}\n                onFocus={() => {\n                    setVisible(true);\n                }}\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n            ></input>\n            {visible && result && result.length > 0 && (\n                <Popup>\n                    {result\n                        .filter((item) => item.path !== 'index')\n                        .map((item) => {\n                            return (\n                                <Link\n                                    key={item.path}\n                                    style={{boxShadow: 'none'}}\n                                    href={'/' + item.path}\n                                >\n                                    <Row>\n                                        {item.path.split('/')[0] + '>'}\n\n                                        {item.title}\n                                    </Row>\n                                </Link>\n                            );\n                        })}\n                </Popup>\n            )}\n        </Wrap>\n    );\n};\nexport default SearchBox;\n","import {Route} from 'navi';\nimport React from 'react';\nimport {Link} from 'react-navi';\nimport siteMetadata from '../siteMetadata';\nimport ArticleSummary from './ArticleSummary';\nimport Bio from './Bio';\nimport Pagination from './Pagination';\nimport styles from './BlogIndexPage.module.css';\nimport ThemeService from '../service/ThemeService';\nimport SearchBox from './SearchBox';\n\ninterface BlogIndexPageProps {\n    blogRoot: string;\n    pageCount: number;\n    pageNumber: number;\n    postRoutes: Route[];\n}\n\nfunction BlogIndexPage({\n    blogRoot,\n    pageCount,\n    pageNumber,\n    postRoutes\n}: BlogIndexPageProps) {\n    return (\n        <div>\n            <header>\n                <h1 className={styles.title}>\n                    <Link style={{boxShadow: 'none'}} href={blogRoot}>\n                        {siteMetadata.title}\n                    </Link>\n                    {/* 换主题 */}\n                    <button\n                        className={styles.themeButton}\n                        onClick={() => {\n                            let theme = document.body.getAttribute('class');\n                            if (theme === 'light') {\n                                theme = 'dark';\n                            } else {\n                                theme = 'light';\n                            }\n                            ThemeService.setTheme(theme);\n                        }}\n                    >\n                        switch theme\n                    </button>\n                </h1>\n                <Bio />\n                <SearchBox/>\n            </header>\n            <ul className={styles.articlesList}>\n                {postRoutes.map((route) => (\n                    <li key={route.url.href}>\n                        <ArticleSummary blogRoot={blogRoot} route={route} />\n                    </li>\n                ))}\n            </ul>\n            {pageCount > 1 && (\n                <Pagination\n                    blogRoot={blogRoot}\n                    pageCount={pageCount}\n                    pageNumber={pageNumber}\n                />\n            )}\n            <footer className={styles.footer}>\n                <div>\n                    <a\n                        href=\"./rss.xml\"\n                        target=\"_blank\"\n                        style={{float: 'right'}}\n                    >\n                        RSS\n                    </a>\n                    <Link href=\"/about\">About</Link> &bull;{' '}\n                    <Link href=\"/tags\">Tags</Link> &bull;{' '}\n                    <Link href=\"https://github.com/mzvast/mzvast.github.io\">\n                        Source\n                    </Link>\n                </div>\n            </footer>\n        </div>\n    );\n}\n\nexport default BlogIndexPage;\n","import React from 'react'\nimport styles from './NotFoundPage.module.css'\n\n// Note that create-react-navi-app will always show an error screen when this\n// is rendered. This is because the underlying react-scripts package shows\n// the error screen when a NotFoundError is thrown, even though it's caught\n// by <NotFoundBoundary>. To see the error rendered by this function,\n// you'll just need to close the error overlay with the \"x\" at the top right.\nfunction NotFoundPage() {\n  return (\n    <div className={styles.NotFound}>\n      <h1>404 - Not Found</h1>\n    </div>\n  )\n}\n\nexport default NotFoundPage\n","import React from 'react'\nimport styles from './LoadingIndicator.module.css'\n\ninterface LoadingIndicatorProps {\n  active?: boolean\n  className?: string\n  style?: React.CSSProperties\n}\n\nfunction LoadingIndicator({ active, className, style }: LoadingIndicatorProps) {\n  return (\n    <div\n      className={`\n        ${styles.LoadingIndicator}\n        ${active ? styles.active : ''}\n        ${className}\n      `}\n      style={style}\n    />\n  )\n}\n\nexport default LoadingIndicator\n","import React from 'react';\nimport {Link, NotFoundBoundary, View, useLoadingRoute} from 'react-navi';\nimport siteMetadata from '../siteMetadata';\nimport NotFoundPage from './NotFoundPage';\nimport LoadingIndicator from './LoadingIndicator';\nimport styles from './BlogLayout.module.css';\nimport SearchBox from './SearchBox';\n\ninterface BlogLayoutProps {\n    blogRoot: string;\n    isViewingIndex: boolean;\n}\n\nfunction BlogLayout({blogRoot, isViewingIndex}: BlogLayoutProps) {\n    let loadingRoute = useLoadingRoute();\n    return (\n        <div className={styles.container}>\n            <LoadingIndicator active={!!loadingRoute} />\n\n            {\n                // Don't show the header on index pages, as it has a special\n                // header.\n                !isViewingIndex && (\n                    <header>\n                        <h3 className={styles.title}>\n                            <Link style={{boxShadow: 'none'}} href={blogRoot}>\n                                {siteMetadata.title}\n                            </Link>\n                        </h3>\n                    </header>\n                )\n            }\n\n            <main>\n                <SearchBox />\n                <NotFoundBoundary render={() => <NotFoundPage />}>\n                    <View />\n                </NotFoundBoundary>\n            </main>\n        </div>\n    );\n}\n\nexport default BlogLayout;\n","import React from 'react';\nimport {Link} from 'react-navi';\nimport styles from './ArticleToc.module.css';\n\nfunction TocItem(data) {\n    if (!data || (data instanceof Array && data.length === 0)) {\n        return null;\n    }\n    if (data instanceof Array) {\n        // console.log('data::data', data);\n        return (\n            <ul>\n                {data.map((item, index) => {\n                    return (\n                        <React.Fragment key={index}>\n                            {TocItem(item)}\n                        </React.Fragment>\n                    );\n                })}\n            </ul>\n        );\n    }\n    return (\n        <>\n            <li key={data.id} data-key={data.id}>\n                <Link href={'#' + data.id}>{data.title}</Link>\n            </li>\n            {TocItem(data.children)}\n        </>\n    );\n}\n\nfunction ArticleToc({tableOfContents}) {\n    const toc = tableOfContents();\n    return (\n        <>\n            <blockquote className={styles.blockquote}>\n                <div>{TocItem(toc)}</div>\n            </blockquote>\n        </>\n    );\n}\n\nexport default ArticleToc;\n","import React from 'react';\nimport {Link, useCurrentRoute, useView} from 'react-navi';\nimport {MDXProvider} from '@mdx-js/react';\nimport siteMetadata from '../siteMetadata';\nimport ArticleMeta from './ArticleMeta';\nimport Bio from './Bio';\nimport styles from './BlogPostLayout.module.css';\nimport Disqus from 'disqus-react';\nimport ArticleToc from './ArticleToc';\nimport {Helmet} from 'react-navi-helmet-async';\n\ninterface BlogPostLayoutProps {\n    blogRoot: string;\n}\n\nfunction BlogPostLayout({blogRoot}: BlogPostLayoutProps) {\n    let {title, data, url} = useCurrentRoute();\n    const {spoiler,tags} = data;\n    let {connect, content, head} = useView()!;\n    let {MDXComponent, readingTime, tableOfContents} = content;\n    const disqusShortname = 'miaocode';\n    const disqusConfig: any = {\n        url: 'https://mzvast.github.io' + url.pathname,\n        identifier: data.slug,\n        title: title\n    };\n    // console.log('useCurrentRoute::content', content, tableOfContents());\n    // The content for posts is an MDX component, so we'll need\n    // to use <MDXProvider> to ensure that links are rendered\n    // with <Link>, and thus use pushState.\n    return connect(\n        <>\n            {head}\n            <Helmet >\n                <meta name=\"title\" content={title}/>\n                <meta name=\"description\" content={spoiler}/>\n                <meta name=\"keywords\" content={tags.join(',')}/>\n            </Helmet>\n            <article className={styles.container}>\n                <header className={styles.header}>\n                    <h1 className={styles.title}>\n                        <Link style={{boxShadow: 'none'}} href={url.pathname}>\n                            {title}\n                        </Link>\n                    </h1>\n                    <ArticleMeta\n                        blogRoot={blogRoot}\n                        data={data}\n                        readingTime={readingTime}\n                    />\n                </header>\n                <MDXProvider\n                    components={{\n                        a: Link,\n                        wrapper: ({children}) => (\n                            <div className={styles.content}>{children}</div>\n                        )\n                    }}\n                >\n                    <ArticleToc tableOfContents={tableOfContents} />\n                    <MDXComponent />\n                </MDXProvider>\n                {/* <Disqus.CommentCount shortname={disqusShortname} config={disqusConfig}>\n                    评论\n                </Disqus.CommentCount> */}\n                {/* <Disqus.CommentEmbed \n                    commentId={disqusConfig.identifier}\n                    showMedia={true}\n                    height={160}\n                /> */}\n                {process.env.NODE_ENV === 'production' && (\n                    <Disqus.DiscussionEmbed\n                        shortname={disqusShortname}\n                        config={disqusConfig}\n                    />\n                )}\n                <footer className={styles.footer}>\n                    <h3 className={styles.title}>\n                        <Link href={blogRoot}>{siteMetadata.title}</Link>\n                    </h3>\n                    <Bio className={styles.bio} />\n                    <section className={styles.links}>\n                        {data.previousDetails && (\n                            <div style={{marginBottom: '14px'}}>\n                                <Link\n                                    className={styles.previous}\n                                    href={data.previousDetails.href}\n                                >\n                                    ← {data.previousDetails.title}\n                                </Link>\n                            </div>\n                        )}\n                        {data.nextDetails && (\n                            <div style={{marginBottom: '14px'}}>\n                                <Link\n                                    className={styles.next}\n                                    href={data.nextDetails.href}\n                                >\n                                    {data.nextDetails.title} →\n                                </Link>\n                            </div>\n                        )}\n                    </section>\n                </footer>\n            </article>\n        </>\n    );\n}\n\nexport default BlogPostLayout;\n","import importAll from 'import-all.macro';\nimport * as Navi from 'navi';\nimport {join} from 'path';\nimport {sortBy} from 'lodash';\nimport slugify from 'slugify';\n\ninterface Context {\n    blogRoot: string;\n}\n\n// Get a list of all posts, that will not be loaded until the user\n// requests them.\nconst postModules = importAll.deferred('./**/post.ts?(x)');\nconst importPost = pathname => postModules[pathname]();\nconst postPathnames = Object.keys(postModules);\nconst datePattern = /^((\\d{1,4})-(\\d{1,4})-(\\d{1,4}))[/-]/;\n\nlet postDetails = postPathnames.map(pathname => {\n    let slug = slugify(\n        pathname.replace(/post.tsx?$/, '').replace(/\\//g, '-')\n    ).replace(/^[-.]+|[.-]+$/g, '');\n\n    let date;\n    let dateMatch = slug.match(datePattern);\n    if (dateMatch) {\n        date = new Date(\n            parseInt(dateMatch[2], 10),\n            parseInt(dateMatch[3], 10) - 1,\n            parseInt(dateMatch[4], 10)\n        );\n    }\n\n    return {\n        slug,\n        pathname,\n        date\n    };\n});\n\n// Sort the pages by slug (which contain the dates)\npostDetails = sortBy(postDetails, ['slug']).reverse();\n// Create url-friendly slugs from post pathnames, and a `getPage()` function\n// that can be used to load and return the post's Page object.\nlet posts = postDetails.map(({slug, pathname, date}, i) => ({\n    getPage: Navi.map(async () => {\n        let {default: post} = await importPost(pathname);\n        let {title, getContent, ...meta} = post;\n        let previousSlug, previousPost, nextSlug, nextPost;\n\n        if (i !== 0) {\n            let previousPostDetails = postDetails[i - 1];\n            previousPost = (await importPost(previousPostDetails.pathname))\n                .default;\n            previousSlug = previousPostDetails.slug;\n        }\n\n        if (i + 1 < postDetails.length) {\n            let nextPostDetails = postDetails[i + 1];\n            nextPost = (await importPost(nextPostDetails.pathname)).default;\n            nextSlug = nextPostDetails.slug;\n        }\n\n        return Navi.route({\n            title,\n            getData: (req, context: Context) => ({\n                date,\n                pathname,\n                slug,\n                previousDetails: previousPost && {\n                    title: previousPost.title,\n                    href: join(context.blogRoot, 'posts', previousSlug)\n                },\n                nextDetails: nextPost && {\n                    title: nextPost.title,\n                    href: join(context.blogRoot, 'posts', nextSlug)\n                },\n                ...meta\n            }),\n            getView: async () => {\n                let {default: MDXComponent, ...other} = await getContent();\n                return {MDXComponent, ...other};\n            }\n        });\n    }),\n    slug\n}));\n\nexport default posts;\n","import { compose, lazy, map, mount, redirect, resolve, route, withContext, withView, Route } from 'navi'\nimport React from 'react'\nimport { join } from 'path'\nimport { chunk, fromPairs } from 'lodash'\nimport BlogIndexPage from '../components/BlogIndexPage'\nimport BlogLayout from '../components/BlogLayout'\nimport BlogPostLayout from '../components/BlogPostLayout'\nimport siteMetadata from '../siteMetadata'\nimport posts from './posts'\n\ninterface AppNavContext {\n  blogRoot: string\n}\n\n// Split the posts into a list of chunks of the given size, and\n// then build index pages for each chunk.\nlet chunks = chunk(posts, siteMetadata.indexPageSize)\nlet chunkPagePairs = chunks.map((chunk, i) => [\n  '/' + (i + 1),\n  map<AppNavContext>(async (req, context) => {\n    // Don't load anything when just crawling\n    if (req.method === 'HEAD') {\n      return route()\n    }\n\n    // Get metadata for all pages on this page\n    let postRoutes = await Promise.all<Route>(\n      chunk.map(async post => {\n        let href = join(context.blogRoot, 'posts', post.slug)\n        return await resolve({\n          // If you want to show the page content on the index page, set\n          // this to 'GET' to be able to access it.\n          method: 'HEAD',\n          routes,\n          url: href,\n        })\n      }),\n    )\n\n    // Only add a page number to the page title after the first index page.\n    let pageTitle = siteMetadata.title\n    if (i > 0) {\n      pageTitle += ` – page ${i + 1}`\n    }\n\n    return route({\n      title: pageTitle,\n      getView: () => (\n        <BlogIndexPage\n          blogRoot={context.blogRoot}\n          pageNumber={i + 1}\n          pageCount={chunks.length}\n          postRoutes={postRoutes}\n        />\n      ),\n    })\n  }),\n])\n\nconst routes = compose(\n  withContext((req, context): AppNavContext => ({\n    // By adding the point at which the blog was mounted to context, it\n    // makes it possible to easily scope all URLs to the blog root, thus\n    // making it possible to mount the entire route on a subdirectory.\n    blogRoot: req.mountpath || '/',\n    ...context,\n  })),\n  withView((req, context) => {\n    // Check if the current page is an index page by comparing the remaining\n    // portion of the URL's pathname with the index page paths.\n    let isViewingIndex = req.path === '/' || /^\\/page\\/\\d+\\/$/.test(req.path)\n\n    // Wrap the current page's content with a React Context to pass global\n    // configuration to the blog's components.\n    return (\n      <BlogLayout\n        blogRoot={context.blogRoot}\n        isViewingIndex={isViewingIndex}\n      />\n    )\n  }),\n  mount({\n    // The blog's index pages go here. The first index page is mapped to the\n    // root URL, with a redirect from \"/page/1\". Subsequent index pages are\n    // mapped to \"/page/n\".\n    '/': chunkPagePairs.shift()[1],\n    '/page': mount({\n      '/1': redirect((req, context: AppNavContext) => context.blogRoot),\n      ...fromPairs(chunkPagePairs),\n    }),\n\n    // Put posts under \"/posts\", so that they can be wrapped with a\n    // \"<BlogPostLayout />\" that configures MDX and adds a post-specific layout.\n    '/posts': compose(\n      withView((req, context: AppNavContext) => <BlogPostLayout blogRoot={context.blogRoot} />),\n      mount(fromPairs(posts.map(post => ['/' + post.slug, post.getPage]))),\n    ),\n\n    // Miscellaneous pages can be added directly to the root switch.\n    '/tags': lazy(() => import('./tags')),\n    '/about': lazy(() => import('./about')),\n\n    // Only the statically built copy of the RSS feed is intended to be opened,\n    // but the route is defined here so that the static renderer will pick it\n    // up.\n    '/rss': route(),\n  }),\n)\n\nexport default routes\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoadingIndicator\":\"LoadingIndicator_LoadingIndicator__3KSl0\",\"active\":\"LoadingIndicator_active__3EncM\",\"LoadingIndicator-animation\":\"LoadingIndicator_LoadingIndicator-animation__2icwd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BlogLayout_container__1fiRb\",\"title\":\"BlogLayout_title__3HyDU\"};","import { Route } from 'navi'\nimport React from 'react'\nimport { Link } from 'react-navi'\nimport ArticleMeta from './ArticleMeta'\nimport styles from './ArticleSummary.module.css'\n\ninterface ArticleSummaryProps {\n    blogRoot: string;\n    route: Route;\n}\n\nfunction ArticleSummary({blogRoot, route}: ArticleSummaryProps) {\n    return (\n        <article className={styles.ArticleSummary}>\n            <h2>\n                <Link style={{boxShadow: 'none'}} href={route.url.href}>\n                    {route.title}\n                </Link>\n            </h2>\n            <ArticleMeta blogRoot={blogRoot} data={route.data} />\n            <p>{route.data.spoiler}</p>\n        </article>\n    );\n}\n\nexport default ArticleSummary;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ArticleSummary\":\"ArticleSummary_ArticleSummary__3I5Qk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bio\":\"Bio_Bio__1ks_2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockquote\":\"ArticleToc_blockquote__2xzi1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BlogPostLayout_title__2L_2_\",\"header\":\"BlogPostLayout_header__1Ny4T\",\"footer\":\"BlogPostLayout_footer__3ofxa\",\"bio\":\"BlogPostLayout_bio__diNn9\",\"links\":\"BlogPostLayout_links__-LX2X\",\"next\":\"BlogPostLayout_next__KrMHx\",\"content\":\"BlogPostLayout_content__1mzTO\"};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 82;"],"sourceRoot":""}