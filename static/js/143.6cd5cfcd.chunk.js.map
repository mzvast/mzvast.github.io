{"version":3,"sources":["routes/posts/2022/07/01-1024-Switch借助xray透明代理达成NAT-full-cone/document.mdx"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_runner_work_mzvast_github_io_mzvast_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"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","file":"static/js/143.6cd5cfcd.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.42,\"time\":25200,\"words\":84}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"你可以从本文了解到\"\n    }}>{`你可以从本文了解到`}</h2>\n    <h3 {...{\n      \"id\": \"背景\"\n    }}>{`背景`}</h3>\n    <p>{`switch联机游戏大多是p2p方式，之前经常会遇到NAT穿越失败的问题，有时候不得不用加速器才能连接成功。`}</p>\n    <p>{`当时也是有点困惑，我已经用vps代理了，而且vps是有公网独立ipv4地址，按说不应该会存在NAT穿越失败问题。当时也没有深入去想这个事情，就在我心里一直是一个bug。`}</p>\n    <p>{`而最近我在看到xray的一些更新历史的内容中提到了NAT相关的内容，比如下面这些。`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/XTLS/Xray-core/issues/734\"\n      }}>{`如何实现full cone呢`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://v2xtls.org/xray-core%E5%8F%91%E5%B8%831-3-0%E7%89%88%E6%9C%AC/\"\n      }}>{`1.3.0更新内容`}</a></p>\n    <p>{`总之就是说v2ray在NAT上有bug，而xray修复改进了这个问题。`}</p>\n    <p>{`话不多说下面就讲讲如何从v2ray迁移到xray。`}</p>\n    <h3 {...{\n      \"id\": \"从v2ray到xray\"\n    }}>{`从v2ray到xray`}</h3>\n    <h4 {...{\n      \"id\": \"服务端\"\n    }}>{`服务端`}</h4>\n    <p>{`由于xray是fork的v2ray，因此在协议上是基本兼容的。`}</p>\n    <p>{`如果之前用的是vmess协议，我们切换到时候基本上可以复用v2ray的配置。`}</p>\n    <p>{`需要做下面几个事情(下面都是以root权限)`}</p>\n    <p>{`1、运行`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/XTLS/Xray-install\"\n      }}>{`自动安装脚本`}</a></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shel\",\n        \"data-language\": \"shel\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"# bash -c &quot;$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)&quot; @ install\\n\"\n        }\n      }}></code></pre>\n    <p>{`2、把v2ray的配置json复制到xray`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"data-language\": \"shell\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token function\\\">cp</span> /usr/local/etc/v2ray/config.json /usr/local/etc/xray/config.json\\n\"\n        }\n      }}></code></pre>\n    <p>{`3、停掉v2ray，启用xray`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"data-language\": \"shell\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"systemctl stop v2ray\\nsystemctl restart xray\\n\"\n        }\n      }}></code></pre>\n    <p>{`4、自己用客户端进行连接测试，如果ok，则禁用v2ray的自启动服务，改成用xray`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"data-language\": \"shell\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"systemctl disable v2ray\\nsystemctl <span class=\\\"token builtin class-name\\\">enable</span> xray\\n\"\n        }\n      }}></code></pre>\n    <h4 {...{\n      \"id\": \"客户端\"\n    }}>{`客户端`}</h4>\n    <p>{`我这边试验下来，如果客户端之前是小火箭、v2rayN、树莓派，那完全就是兼容的，不需要升级。`}</p>\n    <h2 {...{\n      \"id\": \"走向nat-full-cone\"\n    }}>{`走向NAT full cone`}</h2>\n    <p>{`这里需要注意的是，如果客户端是基于v2ray-core，那就不能实现full cone，必须用xray-core。`}</p>\n    <p>{`因此，我的树莓派是作为家庭透明代理网关的，我的switch如果要用NAT full cone就得将v2ray替换成xray。`}</p>\n    <p>{`linux的无论是客户端还是服务端替换方法是一毛一样的，这里就不赘述了。区别只是json配置文件的内容不一样而已。`}</p>\n    <p>{`至此，switch连上树莓派的透明代理之后，就可以做到NAT full cone了。不会再有遇到明明是nat类型是B却连不到其他玩家的情况。`}</p>\n    <p>{`总之一句话就是：xray+透明代理。`}</p>\n    <h3 {...{\n      \"id\": \"补充几个测试结论\"\n    }}>{`补充几个测试结论`}</h3>\n    <p>{`1、vps端\n在开warp的nat类型是B。（主要取决于vps的网络环境）\n不开warp使用原生ip的nat类型是A。`}</p>\n    <p>{`2、树莓派和ns\n树莓派开xray，ns通过pi的透明代理，nat类型与vps的nat类型一致（与加速器效果类似）\n树莓派开v2ray，nat类型b，有大概率nat穿越失败。`}</p>\n    <p>{`ns不通过透明代理，直接配http代理，（不管是xray还是v2ray）nat类型是b，有大概率nat穿越失败。`}</p>\n    <p>{`结论\n最佳配置：xray+透明代理+warp\n既能p2p，又能看netflix，相对比较完美啦。`}</p>\n    <p>{`在ns运动里尝试了可以直接和大多数玩家稳定联机，以后就不需要加速器了。`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"你可以从本文了解到\",\n    level: 2,\n    title: \"你可以从本文了解到\",\n    children: [\n        {\n              id: \"背景\",\n              level: 3,\n              title: \"背景\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"从v2ray到xray\",\n              level: 3,\n              title: \"从v2ray到xray\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"走向nat-full-cone\",\n    level: 2,\n    title: \"走向NAT full cone\",\n    children: [\n        {\n              id: \"补充几个测试结论\",\n              level: 3,\n              title: \"补充几个测试结论\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}