{"version":3,"sources":["routes/posts/2019/02/01-cra-ts/document.mdx"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_runner_work_mzvast_github_io_mzvast_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"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","file":"static/js/100.518ec631.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":2,\"time\":120000,\"words\":400}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"背景\"\n    }}>{`背景`}</h2>\n    <p>{`2018 年以来的跑了许久的 react 项目，一直是基于 cra（create-react-app）官方脚手架并且不 eject，通过 react-app-rewired 进行自定义配置的。当时虽然有不少第三方的 ts（typescript）化方案，但不少官方支持且需要 eject 且需要第三方 ts loader，所以都在可升级性上有硬伤。而快到年底的时候，Babel7 出来，并且 babel 官方支持 typescript，与此同时 Facebook 将 cra2.0 加入了 ts 的支持，支持生成 ts 项目(`}<a parentName=\"p\" {...{\n        \"href\": \"https://facebook.github.io/create-react-app/docs/adding-typescript\"\n      }}>{`cra-doc`}</a>{`)。`}</p>\n    <p>{`本文尝试将我们工程的升级过程和采坑进行总结和分享。`}</p>\n    <p>{`原工程主要配置是`}</p>\n    <ul>\n      <li parentName=\"ul\">{`create-react-app (1.x )`}</li>\n      <li parentName=\"ul\">{`flow`}</li>\n      <li parentName=\"ul\">{`react-app-rewired (1.x)`}</li>\n    </ul>\n    <p>{`目标升级后的配置是`}</p>\n    <ul>\n      <li parentName=\"ul\">{`create-react-app (2.x )`}</li>\n      <li parentName=\"ul\">{`typescript`}</li>\n      <li parentName=\"ul\">{`react-app-rewired (2.x)`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"步骤拆解\"\n    }}>{`步骤拆解`}</h2>\n    <h3 {...{\n      \"id\": \"1、升级-cra-版本\"\n    }}>{`1、升级 cra 版本`}</h3>\n    <p>{`首先升级`}<inlineCode parentName=\"p\">{`react-scripts react-app-rewired`}</inlineCode>{`到 2.x 版本`}</p>\n    <h3 {...{\n      \"id\": \"2、重命名文件名\"\n    }}>{`2、重命名文件名`}</h3>\n    <p>{`将 src 下的 js 和 jsx 文件改成 tsx 文件。可以利用`}<inlineCode parentName=\"p\">{`find ./src -name \"*.jsx\" -exec sh -c 'mv \"$0\" \"\\${0%.jsx}.tsx\"' {} \\\\;`}</inlineCode>{`和`}<inlineCode parentName=\"p\">{`find ./src -name \"*.js\" -exec sh -c 'mv \"$0\" \"\\${0%.jsx}.tsx\"' {} \\\\;`}</inlineCode>{`两条指令。`}</p>\n    <h3 {...{\n      \"id\": \"3、启动项目\"\n    }}>{`3、启动项目`}</h3>\n    <p>{`运行`}<inlineCode parentName=\"p\">{`npm start`}</inlineCode>{`，cra 会检测到项目是 typescript 工程然后为你产生一个 tsconfig.json 文件。建议将 compilerOptions 的 strict 值改成 false，以避免过分严格的 any 检查导致项目编不过。这个文件大致长这样:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\",\n        \"data-language\": \"json\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"compilerOptions\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"target\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"es5\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"lib\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"dom\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"dom.iterable\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"esnext\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"allowJs\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"skipLibCheck\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"esModuleInterop\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"allowSyntheticDefaultImports\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"strict\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// default is true</span>\\n        <span class=\\\"token property\\\">\\\"forceConsistentCasingInFileNames\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"module\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"esnext\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"moduleResolution\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"node\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"resolveJsonModule\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"isolatedModules\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"noEmit\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"jsx\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"preserve\\\"</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"include\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"src\\\"</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"4、快捷安装-typings\"\n    }}>{`4、快捷安装 typings`}</h3>\n    <p>{`可以全局安装`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/nfour/types-installer\"\n      }}>{`types-installer`}</a>{`来进行自动化的依赖解析和安装。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"$ npm i <span class=\\\"token operator\\\">-</span>g types<span class=\\\"token operator\\\">-</span>installer\\n$ types<span class=\\\"token operator\\\">-</span>installer\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"5、修复所有编译错误\"\n    }}>{`5、修复所有编译错误`}</h3>\n    <p>{`这是工作量最大也是最复杂的步骤。根据工程文件多少可能会花费 1 天到若干天的工作量。但既然选择了开始，就请坚信结果是美好的。`}</p>\n    <h3 {...{\n      \"id\": \"一个-比较复杂的带有-redux-的-react-组件的通常-ts-写法\"\n    }}>{`一个 比较复杂的带有 redux 的 react 组件的通常 ts 写法`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`这里 redux 的 state 和 dispatch 的 any 声明是可以通过引入 store 文件来实现的，偷懒了。`}</li>\n      <li parentName=\"ul\">{`RouteComponentProps 是为了 withRouter 可以正确识别 this.props.history 等 react-router 属性。`}</li>\n      <li parentName=\"ul\">{`CSSProperties 是为了让 style 对象可以正确被识别。当然工程中用的是 styled-components 就不需要这条了。`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\",\n        \"data-language\": \"typescript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>Component<span class=\\\"token punctuation\\\">,</span> CSSProperties<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>Route<span class=\\\"token punctuation\\\">,</span> withRouter<span class=\\\"token punctuation\\\">,</span> RouteComponentProps<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-router-dom'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>connect<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-redux'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">OwnProps</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">StateProps</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">DispatchProps</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">type</span> Props <span class=\\\"token operator\\\">=</span> OwnProps <span class=\\\"token operator\\\">&amp;</span> StateProps <span class=\\\"token operator\\\">&amp;</span> DispatchProps <span class=\\\"token operator\\\">&amp;</span> RouteComponentProps<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">type</span> State <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Hello</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span><span class=\\\"token operator\\\">&lt;</span>Props<span class=\\\"token punctuation\\\">,</span> State<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    state<span class=\\\"token punctuation\\\">:</span> State <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">static</span> defaultProps <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">const</span> myStyle <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n            background<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'red'</span>\\n        <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">as</span> CSSProperties<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>div style<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>myStyle<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>hellow<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">mapStateToProps</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">state<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">any</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    state\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">mapDispatchToProps</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">dispatch<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">any</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>dispatch<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function\\\">connect</span><span class=\\\"token punctuation\\\">(</span>\\n    mapStateToProps<span class=\\\"token punctuation\\\">,</span>\\n    mapDispatchToProps\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">withRouter</span><span class=\\\"token punctuation\\\">(</span>Hellow<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"absolute-引用的解决方案\"\n    }}>{`absolute 引用的解决方案`}</h3>\n    <p>{`在通常的工程中，我们会设定 alias 来方便绝对地址的引用，比如用@记号来指向 src 路径。`}</p>\n    <p>{`通常在 config-overrides 里面这么配置`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"module<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function-variable function\\\">webpack</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">config<span class=\\\"token punctuation\\\">,</span> env</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        config<span class=\\\"token punctuation\\\">.</span>resolve <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token operator\\\">...</span>config<span class=\\\"token punctuation\\\">.</span>resolve<span class=\\\"token punctuation\\\">,</span>\\n            alias<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token string\\\">'@'</span><span class=\\\"token punctuation\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'src'</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`这个在 cra 的 typescript 工程中编译是可以的，但 typescript 解析器默认是不支持的（会出现红色波浪线告诉你@无法识别），通过改 tsconfig 的方法并没有得到官方的支持。经过探索和试验，目前最完美的方案就是软链接src路径到node_modules/@。而且以后官方支持配置之后，也可以方便的切过去。`}</p>\n    <p>{`对 package.json 部分配置如下。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\",\n        \"data-language\": \"json\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"scripts\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"postinstall\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"yarn link-modules\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"unlink-modules\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"rimraf node_modules/@\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"link-modules\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"globstar --node -- lnk \\\\\\\"./src/*\\\\\\\" \\\\\\\"./node_modules/@/\\\\\\\"\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"relink-modules\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"yarn unlink-modules &amp;&amp; yarn link-modules\\\"</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`需要的依赖则可以用指令安装:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"data-language\": \"shell\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token function\\\">yarn</span> <span class=\\\"token function\\\">add</span> -D rimraf lnk-cli globstar\\n\"\n        }\n      }}></code></pre>\n    <p>{`现在只要运行`}<inlineCode parentName=\"p\">{`yarn`}</inlineCode>{`或者`}<inlineCode parentName=\"p\">{`npm i`}</inlineCode>{` 就会自动链接src到node_modules/@了。`}</p>\n    <h2 {...{\n      \"id\": \"总结\"\n    }}>{`总结`}</h2>\n    <p>{`typescript 在复杂大型企业项目中越来越体现出其优势，我们将会坚定不移的转到 typescript 上来。`}</p>\n    <h2 {...{\n      \"id\": \"refs\"\n    }}>{`Refs`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://medium.com/knerd/typescript-tips-series-proper-typing-of-react-redux-connected-components-eda058b6727d\"\n      }}>{`Typescript Tips Series: Proper Typing of react-redux Connected Components`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://facebook.github.io/create-react-app/docs/adding-typescript\"\n      }}>{`cra adding-typescript`}</a></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"背景\",\n    level: 2,\n    title: \"背景\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"步骤拆解\",\n    level: 2,\n    title: \"步骤拆解\",\n    children: [\n        {\n              id: \"1、升级-cra-版本\",\n              level: 3,\n              title: \"1、升级 cra 版本\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"2、重命名文件名\",\n              level: 3,\n              title: \"2、重命名文件名\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"3、启动项目\",\n              level: 3,\n              title: \"3、启动项目\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"4、快捷安装-typings\",\n              level: 3,\n              title: \"4、快捷安装 typings\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"5、修复所有编译错误\",\n              level: 3,\n              title: \"5、修复所有编译错误\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"一个-比较复杂的带有-redux-的-react-组件的通常-ts-写法\",\n              level: 3,\n              title: \"一个 比较复杂的带有 redux 的 react 组件的通常 ts 写法\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"absolute-引用的解决方案\",\n              level: 3,\n              title: \"absolute 引用的解决方案\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"总结\",\n    level: 2,\n    title: \"总结\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"refs\",\n    level: 2,\n    title: \"Refs\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}