{"version":3,"sources":["routes/posts/2022/06/15-1100-How-to-treat-lock-file/document.mdx"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_runner_work_mzvast_github_io_mzvast_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","href","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"sSAGaA,EAAc,CAACC,KAAO,aAAaC,QAAU,KAAKC,KAAO,MAAMC,MAAQ,KAS9EC,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,0DADR,0DAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,4BADR,4BAGAL,OAAAE,EAAA,EAAAF,CAAA,6ZAEAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,8CADR,8CAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,gFADR,gFAGAL,OAAAE,EAAA,EAAAF,CAAA,qkBACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,eACbC,gBAAiB,MACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,2iCAGhBX,OAAAE,EAAA,EAAAF,CAAA,uUACAA,OAAAE,EAAA,EAAAF,CAAA,4JAA+BA,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,KAAQ,CACjDM,KAAQ,oDADmB,sBAA/B,wCAGAZ,OAAAE,EAAA,EAAAF,CAAA,mEACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,gBACbC,gBAAiB,OACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,kQAGhBX,OAAAE,EAAA,EAAAF,CAAA,yHACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,IAA3B,oVAKLN,OAAAE,EAAA,EAAAF,CAAA,kFACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,eACbC,gBAAiB,MACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,q4FAGhBX,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,eACbC,gBAAiB,MACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,2nXAGhBX,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,gBADR,gBAGAL,OAAAE,EAAA,EAAAF,CAAA,oUAKJJ,EAAWiB,gBAAiB,EACrB,IAAMC,EAAkB,WAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAmB,CAChD,CACEV,GAAI,yDACJa,MAAO,EACPC,MAAO,yDACPC,SAAU,CACN,CACMf,GAAI,2BACJa,MAAO,EACPC,MAAO,2BACPC,SAAU,IAIlB,CACQf,GAAI,6CACJa,MAAO,EACPC,MAAO,6CACPC,SAAU,IAIlB,CACQf,GAAI,eACJa,MAAO,EACPC,MAAO,eACPC,SAAU,QAQXC,EAAc","file":"static/js/138.7d92acf7.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.48,\"time\":88800,\"words\":296}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"你可以从本文了解到\"\n    }}>{`你可以从本文了解到`}</h2>\n    <h3 {...{\n      \"id\": \"问题背景\"\n    }}>{`问题背景`}</h3>\n    <p>{`最近taobao npm registry下线，导致之前lock文件里显式依赖taobao源的通通爆炸了，这是本文的写作背景。\n我们的目标就是让lock文件能切换到其他正常工作的源，比如npmjs。`}</p>\n    <h3 {...{\n      \"id\": \"原因与解决方案\"\n    }}>{`原因与解决方案`}</h3>\n    <h4 {...{\n      \"id\": \"lock文件如何记录源及如何修复\"\n    }}>{`lock文件如何记录源及如何修复`}</h4>\n    <p>{`我们知道lock文件主要的作用是记录依赖及其解析结果（版本、散列值等），从而加速依赖安装速度。那么对于每一条解析结果，我们可以看到下面这个例子，其中很显著的一个标志就是【resolved \"解析的源地址/包信息\"】。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token string\\\">\\\"@babel/core@7.4.3\\\"</span><span class=\\\"token punctuation\\\">:</span>\\n  version <span class=\\\"token string\\\">\\\"7.4.3\\\"</span>\\n<span class=\\\"highlighted-line\\\">  resolved <span class=\\\"token string\\\">\\\"https://registry.npm.taobao.org/@babel/core/download/@babel/core-7.4.3.tgz#198d6d3af4567be3989550d97e068de94503074f\\\"</span></span>  integrity sha1<span class=\\\"token operator\\\">-</span>GY1tOvRWe<span class=\\\"token operator\\\">+</span>OYlVDZfgaN6UUDB08<span class=\\\"token operator\\\">=</span>\\n  dependencies<span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token string\\\">\\\"@babel/code-frame\\\"</span> <span class=\\\"token string\\\">\\\"^7.0.0\\\"</span>\\n    <span class=\\\"token string\\\">\\\"@babel/generator\\\"</span> <span class=\\\"token string\\\">\\\"^7.4.0\\\"</span>\\n    <span class=\\\"token string\\\">\\\"@babel/helpers\\\"</span> <span class=\\\"token string\\\">\\\"^7.4.3\\\"</span>\\n    <span class=\\\"token string\\\">\\\"@babel/parser\\\"</span> <span class=\\\"token string\\\">\\\"^7.4.3\\\"</span>\\n    <span class=\\\"token string\\\">\\\"@babel/template\\\"</span> <span class=\\\"token string\\\">\\\"^7.4.0\\\"</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`由于不同的源它的包信息都是一样的，因此，我们只需要把这些resolved的实效的内容通过字符串匹配的方式替换掉就行了。`}</p>\n    <p>{`直接手动披露替换也可以，但是呢，有人已经写了一个`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kiegroup/lock-treatment-tool\"\n      }}>{`locktt工具`}</a>{`专门做这事。`}</p>\n    <p>{`使用方法也很简单：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\",\n        \"data-language\": \"bash\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token function\\\">npm</span> i -g @kie/lock-treatment-tool // 安装这个包\\nlocktt --registry<span class=\\\"token operator\\\">=</span>https://registry.npmjs.org/ // 替换lock中的源为指定源\\n\"\n        }\n      }}></code></pre>\n    <p>{`接下来，我们再看一下这个locktt的代码结构`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`scripts/treat-lock-files.js // 处理命令行参数\nlib/treat-locks/common.lock.js // 用于替换的方法（正则）\nlib/treat-locks/yarn.lock.js // 针对yarn的修复方法\nlib/treat-locks/npm.lock.js // 针对npm的修复方法\n`}</code></pre>\n    <p>{`其中run函数就是功能主入口`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// scripts/treat-lock-files.js </span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">run</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Treating fields...'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> folderPath <span class=\\\"token operator\\\">=</span> argv<span class=\\\"token punctuation\\\">.</span>folder <span class=\\\"token operator\\\">===</span> <span class=\\\"token keyword\\\">undefined</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">'.'</span> <span class=\\\"token punctuation\\\">:</span> argv<span class=\\\"token punctuation\\\">.</span>folder<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> outputFolderPath <span class=\\\"token operator\\\">=</span> argv<span class=\\\"token punctuation\\\">.</span>outputFolder <span class=\\\"token operator\\\">===</span> <span class=\\\"token keyword\\\">undefined</span> <span class=\\\"token operator\\\">?</span> folderPath <span class=\\\"token punctuation\\\">:</span> argv<span class=\\\"token punctuation\\\">.</span>outputFolder<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> npmOptions <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">NpmOptions</span><span class=\\\"token punctuation\\\">(</span>\\n    argv<span class=\\\"token punctuation\\\">.</span>registry <span class=\\\"token operator\\\">||</span> <span class=\\\"token function\\\">getRegistryFromNpmCommand</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    argv<span class=\\\"token punctuation\\\">.</span>replacePackageLockRegistry<span class=\\\"token punctuation\\\">,</span>\\n    argv<span class=\\\"token punctuation\\\">.</span>skipIntegrity<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">npmLock</span><span class=\\\"token punctuation\\\">(</span>folderPath<span class=\\\"token punctuation\\\">,</span> outputFolderPath<span class=\\\"token punctuation\\\">,</span> npmOptions<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 修复npm.lock</span>\\n  <span class=\\\"token function\\\">yarnLock</span><span class=\\\"token punctuation\\\">(</span>folderPath<span class=\\\"token punctuation\\\">,</span> outputFolderPath<span class=\\\"token punctuation\\\">,</span> npmOptions<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token comment\\\">// 修复yarn.lock</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// lib/treat-locks/yarn.lock.js</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">FILE_NAME</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'yarn.lock'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> fs <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fs'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> fileUtil <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'../utils/file.util'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> commonLock <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./common.lock'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> NpmOptions <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./npm.options'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">treatLine</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">line<span class=\\\"token punctuation\\\">,</span> npmOptions</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>line<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">startsWith</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'  resolved \\\"http'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 调用通用替换方法</span>\\n    <span class=\\\"token keyword\\\">return</span> commonLock<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">replaceHost</span><span class=\\\"token punctuation\\\">(</span>line<span class=\\\"token punctuation\\\">,</span> npmOptions<span class=\\\"token punctuation\\\">.</span>registry<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">concat</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'\\\\n'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>line<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">startsWith</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'  integrity '</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">&amp;&amp;</span> npmOptions<span class=\\\"token punctuation\\\">.</span>skipIntegrity <span class=\\\"token operator\\\">===</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">return</span> line<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">concat</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'\\\\n'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * In the yarn case the host from 'resolved' should be replaced by &lt;INTERNAL_REGISTRY> https://github.com/yarnpkg/yarn/issues/5892#issuecomment-414796103\\n * @param {string} folderPath the path where the lock file is\\n * @param {string} outputFolder the path where the lock should be saved\\n */</span>\\n<span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">run</span><span class=\\\"token punctuation\\\">(</span>folderPath<span class=\\\"token punctuation\\\">,</span> outputFolder<span class=\\\"token punctuation\\\">,</span> npmOptions <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">NpmOptions</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  fileUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">checkOutputFolderExistance</span><span class=\\\"token punctuation\\\">(</span>outputFolder<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> filePath <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>folderPath<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token constant\\\">FILE_NAME</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> output <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>outputFolder<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token constant\\\">FILE_NAME</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">existsSync</span><span class=\\\"token punctuation\\\">(</span>filePath<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'utf8'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>npmOptions<span class=\\\"token punctuation\\\">.</span>registry <span class=\\\"token operator\\\">===</span> <span class=\\\"token keyword\\\">undefined</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">warn</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>filePath<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> file exist but the registry has not been set. Please use --registry=&lt;NPM_REGISTRY></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">let</span> content <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 新文件buffer</span>\\n    <span class=\\\"token keyword\\\">await</span> fileUtil<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">readLineSync</span><span class=\\\"token punctuation\\\">(</span>filePath<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">line</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// 逐行扫描旧文件，按规则替换</span>\\n      content <span class=\\\"token operator\\\">=</span> content<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">concat</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">treatLine</span><span class=\\\"token punctuation\\\">(</span>line<span class=\\\"token punctuation\\\">,</span> npmOptions<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">writeFileSync</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>output<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span> content<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// buffer写入磁盘</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">info</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>filePath<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> treated</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">warn</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>filePath<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> does not exist</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> run<span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"总结\"\n    }}>{`总结`}</h3>\n    <p>{`本文从源失效出发，分析了lock文件记录源的方式，以及我们如何进行修复，并且顺带分析了一下这个工具的运行原理。`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"你可以从本文了解到\",\n    level: 2,\n    title: \"你可以从本文了解到\",\n    children: [\n        {\n              id: \"问题背景\",\n              level: 3,\n              title: \"问题背景\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"原因与解决方案\",\n              level: 3,\n              title: \"原因与解决方案\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"总结\",\n              level: 3,\n              title: \"总结\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}