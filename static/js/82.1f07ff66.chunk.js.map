{"version":3,"sources":["routes/posts/2016/11-16-raspberrypi-realvnc/document.mdx"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_runner_work_mzvast_github_io_mzvast_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"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","file":"static/js/82.1f07ff66.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.97,\"time\":58199.99999999999,\"words\":194}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"准备工作\"\n    }}>{`准备工作`}</h2>\n    <p>{`主要的参考就是这篇`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.raspberrypi.org/documentation/remote-access/vnc/\"\n      }}>{`官方教程`}</a>{`。`}</p>\n    <p>{`以下指的成功的定义是：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`开机自动启动vnc服务`}</li>\n    </ul>\n    <p>{`官方指导100%成功的场景是这样的：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`开机默认启动到桌面模式`}</li>\n      <li parentName=\"ul\">{`树莓派配置的interface中开启vnc开关`}</li>\n    </ul>\n    <p>{`以下情况下100%失败：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`开机默认启动到文本模式`}</li>\n    </ul>\n    <p>{`研究了一会，跳了几次坑之后，终于明白为什么官方教程主推service mode而晦涩的掩盖了virtual mode。`}</p>\n    <h2 {...{\n      \"id\": \"探索\"\n    }}>{`探索`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`在首次安装完realvnc后出现这一行字，也就是说有两种模式，分别对应两个service`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`Installed systemd unit for VNC Server in Service Mode daemon\nStart or stop the service with:\n  systemctl (start|stop) vncserver-x11-serviced.service\nMark or unmark the service to be started at boot time with:\n  systemctl (enable|disable) vncserver-x11-serviced.service\nInstalled systemd unit for VNC Server in Virtual Mode daemon\nStart or stop the service with:\n  systemctl (start|stop) vncserver-virtuald.service\nMark or unmark the service to be started at boot time with:\n  systemctl (enable|disable) vncserver-virtuald.service\n`}</code></pre>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"service模式详解\"\n    }}>{`service模式详解`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`服务名：vncserver-x11-serviced.service`}</li>\n      <li parentName=\"ul\">{`连接地址：直接就是ip`}</li>\n      <li parentName=\"ul\">{`树莓派的interface中的VNC控制的即该服务的开关`}</li>\n      <li parentName=\"ul\">{`是可以直接使用的（自带授权），用于以service模式启动vncserver，即通过转发到x11桌面服务来连接。`}</li>\n      <li parentName=\"ul\">{`依赖关系：必须启用lightdm服务（启动到桌面模式会自动带起该服务，但启动到CLI模式则不会带起该服务），否则能连接，但是黑屏。`}</li>\n      <li parentName=\"ul\">{`该模式特殊作用：具有在root权限下运行vncserver的能力，realvnc的托盘区图标也会有所不同来指示这种区别：在该模式下托盘区的图标是黑底，非root模式下托盘区的图标是白底。`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"virtual模式详解\"\n    }}>{`virtual模式详解`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`服务名：vncserver-virtuald.service：`}</li>\n      <li parentName=\"ul\">{`连接地址：ip：<虚拟桌面号>`}</li>\n      <li parentName=\"ul\">{`是不能直接使用的（需要企业授权），`}</li>\n      <li parentName=\"ul\">{`用于以virtual 模式启动vncserver，即通过创建virtual desktop来连接，`}</li>\n      <li parentName=\"ul\">{`具有按需创建的优点。`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"vncserver的本质\"\n    }}>{`vncserver的本质`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`可以看到vncserver是软链接到vncserver-virtual的，也就是运行vncserver创建的是virtual desktop`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"在headless模式下的完美方案\"\n    }}>{`在headless模式下的完美方案`}</h2>\n    <p>{`说了那么多，探索这些背后关联的目的就是为了在没有授权的情况下，尽可能的实现virtual模式的自动启动。`}</p>\n    <ul>\n      <li parentName=\"ul\">{`主要包括以下两点：`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`上面两个服务都不需要启用。（通过树莓派配置界面中interface的vnc可以直接关闭service模式）`}</li>\n          <li parentName=\"ul\">{`编写systemd服务来保持virtual desktop的开机启动`}</li>\n        </ul></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"新建vncserver自启服务\"\n    }}>{`新建vncserver自启服务`}</h3>\n    <p>{`有人已经写好了服务`}<a parentName=\"p\" {...{\n        \"href\": \"https://raspberrypi.stackexchange.com/questions/39372/etc-init-d-tightvncserver-script-fails-at-boot\"\n      }}>{`模板`}</a>{`，可以直接拿来用。`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`新建文件 /etc/systemd/system/vncserver@.service 内容如下:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`[Unit]\nDescription=Remote desktop service (VNC)\nAfter=syslog.target network.target\n\n[Service]\nType=forking\nUser=pi\nPAMName=login\nPIDFile=/home/pi/.vnc/%H:%i.pid\nExecStartPre=-/usr/bin/vncserver -kill :%i > /dev/null 2>&1\nExecStart=/usr/bin/vncserver -depth 24 -geometry 1280x800 :%i\nExecStop=/usr/bin/vncserver -kill :%i\n\n[Install]\nWantedBy=multi-user.target\n`}</code></pre>\n      </li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`添加可执行权限：`}</p>\n        <pre>sudo chmod +x  /etc/systemd/system/vncserver@.service</pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`测试：`}</p>\n        <pre>sudo systemctl start vncserver@1.service</pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`自启服务：`}</p>\n        <pre>sudo systemctl daemon-reload && sudo systemctl enable vncserver@1.service</pre>\n      </li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"准备工作\",\n    level: 2,\n    title: \"准备工作\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"探索\",\n    level: 2,\n    title: \"探索\",\n    children: [\n        {\n              id: \"service模式详解\",\n              level: 3,\n              title: \"service模式详解\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"virtual模式详解\",\n              level: 3,\n              title: \"virtual模式详解\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"在headless模式下的完美方案\",\n    level: 2,\n    title: \"在headless模式下的完美方案\",\n    children: [\n        {\n              id: \"新建vncserver自启服务\",\n              level: 3,\n              title: \"新建vncserver自启服务\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}