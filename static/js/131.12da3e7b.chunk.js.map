{"version":3,"sources":["routes/posts/2022/01/12-1915-iCopy-release-new-version/document.mdx"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_runner_work_mzvast_github_io_mzvast_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","mdx_mermaid_lib_Mermaid__WEBPACK_IMPORTED_MODULE_3__","chart","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"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","file":"static/js/131.12da3e7b.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.53,\"time\":91800,\"words\":306}\n/* @jsx mdx */\nimport { Mermaid } from 'mdx-mermaid/lib/Mermaid';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"你可以从本文了解到\"\n    }}>{`你可以从本文了解到`}</h2>\n    <h3 {...{\n      \"id\": \"icopy-背景\"\n    }}>{`iCopy 背景`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://greasyfork.org/zh-CN/scripts/411953-icopy5\"\n      }}>{`iCopy`}</a>{`是一个用于 Chrome 浏览器的 js 插件，主要用于帮助开发者在某些 CASE 网站中方便的复制和格式化 git commit msg。`}</p>\n    <p>{`原先的 CASE 复制工作流程如下`}</p>\n    <Mermaid chart={`graph TD;\n    CASE网站--复制API-->剪贴板;`} mdxType=\"Mermaid\" />\n    <p>{`然鹅，由于 CASE 网站复制的格式不符合 git 的要求，比如我们遵循 angular 的规范，那就需要改这个 msg，这时候 iCopy 就上场了。`}</p>\n    <p>{`用了 iCopy 的工作流程`}</p>\n    <Mermaid chart={`graph TD;\n    CASE网站--拦截复制API调用并修改内容-->剪贴板;`} mdxType=\"Mermaid\" />\n    <p>{`说白了就是做剪贴板的拦截。`}</p>\n    <p>{`CASE 网站将内容复制到剪贴板，常用的一般有两种方法。`}</p>\n    <p>{`1、`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand\"\n      }}>{`execCommand`}</a>{` 旧的，MDN 不推荐使用`}</p>\n    <p>{`2、`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API\"\n      }}>{`Clipboard API`}</a>{` 新版本 CASE 网站调用`}</p>\n    <h3 {...{\n      \"id\": \"execcommand-vs-clipboard-api\"\n    }}>{`execCommand vs clipboard API`}</h3>\n    <p>{`所以可以推测因为 execCommand 接口不推荐使用了，所以 CASE 网站改造成了用 Clipboard API。`}</p>\n    <p>{`那 clipboard API 有什么好处呢？`}</p>\n    <p>{`直观的可以感受一下两段代码`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// execCommand</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">copyToCb</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">text</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> input <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createElement</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'textarea'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    input<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setAttribute</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'readonly'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'readonly'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    input<span class=\\\"token punctuation\\\">.</span>value <span class=\\\"token operator\\\">=</span> text<span class=\\\"token punctuation\\\">;</span>\\n    document<span class=\\\"token punctuation\\\">.</span>body<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">appendChild</span><span class=\\\"token punctuation\\\">(</span>input<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    input<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">select</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    input<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setSelectionRange</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">9999</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">execCommand</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'copy'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    document<span class=\\\"token punctuation\\\">.</span>body<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">removeChild</span><span class=\\\"token punctuation\\\">(</span>input<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// clipboard API</span>\\n<span class=\\\"token keyword\\\">var</span> promise <span class=\\\"token operator\\\">=</span> navigator<span class=\\\"token punctuation\\\">.</span>clipboard<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">writeText</span><span class=\\\"token punctuation\\\">(</span>newClipText<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`代码量出现了肉眼可见的下降。`}</p>\n    <p>{`此外，clipboard返回的是promise，解锁了更现代的调用方式。`}</p>\n    <h4 {...{\n      \"id\": \"拦截-execcommand-的姿势\"\n    }}>{`拦截 execCommand 的姿势`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> _execCommand <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span>execCommand<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 原方法</span>\\n\\n<span class=\\\"token comment\\\">// 劫持</span>\\ndocument<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">execCommand</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">evtName</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>evtName <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'copy'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'enter exec'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\">// 由于前者使用必须要selection然后exec copy</span>\\n        <span class=\\\"token comment\\\">// 获取选中部分</span>\\n        <span class=\\\"token keyword\\\">const</span> text <span class=\\\"token operator\\\">=</span> window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getSelection</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span>text<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 格式化text并最终调用了copyText</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">copyText</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">text</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> el <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createElement</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'textarea'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    el<span class=\\\"token punctuation\\\">.</span>value <span class=\\\"token operator\\\">=</span> text<span class=\\\"token punctuation\\\">;</span>\\n    document<span class=\\\"token punctuation\\\">.</span>body<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">appendChild</span><span class=\\\"token punctuation\\\">(</span>el<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    el<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">select</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">_execCommand</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'copy'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 调用原方法</span>\\n    document<span class=\\\"token punctuation\\\">.</span>body<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">removeChild</span><span class=\\\"token punctuation\\\">(</span>el<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'copied:'</span><span class=\\\"token punctuation\\\">,</span> text<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`execCommand 比较清晰就不解释了。`}</p>\n    <h4 {...{\n      \"id\": \"拦截-clipboard-api-的姿势\"\n    }}>{`拦截 clipboard API 的姿势`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> _writeText <span class=\\\"token operator\\\">=</span> navigator<span class=\\\"token punctuation\\\">.</span>clipboard<span class=\\\"token punctuation\\\">.</span>writeText<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// save for later use</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">copyText</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">text</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// this得指向navigator.clipboard实例</span>\\n    <span class=\\\"token function\\\">_writeText</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">call</span><span class=\\\"token punctuation\\\">(</span>navigator<span class=\\\"token punctuation\\\">.</span>clipboard<span class=\\\"token punctuation\\\">,</span> text<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`writeText 劫持这里有一个坑，就在于如果直接使用，会报错，大致内容是typeError找不到Clipboard.navigator.clipboard.writeText的这个方法`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token function\\\">_writeText</span><span class=\\\"token punctuation\\\">(</span>text<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`这比较让人费解，为什么会是Clipboard的的writeText方法呢？为什么是typeError呢？`}</p>\n    <p>{`这就不得不研究一下这个方法究竟在做什么。`}</p>\n    <p>{`首先打开`}<a parentName=\"p\" {...{\n        \"href\": \"https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/modules/clipboard/clipboard.cc;l=53?q=CreateForWriteText&ss=chromium%2Fchromium%2Fsrc\"\n      }}>{`Chromium的clipboard部分源码`}</a></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-cpp\",\n        \"data-language\": \"cpp\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"ScriptPromise Clipboard<span class=\\\"token operator\\\">::</span><span class=\\\"token function\\\">writeText</span><span class=\\\"token punctuation\\\">(</span>ScriptState<span class=\\\"token operator\\\">*</span> script_state<span class=\\\"token punctuation\\\">,</span>\\n                                   <span class=\\\"token keyword\\\">const</span> String<span class=\\\"token operator\\\">&amp;</span> data<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> ClipboardPromise<span class=\\\"token operator\\\">::</span><span class=\\\"token function\\\">CreateForWriteText</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">GetExecutionContext</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n                                              script_state<span class=\\\"token punctuation\\\">,</span> data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// static</span>\\nScriptPromise ClipboardPromise<span class=\\\"token operator\\\">::</span><span class=\\\"token function\\\">CreateForWriteText</span><span class=\\\"token punctuation\\\">(</span>ExecutionContext<span class=\\\"token operator\\\">*</span> context<span class=\\\"token punctuation\\\">,</span>\\n                                                   ScriptState<span class=\\\"token operator\\\">*</span> script_state<span class=\\\"token punctuation\\\">,</span>\\n                                                   <span class=\\\"token keyword\\\">const</span> String<span class=\\\"token operator\\\">&amp;</span> data<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>script_state<span class=\\\"token operator\\\">-></span><span class=\\\"token function\\\">ContextIsValid</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">ScriptPromise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  ClipboardPromise<span class=\\\"token operator\\\">*</span> clipboard_promise <span class=\\\"token operator\\\">=</span>\\n      MakeGarbageCollected<span class=\\\"token operator\\\">&lt;</span>ClipboardPromise<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">,</span> script_state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  clipboard_promise<span class=\\\"token operator\\\">-></span><span class=\\\"token function\\\">GetTaskRunner</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">-></span><span class=\\\"token function\\\">PostTask</span><span class=\\\"token punctuation\\\">(</span>\\n      FROM_HERE<span class=\\\"token punctuation\\\">,</span> WTF<span class=\\\"token operator\\\">::</span><span class=\\\"token function\\\">Bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>ClipboardPromise<span class=\\\"token operator\\\">::</span>HandleWriteText<span class=\\\"token punctuation\\\">,</span>\\n                           <span class=\\\"token function\\\">WrapPersistent</span><span class=\\\"token punctuation\\\">(</span>clipboard_promise<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> clipboard_promise<span class=\\\"token operator\\\">-></span>script_promise_resolver_<span class=\\\"token operator\\\">-></span><span class=\\\"token function\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">void</span> ClipboardPromise<span class=\\\"token operator\\\">::</span><span class=\\\"token function\\\">HandleWriteTextWithPermission</span><span class=\\\"token punctuation\\\">(</span>PermissionStatus status<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">DCHECK_CALLED_ON_VALID_SEQUENCE</span><span class=\\\"token punctuation\\\">(</span>sequence_checker_<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span><span class=\\\"token function\\\">GetExecutionContext</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>status <span class=\\\"token operator\\\">!=</span> PermissionStatus<span class=\\\"token operator\\\">::</span>GRANTED<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    script_promise_resolver_<span class=\\\"token operator\\\">-></span><span class=\\\"token function\\\">Reject</span><span class=\\\"token punctuation\\\">(</span>MakeGarbageCollected<span class=\\\"token operator\\\">&lt;</span>DOMException<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span>\\n        DOMExceptionCode<span class=\\\"token operator\\\">::</span>kNotAllowedError<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"Write permission denied.\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"highlighted-line\\\">  SystemClipboard<span class=\\\"token operator\\\">*</span> system_clipboard <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">GetLocalFrame</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">-></span><span class=\\\"token function\\\">GetSystemClipboard</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span>  system_clipboard<span class=\\\"token operator\\\">-></span><span class=\\\"token function\\\">WritePlainText</span><span class=\\\"token punctuation\\\">(</span>plain_text_<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  system_clipboard<span class=\\\"token operator\\\">-></span><span class=\\\"token function\\\">CommitWrite</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  script_promise_resolver_<span class=\\\"token operator\\\">-></span><span class=\\\"token function\\\">Resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`稍微梳理了一下调用关系`}</p>\n    <Mermaid chart={`graph TD;\n\n ClipboardPromise::CreateForWriteText--> ClipboardPromise::HandleWriteText--> ClipboardPromise::HandleWriteTextWithPermission-->GetSystemClipboard--> WritePlainText_plain_text-->\n  system_clipboard_CommitWrite-->\n  script_promise_resolver_Resolve`} mdxType=\"Mermaid\" />\n    <p>{`流程比较清晰，我们重点关注这个GetLocalFrame()方法。因为问题就出在`}<a parentName=\"p\" {...{\n        \"href\": \"https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/frame/local_frame.cc;l=2628\"\n      }}>{`这个文件`}</a></p>\n    <p>{`这里发生了一个强转，将this转成了`}<inlineCode parentName=\"p\">{`system_clipboard_`}</inlineCode>{`，所以错误提示显示的是typeError（cpp的部分出错了）。而不是js的错误（js根本没有type这个词汇）。`}</p>\n    <p>{`看了这个代码之后，我很清楚，只要在调用的时候确保this是正确的clipboard的实例就行了。`}</p>\n    <p>{`那么谁才是clipboard的实例呢？答案是`}<inlineCode parentName=\"p\">{`navigator.clipboard`}</inlineCode>{`。`}</p>\n    <p>{`题外话：浏览器全局对象里面有一个Clipboard，他是这个实例的构造函数，host在适当的时候会创建它的实例（lazy）`}</p>\n    <p>{`此外，有同学就会问了，那么为什么`}<inlineCode parentName=\"p\">{`execCommand`}</inlineCode>{`不报错呢？\n主要是默认的this指向了window，而execCommand内部`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"contentWindow<span class=\\\"token punctuation\\\">.</span>document<span class=\\\"token punctuation\\\">.</span>execCommand\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"gist-的实用小技巧\"\n    }}>{`gist 的实用小技巧`}</h3>\n    <p>{`我们的脚本用git的gist发布和管理，那么获取一个固定的raw文件url呢。`}</p>\n    <p>{`我们可以用下面这个地址访问哈。\n`}<inlineCode parentName=\"p\">{`https://gist.githubusercontent.com/[username]/[gist_id]/raw/[filename]`}</inlineCode></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"你可以从本文了解到\",\n    level: 2,\n    title: \"你可以从本文了解到\",\n    children: [\n        {\n              id: \"icopy-背景\",\n              level: 3,\n              title: \"iCopy 背景\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"execcommand-vs-clipboard-api\",\n              level: 3,\n              title: \"execCommand vs clipboard API\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"gist-的实用小技巧\",\n              level: 3,\n              title: \"gist 的实用小技巧\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}