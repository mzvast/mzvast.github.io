{"version":3,"sources":["routes/posts/2015/07-07-vagrant-experience/document.mdx"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_runner_work_mzvast_github_io_mzvast_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","parentName","href","id","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"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","file":"static/js/79.d0760b9c.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.995,\"time\":59700,\"words\":199}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`首先需要下载`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.vagrantup.com/\"\n      }}>{`vagrantup`}</a>{`和`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.virtualbox.org/\"\n      }}>{`virtualbox`}</a></p>\n    <h2 {...{\n      \"id\": \"vagrant常用命令\"\n    }}>{`Vagrant常用命令`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`vagrant box add {title} {url} #添加一个虚拟机,{url}可以是网址，也可以指向本地的文件,{title}是虚拟机的名称可以自定\nvagrant init {title}  #初始化该虚拟机\nvagrant up    #启动虚拟机\nvagrant halt [name]   #关闭虚拟机\nvagrant box list  #列出当前导入的box\nvagrant destory   #移除虚拟机\nvagrant box remove [name] #移除box\nvagrant status [name] #查看虚拟机的状态\nvagrant ssh   #ssh连接虚拟机\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"box的来源\"\n    }}>{`BOX的来源`}</h2>\n    <p>{`可以自己打包box，也可以用其他人打包好的box哦，推荐一个觉得还不错的box站点`}<a parentName=\"p\" {...{\n        \"href\": \"vagrantbox.es\"\n      }}>{`vagrantbox.es`}</a></p>\n    <h2 {...{\n      \"id\": \"关于配置文件\"\n    }}>{`关于配置文件`}</h2>\n    <p>{`配置文件在当前目录的Vagrantfile文件中`}</p>\n    <h2 {...{\n      \"id\": \"体验过程\"\n    }}>{`体验过程`}</h2>\n    <p>{`说道体验我们就来从头到尾走一个过程吧！安装完上面提到的两个软件，在这里面我们以Devopera CentOS 6 LAMP stack这个box为例。Let’s Go!`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`mkdir vagrant && cd vagrant\n`}</code></pre>\n    <p>{`   添加box：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`vagrant box add doco6-lamp-dev http://devopera.com/node/63/download/centos6\n`}</code></pre>\n    <p>{`然后就会自动的用curl下载这个文件了，你也可以先下载好然后给它传入一个本地地址哈。比如这样`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`vagrant box add doco6-dj1off-dev \\\\\\\\E:\\\\\\\\doco6-dj1offr006-dev.box     #添加box\nvagrant init doco6-lamp-dev #初始化\n`}</code></pre>\n    <p>{`这个时候目录下就会出现一个.vagrant目录和一个Vagrantfile文件`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`vagrant up #启动虚拟机\n`}</code></pre>\n    <p>{`如果没有报错，那么就可以通过ssh登录虚拟机了，有点激动哈！`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`vagrant ssh #ssh登录虚拟机。成功登录会显示当前虚拟机的配置信息和监听的端口号。\n`}</code></pre>\n    <p>{`然后就可以运行各种命令了，玩的差不多了，咱们关机吧`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`vagrant halt\n`}</code></pre>\n    <p>{`如果你不再使用这个虚拟机了，想要销毁使用痕迹，运行。这样下次vagrant up的时候又会重新初始化这台虚拟机咯。`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`vagrant destroy \n`}</code></pre>\n    <p>{`如果你想打包这个虚拟机，那么就要用到打包命令`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`vagrant package\n`}</code></pre>\n    <p>{`可附带参数（原文引用）`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`--base NAME - Instead of packaging a VirtualBox machine that Vagrant manages, this will package a VirtualBox machine that VirtualBox manages. NAME should be the name or UUID of the machine from the VirtualBox GUI.\n--output NAME - The resulting package will be saved as NAME. By default, it will be saved as package.box.\n--include x,y,z - Additional files will be packaged with the box. These can be used by a packaged Vagrantfile (documented below) to perform additional tasks.\n--vagrantfile FILE - Packages a Vagrantfile with the box, that is loaded as part of the Vagrantfile load order when the resulting box is used.\n`}</code></pre>\n    <p>{`那么今天初步的体验先到这里，更多体验期待就下次分享啦~`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"vagrant常用命令\",\n    level: 2,\n    title: \"Vagrant常用命令\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"box的来源\",\n    level: 2,\n    title: \"BOX的来源\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"关于配置文件\",\n    level: 2,\n    title: \"关于配置文件\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"体验过程\",\n    level: 2,\n    title: \"体验过程\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}