{"version":3,"sources":["routes/posts/2020/12/08-0152-official-website-project-review-part3/document.mdx"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_runner_work_mzvast_github_io_mzvast_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"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","file":"static/js/132.3d164828.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"3 min read\",\"minutes\":2.54,\"time\":152400,\"words\":508}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"你可以从本文了解到\"\n    }}>{`你可以从本文了解到`}</h2>\n    <h2 {...{\n      \"id\": \"帧动画方案的变更\"\n    }}>{`帧动画方案的变更`}</h2>\n    <p>{`由于 part1 部分提到的“换图的方案”产生的网络请求过多，影响了页面整体的加载。`}</p>\n    <p>{`为此改变了方案，采用了 CSS Sprites 动画。说人话就是 N 张帧动画合成一张大图，然后按顺序换背景图的取图位置。`}</p>\n    <p>{`为此我做了一个工具项目`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/mzvast/frame-animation-sprite-maker\"\n      }}>{`frame-animation-sprite-maker`}</a>{`，里面主要是用到了 gka 这个包，使用的方法是把图片放入 images 目录下，运行`}<inlineCode parentName=\"p\">{`npm run build:gka`}</inlineCode>{`会在 build 目录下生成合成的图，之后如果图片尺寸比较大，那么 gka 压缩会出错，我们可以手动采用 imagemin 再压一遍，执行`}<inlineCode parentName=\"p\">{`npm run imagemin`}</inlineCode>{`即可在 dist 目录下产生如下配置的压缩图片啦。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// frame-animation-sprite-maker/imagemin.js</span>\\n<span class=\\\"token keyword\\\">const</span> imagemin <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'imagemin'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// const imageminJpegtran = require('imagemin-jpegtran');</span>\\n<span class=\\\"token keyword\\\">const</span> imageminPngquant <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'imagemin-pngquant'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> files <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">imagemin</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'build/**/**.{jpg,png}'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n        destination<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'dist'</span><span class=\\\"token punctuation\\\">,</span>\\n        plugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n            <span class=\\\"token comment\\\">// imageminJpegtran(),</span>\\n            <span class=\\\"token function\\\">imageminPngquant</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n                quality<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0.6</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0.8</span><span class=\\\"token punctuation\\\">]</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>files<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">//=> [{data: &lt;Buffer 89 50 4e …>, destinationPath: 'build/images/foo.jpg'}, …]</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`而在移动端，这套动画的兼容性还是不够好。为此我们用 Gif 图做了 H5 的动画。CSS 动画还是留给了 PC。`}</p>\n    <h2 {...{\n      \"id\": \"移动端返回位置问题，hook-相关\"\n    }}>{`移动端返回位置问题，hook 相关`}</h2>\n    <p>{`这个问题主要出现在移动端，用户在返回上一个页面的时候，有一定几率停在错误的地方。据称在 Android 上较为容易出现。为此，只好手动实现一个简单的位置记录器。但逻辑对的，但就是拿不到正确的高度，在页面销毁的时候，总是会发生高度突变。\n然后，就想到了 useEffect 是异步入列的，可以试试同步执行的 useLayoutEffect，结果还真好了，执行提前了，高度不会突变了。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\",\n        \"data-language\": \"typescript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">import</span> Env <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'Env'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>useEffect<span class=\\\"token punctuation\\\">,</span> useLayoutEffect<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>useLocation<span class=\\\"token punctuation\\\">,</span> useHistory<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-router-dom'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> isFirstLoad <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// blocking mode will delay page render, so element will not show immediately</span>\\n<span class=\\\"token keyword\\\">let</span> scrollMap <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> lastPathname <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">ScrollToTopPatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>pathname<span class=\\\"token punctuation\\\">,</span> state<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useLocation</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>action<span class=\\\"token punctuation\\\">,</span> length<span class=\\\"token punctuation\\\">,</span> location<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useHistory</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// console.log('ddt::action', action, isFirstLoad);</span>\\n    <span class=\\\"token keyword\\\">let</span> skip <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>action <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'POP'</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token operator\\\">!</span>isFirstLoad<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// history返回不跳转顶部</span>\\n        skip <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\">// fix hooks order change , DON'T return null</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    isFirstLoad <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"highlighted-line\\\">    <span class=\\\"token function\\\">useLayoutEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span></span>        <span class=\\\"token comment\\\">// console.log('ddt::pathname', pathname);</span>\\n        <span class=\\\"token comment\\\">// console.log('ddt::action', action, pathname, lastPathname);</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>action <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'POP'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token comment\\\">// console.log('ddt::doScroll', action);</span>\\n            <span class=\\\"token comment\\\">// back?</span>\\n<span class=\\\"highlighted-line\\\">            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>pathname <span class=\\\"token keyword\\\">in</span> scrollMap<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span></span>                <span class=\\\"token comment\\\">// pop时，如果有存，则回到记忆的位置</span>\\n                <span class=\\\"token comment\\\">// console.log('ddt::doScroll', action, scrollMap[pathname]);</span>\\n                window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">scrollTo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> scrollMap<span class=\\\"token punctuation\\\">[</span>pathname<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>skip<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\">// use search instead of hash when using history router</span>\\n        <span class=\\\"token keyword\\\">const</span> hasJumpSignal <span class=\\\"token operator\\\">=</span> location<span class=\\\"token punctuation\\\">.</span>search<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">includes</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'anchor='</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>hasJumpSignal<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">const</span> anchor<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">string</span> <span class=\\\"token operator\\\">=</span> location<span class=\\\"token punctuation\\\">.</span>search\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">split</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'anchor='</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">split</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'&amp;'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">const</span> element<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">any</span> <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span>anchor<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">const</span> backScrollOffset <span class=\\\"token operator\\\">=</span> Env<span class=\\\"token punctuation\\\">.</span>ua<span class=\\\"token punctuation\\\">.</span>isH5 <span class=\\\"token operator\\\">?</span> <span class=\\\"token number\\\">100</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">;</span>\\n            element <span class=\\\"token operator\\\">&amp;&amp;</span> window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">scrollTo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>offsetTop <span class=\\\"token operator\\\">-</span> backScrollOffset<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token comment\\\">// console.log('ddt::top!');</span>\\n            window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">scrollTo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>pathname<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"highlighted-line\\\">    <span class=\\\"token function\\\">useLayoutEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span></span>        <span class=\\\"token comment\\\">// 此处用useEffect则会读到错误的尺寸</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token comment\\\">// console.log('ddt::unmount!', pathname);</span>\\n            scrollMap<span class=\\\"token punctuation\\\">[</span>pathname<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> window<span class=\\\"token punctuation\\\">.</span>scrollY<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//max; //</span>\\n            <span class=\\\"token comment\\\">// console.log('ddt::do scrollMap', scrollMap);</span>\\n            lastPathname <span class=\\\"token operator\\\">=</span> pathname<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"开发效率的相关工具、库\"\n    }}>{`开发效率的相关工具、库`}</h2>\n    <p>{`hygen 做代码生成器，统一 components、pages 的模板`}</p>\n    <p>{`storybook 做 UI 组件的独立开发环境（单测环境）`}</p>\n    <h2 {...{\n      \"id\": \"ssr-模式下的-es5-直连调试方法\"\n    }}>{`SSR 模式下的 es5 直连调试方法`}</h2>\n    <p>{`part1 提到 SPA 模式下的直连方法。但在 SSR 模式下，由于端口占用等问题，就失效了。`}</p>\n    <p>{`其实要解决两个问题：`}</p>\n    <h3 {...{\n      \"id\": \"第一步是如何让双server在代理的情况下run起来。\"\n    }}>{`第一步是如何让双server在代理的情况下run起来。`}</h3>\n    <p>{`razzle的ssr开发环境的双server架构，大致如下：`}</p>\n    <p>{`3000=> express server 负责renderToString，流量的直接入口\n3001=> webpackDevServer 负责静态文件（默认注入localhost:3001）`}</p>\n    <p>{`而在外部设备如手机端通过proxy连接，将不能解析localhost:3001，因此可以通过如下配置转发。`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`http://vredu.baidu.com localhost:3000\nhttp://vvredu.baidu.com localhost:3001\n`}</code></pre>\n    <p>{`这样就完成了端口转发。`}</p>\n    <h3 {...{\n      \"id\": \"第二部是如何编译成es5\"\n    }}>{`第二部是如何编译成es5`}</h3>\n    <p>{`第一步完成后，发现外部的js转成了es5，但是一些razzle内部的代码还是es6.`}</p>\n    <p>{`还好我们在 github 上找到这样的实现方法，将这些文件再次进行babel编译。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// razzle.config.js</span>\\n<span class=\\\"token keyword\\\">const</span> ieRule <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    test<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token regex\\\">/\\\\.jsx?$/</span><span class=\\\"token punctuation\\\">,</span>\\n    include<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">RegExp</span><span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">node_modules/(?=(</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token punctuation\\\">[</span>\\n            <span class=\\\"token string\\\">'acorn-jsx'</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token string\\\">'estree-walker'</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token string\\\">'regexpu-core'</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token string\\\">'unicode-match-property-ecmascript'</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token string\\\">'unicode-match-property-value-ecmascript'</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token string\\\">'react-dev-utils'</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token string\\\">'ansi-styles'</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token string\\\">'ansi-regex'</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token string\\\">'chalk'</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token string\\\">'strip-ansi'</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'|'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">))</span><span class=\\\"token template-punctuation string\\\">`</span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    use<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        loader<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'babel-loader'</span><span class=\\\"token punctuation\\\">,</span>\\n        options<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n            presets<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n                <span class=\\\"token punctuation\\\">[</span>\\n                    <span class=\\\"token string\\\">'@babel/preset-env'</span><span class=\\\"token punctuation\\\">,</span>\\n                    <span class=\\\"token punctuation\\\">{</span>\\n                        targets<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                            ie<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">11</span>\\n                        <span class=\\\"token punctuation\\\">}</span>\\n                    <span class=\\\"token punctuation\\\">}</span>\\n                <span class=\\\"token punctuation\\\">]</span>\\n            <span class=\\\"token punctuation\\\">]</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    plugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token punctuation\\\">{</span>\\n            name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'typescript'</span><span class=\\\"token punctuation\\\">,</span>\\n            options<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                useBabel<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n                tsLoader<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                    transpileOnly<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n                    experimentalWatchApi<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n                <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                forkTsChecker<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                    tsconfig<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'./tsconfig.json'</span><span class=\\\"token punctuation\\\">,</span>\\n                    tslint<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n                    watch<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'./src'</span><span class=\\\"token punctuation\\\">,</span>\\n                    typeCheck<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token function-variable function\\\">modifyWebpackConfig</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span>env<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>target<span class=\\\"token punctuation\\\">,</span> dev<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> webpackConfig<span class=\\\"token punctuation\\\">:</span> config<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>dev <span class=\\\"token operator\\\">&amp;&amp;</span> target <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'web'</span> <span class=\\\"token operator\\\">&amp;&amp;</span> process<span class=\\\"token punctuation\\\">.</span>env<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">ECMA</span> <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'5'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'es5 running'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token comment\\\">// config.entry.client[0] = require.resolve('webpack/hot/dev-server');</span>\\n            config<span class=\\\"token punctuation\\\">.</span>module<span class=\\\"token punctuation\\\">.</span>rules<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">unshift</span><span class=\\\"token punctuation\\\">(</span>ieRule<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\",\n        \"data-language\": \"json\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// .babelrc</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"presets\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token string\\\">\\\"razzle/babel\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token property\\\">\\\"targets\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token property\\\">\\\"browsers\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n              <span class=\\\"token string\\\">\\\"ie 11\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token string\\\">\\\"last 2 Chrome versions\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token string\\\">\\\"last 2 Firefox versions\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token string\\\">\\\"last 2 Safari versions\\\"</span>\\n            <span class=\\\"token punctuation\\\">]</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"你可以从本文了解到\",\n    level: 2,\n    title: \"你可以从本文了解到\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"帧动画方案的变更\",\n    level: 2,\n    title: \"帧动画方案的变更\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"移动端返回位置问题，hook-相关\",\n    level: 2,\n    title: \"移动端返回位置问题，hook 相关\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"开发效率的相关工具、库\",\n    level: 2,\n    title: \"开发效率的相关工具、库\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"ssr-模式下的-es5-直连调试方法\",\n    level: 2,\n    title: \"SSR 模式下的 es5 直连调试方法\",\n    children: [\n        {\n              id: \"第一步是如何让双server在代理的情况下run起来。\",\n              level: 3,\n              title: \"第一步是如何让双server在代理的情况下run起来。\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"第二部是如何编译成es5\",\n              level: 3,\n              title: \"第二部是如何编译成es5\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}