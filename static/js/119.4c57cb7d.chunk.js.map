{"version":3,"sources":["routes/posts/2020/09/26-1736-better-creating/document.mdx"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_runner_work_mzvast_github_io_mzvast_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","href","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"sSAGaA,EAAc,CAACC,KAAO,aAAaC,QAAU,MAAMC,KAAO,OAAOC,MAAQ,MAShFC,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,gBADR,gBAGAL,OAAAE,EAAA,EAAAF,CAAA,2LACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MACbN,OAAAE,EAAA,EAAAF,CAAA,KAAGM,WAAW,MAAd,iCAEFN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MACbN,OAAAE,EAAA,EAAAF,CAAA,KAAGM,WAAW,MAAd,+JAGJN,OAAAE,EAAA,EAAAF,CAAA,uJACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,OADR,OAGAL,OAAAE,EAAA,EAAAF,CAAA,meAEAA,OAAAE,EAAA,EAAAF,CAAA,qYACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,oEADR,oEAGAL,OAAAE,EAAA,EAAAF,CAAA,8BAAUA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,qCAAV,kOACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,eACbC,gBAAiB,MACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,8oFAGhBX,OAAAE,EAAA,EAAAF,CAAA,4DAAeA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,uBAAf,sBACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,eACbC,gBAAiB,MACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,09BAGhBX,OAAAE,EAAA,EAAAF,CAAA,8ZACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,eACbC,gBAAiB,MACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,8sDAGhBX,OAAAE,EAAA,EAAAF,CAAA,0UACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,kCADR,kCAGAL,OAAAE,EAAA,EAAAF,CAAA,yJACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,qCADR,qCAGAL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MACbN,OAAAE,EAAA,EAAAF,CAAA,KAAGM,WAAW,MAAd,8CACAN,OAAAE,EAAA,EAAAF,CAAA,KAAGM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,KAAf,kCAErBN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MACbN,OAAAE,EAAA,EAAAF,CAAA,KAAGM,WAAW,MAAd,4BACAN,OAAAE,EAAA,EAAAF,CAAA,OAAKM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,IAA3B,wTAUzBN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,4CADR,4CAGAL,OAAAE,EAAA,EAAAF,CAAA,gDAAkBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,qBAAlB,iCAAwFN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,cAAxF,wEACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,eACbC,gBAAiB,MACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,+xTAGhBX,OAAAE,EAAA,EAAAF,CAAA,mHACAA,OAAAE,EAAA,EAAAF,CAAA,uDACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,eACbC,gBAAiB,MACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,ibAGhBX,OAAAE,EAAA,EAAAF,CAAA,uDACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,WADR,YAGAL,OAAAE,EAAA,EAAAF,CAAA,sGAAsBA,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,KAAQ,CACxCM,KAAQ,4DADU,yBAAtB,wCAGAZ,OAAAE,EAAA,EAAAF,CAAA,kEAAgBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,4EAAhB,UACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,eACbC,gBAAiB,MACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,63YAGhBX,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,mBADR,oBAGAL,OAAAE,EAAA,EAAAF,CAAA,8EAAkBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,2DAAlB,yDAA+FN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,kBAA/F,oDACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,eACbC,gBAAiB,MACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,miSAGhBX,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,oBADR,qBAGAL,OAAAE,EAAA,EAAAF,CAAA,8EAAkBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,uBAClBN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,eACbC,gBAAiB,MACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,wizCAOpBf,EAAWiB,gBAAiB,EACrB,IAAMC,EAAkB,WAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAmB,CAChD,CACEV,GAAI,eACJa,MAAO,EACPC,MAAO,eACPC,SAAU,IAId,CACIf,GAAI,MACJa,MAAO,EACPC,MAAO,MACPC,SAAU,CACN,CACMf,GAAI,mEACJa,MAAO,EACPC,MAAO,mEACPC,SAAU,MAMxB,CACIf,GAAI,iCACJa,MAAO,EACPC,MAAO,iCACPC,SAAU,CACN,CACMf,GAAI,oCACJa,MAAO,EACPC,MAAO,oCACPC,SAAU,IAIlB,CACQf,GAAI,2CACJa,MAAO,EACPC,MAAO,2CACPC,SAAU,QAQXC,EAAc","file":"static/js/119.4c57cb7d.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"7 min read\",\"minutes\":6.705,\"time\":402300,\"words\":1341}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"背景\"\n    }}>{`背景`}</h2>\n    <p>{`本博客在日常写作中遇到一些可读性和视觉传达方面的问题，比如`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`没有目录 Toc`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`缺乏代码行高亮 LineNumbersHighlight。代码缺乏表现力、重点不突出。`}</p>\n      </li>\n    </ul>\n    <p>{`本文就对此进行学习，有功能就用，没有就造轮子。`}</p>\n    <h2 {...{\n      \"id\": \"toc\"\n    }}>{`Toc`}</h2>\n    <p>{`此前，我在每次落笔前会先写一个所谓的“你将从本文了解到”的一节来作为提纲，避免离题。（事实证明确实有帮助）\n但是这个手工的目录和具备跳转能力的目录还是差很多。`}</p>\n    <p>{`本博客工程中并没有组件实现这个功能。但好在 mdx 相关插件(mdxTableOfContents)提供了 toc 的数据。我们可以自己渲染一个 toc，问题就变成了写一个目录组件。`}</p>\n    <h3 {...{\n      \"id\": \"toc-数据来源及其数据结构\"\n    }}>{`Toc 数据来源及其数据结构`}</h3>\n    <p>{`可以从`}<inlineCode parentName=\"p\">{`src/components/BlogPostLayout.tsx`}</inlineCode>{`中发现 react-navi 路由提供了视图数据，其中 tableOfContents 就是 mdx 插件提供的获取 Toc 数据体的 function。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"data-language\": \"tsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">BlogPostLayout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span>blogRoot<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> BlogPostLayoutProps</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">let</span> <span class=\\\"token punctuation\\\">{</span>title<span class=\\\"token punctuation\\\">,</span> data<span class=\\\"token punctuation\\\">,</span> url<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useCurrentRoute</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">let</span> <span class=\\\"token punctuation\\\">{</span>connect<span class=\\\"token punctuation\\\">,</span> content<span class=\\\"token punctuation\\\">,</span> head<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useView</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">!</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// let {MDXComponent, readingTime} = content;</span>\\n<span class=\\\"highlighted-line\\\">    <span class=\\\"token keyword\\\">let</span> <span class=\\\"token punctuation\\\">{</span>MDXComponent<span class=\\\"token punctuation\\\">,</span> readingTime<span class=\\\"token punctuation\\\">,</span> tableOfContents<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> content<span class=\\\"token punctuation\\\">;</span></span>    <span class=\\\"token keyword\\\">const</span> disqusShortname <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'miaocode'</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> disqusConfig<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">any</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n        url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'https://mzvast.github.io'</span> <span class=\\\"token operator\\\">+</span> url<span class=\\\"token punctuation\\\">.</span>pathname<span class=\\\"token punctuation\\\">,</span>\\n        identifier<span class=\\\"token punctuation\\\">:</span> data<span class=\\\"token punctuation\\\">.</span>slug<span class=\\\"token punctuation\\\">,</span>\\n        title<span class=\\\"token punctuation\\\">:</span> title\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`其返还的数据结构`}<inlineCode parentName=\"p\">{`TableOfContentsData`}</inlineCode>{`如下。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"data-language\": \"tsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">type</span> TocItem <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n    level<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">number</span><span class=\\\"token punctuation\\\">;</span>\\n    title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n    children<span class=\\\"token punctuation\\\">:</span> TocItem<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">type</span> TableOfContentsData<span class=\\\"token punctuation\\\">:</span>TocItem<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`插件的部分代码我们可以看一下,值得到这个插件只用到 level2 和 3，再深的层次就不解析了。如果有需要可以通过传参的方式修改层级（本博客并不需要）。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"data-language\": \"tsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"highlighted-line\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">getInfo</span><span class=\\\"token punctuation\\\">(</span></span><span class=\\\"highlighted-line\\\">    <span class=\\\"token parameter\\\">root<span class=\\\"token punctuation\\\">,</span></span><span class=\\\"highlighted-line\\\">    <span class=\\\"token punctuation\\\">{</span>minTableOfContentsLevel <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> maxTableOfContentsLevel <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span></span></span><span class=\\\"highlighted-line\\\"><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span></span>    <span class=\\\"token keyword\\\">let</span> info <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n        hasFrontMatterExport<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n        hasTableOfContentsExport<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n        tableOfContents<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// ...</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> info<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`最后有了数据之后的组件编写问题就简单了。样式上复用 blockquote 的样式，并稍作调整，完成之后就是现在文章头部的 Toc 惹。`}</p>\n    <h2 {...{\n      \"id\": \"代码块高亮\"\n    }}>{`代码块高亮`}</h2>\n    <p>{`工程中@mdx-js/react 是默认支持该功能的。具体看下面分析。`}</p>\n    <h3 {...{\n      \"id\": \"code-block-highlight-语法\"\n    }}>{`code block highlight 语法`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`代码块头部声明`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`\\``}{`\\``}{`\\``}{`js{1,2,3–6}`}</em></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`文中声明`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`highlight-line：高亮当前行\n\nhighlight-next-line：高亮下一行\n\nhighlight-start：连续高亮开始，和 hightlight-end 成对使用。\n\nhighlight-range{1, 4-6}：指定行号高亮。\n`}</code></pre>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"mdx-中的具体实现\"\n    }}>{`mdx 中的具体实现`}</h3>\n    <p>{`本 blog 工程基于`}<inlineCode parentName=\"p\">{`react-scripts-mdx`}</inlineCode>{`，它依赖了`}<inlineCode parentName=\"p\">{`mdx-loader`}</inlineCode>{`，这个 loader 的入口代码如下`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>getOptions<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'loader-utils'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> readingTime <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'reading-time'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> emoji <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'remark-emoji'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> images <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'remark-images'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> textr <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'remark-textr'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> slug <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'remark-slug'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> mdx <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'@mdx-js/mdx'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> mdxTableOfContents <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'mdx-table-of-contents'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> mdxExportJSONByDefault <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'mdx-constant'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> grayMatter <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'gray-matter'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> typography <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./typography'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"highlighted-line\\\"><span class=\\\"token keyword\\\">const</span> rehypePrism <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./prism'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span>\\nmodule<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">exports</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">source</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">let</span> result<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>data<span class=\\\"token punctuation\\\">,</span> content<span class=\\\"token punctuation\\\">:</span> mdxContent<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">grayMatter</span><span class=\\\"token punctuation\\\">(</span>source<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> callback <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">async</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> options <span class=\\\"token operator\\\">=</span> Object<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">assign</span><span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token punctuation\\\">{</span>\\n            remarkPlugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n                slug<span class=\\\"token punctuation\\\">,</span>\\n                images<span class=\\\"token punctuation\\\">,</span>\\n                emoji<span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token punctuation\\\">[</span>textr<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>plugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>typography<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span>\\n            <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"highlighted-line\\\">            rehypePlugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>rehypePrism<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span></span>            compilers<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n                mdxTableOfContents<span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token function\\\">mdxExportJSONByDefault</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'frontMatter'</span><span class=\\\"token punctuation\\\">,</span> data<span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">]</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token function\\\">getOptions</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">{</span>filepath<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>resourcePath<span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n        result <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">mdx</span><span class=\\\"token punctuation\\\">(</span>mdxContent<span class=\\\"token punctuation\\\">,</span> options<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> estimatedReadingTime <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">readingTime</span><span class=\\\"token punctuation\\\">(</span>source<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">let</span> code <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">\\nimport React from 'react'\\nimport { mdx } from '@mdx-js/react'\\nexport const readingTime = </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token constant\\\">JSON</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">stringify</span><span class=\\\"token punctuation\\\">(</span>estimatedReadingTime<span class=\\\"token punctuation\\\">)</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">\\n</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>result<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">\\n</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span> code<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`其中有个 rehypePrism，我们对此比较感兴趣，`}</p>\n    <p>{`其目录结构如下`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token punctuation\\\">.</span>\\n├── getCodeBlockOptions<span class=\\\"token punctuation\\\">.</span>js\\n├── highlightCode<span class=\\\"token punctuation\\\">.</span>js\\n├── highlightLines<span class=\\\"token punctuation\\\">.</span>js\\n├── index<span class=\\\"token punctuation\\\">.</span>js\\n└── loadPrismLanguage<span class=\\\"token punctuation\\\">.</span>js\\n\"\n        }\n      }}></code></pre>\n    <p>{`让我们看看代码`}</p>\n    <h4 {...{\n      \"id\": \"indexjs\"\n    }}>{`index.js`}</h4>\n    <p>{`顶部有一段注释，表明这段代码跟`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gatsbyjs.com/plugins/gatsby-remark-prismjs/\"\n      }}>{`gatsby-remark-prismjs`}</a>{`有某种关联。`}</p>\n    <p>{`这段代码做的事情是`}<inlineCode parentName=\"p\">{`结算代码块头部的高亮信息`}</inlineCode>{`。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token punctuation\\\">.</span>\\n├── getCodeBlockOptions<span class=\\\"token punctuation\\\">.</span>js\\n├── highlightCode<span class=\\\"token punctuation\\\">.</span>js\\n├── highlightLines<span class=\\\"token punctuation\\\">.</span>js\\n<span class=\\\"highlighted-line\\\">├── index<span class=\\\"token punctuation\\\">.</span>js</span>└── loadPrismLanguage<span class=\\\"token punctuation\\\">.</span>js\\n<span class=\\\"token comment\\\">/*\\nCode used under license from mapbox and Gatsby\\nhttps://github.com/mapbox/rehype-prism\\n<span class=\\\"highlighted-line\\\">https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-remark-prismjs/src/</span>*/</span>\\n\\n<span class=\\\"token keyword\\\">const</span> visit <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'unist-util-visit'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> nodeToString <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'hast-util-to-string'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> getCodeBlockOptions <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./getCodeBlockOptions'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> highlightCode <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">./highlightCode</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> defaultAliases <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    js<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'jsx'</span><span class=\\\"token punctuation\\\">,</span>\\n    html<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'markup'</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">exports</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">options</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    options <span class=\\\"token operator\\\">=</span> options <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">tree</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"highlighted-line\\\">        <span class=\\\"token function\\\">visit</span><span class=\\\"token punctuation\\\">(</span>tree<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'element'</span><span class=\\\"token punctuation\\\">,</span> visitor<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span>    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">visitor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">node<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">,</span> parent</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"highlighted-line\\\">        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>parent <span class=\\\"token operator\\\">||</span> parent<span class=\\\"token punctuation\\\">.</span>tagName <span class=\\\"token operator\\\">!==</span> <span class=\\\"token string\\\">'pre'</span> <span class=\\\"token operator\\\">||</span> node<span class=\\\"token punctuation\\\">.</span>tagName <span class=\\\"token operator\\\">!==</span> <span class=\\\"token string\\\">'code'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span></span>            <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token comment\\\">// 只处理pre/code标签的直接孩子</span>\\n        <span class=\\\"token keyword\\\">let</span> fenceString<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> className <span class=\\\"token operator\\\">=</span> node<span class=\\\"token punctuation\\\">.</span>properties<span class=\\\"token punctuation\\\">.</span>className <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">const</span> classListItem <span class=\\\"token keyword\\\">of</span> className<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>classListItem<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">slice</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">9</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'language-'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                fenceString <span class=\\\"token operator\\\">=</span> classListItem<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">slice</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">9</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"highlighted-line\\\">        <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span></span><span class=\\\"highlighted-line\\\">            language<span class=\\\"token punctuation\\\">,</span></span><span class=\\\"highlighted-line\\\">            normalizedLanguage<span class=\\\"token punctuation\\\">,</span></span><span class=\\\"highlighted-line\\\">            highlightedLineNumbers <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span></span><span class=\\\"highlighted-line\\\">        <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getCodeBlockOptions</span><span class=\\\"token punctuation\\\">(</span>fenceString<span class=\\\"token punctuation\\\">,</span> options<span class=\\\"token punctuation\\\">.</span>aliases <span class=\\\"token operator\\\">||</span> defaultAliases<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span><span class=\\\"highlighted-line\\\">        <span class=\\\"token comment\\\">// 解析代码块头部的{1-10,5,6}，变成行号数组</span></span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>language <span class=\\\"token operator\\\">===</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token keyword\\\">let</span> code <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">nodeToString</span><span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n            node<span class=\\\"token punctuation\\\">.</span>properties<span class=\\\"token punctuation\\\">.</span>className <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>\\n                parent<span class=\\\"token punctuation\\\">.</span>properties<span class=\\\"token punctuation\\\">.</span>className <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n            <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">concat</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'language-'</span> <span class=\\\"token operator\\\">+</span> normalizedLanguage<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n            node<span class=\\\"token punctuation\\\">.</span>properties<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'data-language'</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> normalizedLanguage<span class=\\\"token punctuation\\\">;</span>\\n            node<span class=\\\"token punctuation\\\">.</span>properties<span class=\\\"token punctuation\\\">[</span>\\n                <span class=\\\"token string\\\">'data-highlighted-line-numbers'</span>\\n            <span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> highlightedLineNumbers<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">','</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n            node<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"highlighted-line\\\">            node<span class=\\\"token punctuation\\\">.</span>properties<span class=\\\"token punctuation\\\">.</span>dangerouslySetInnerHTML <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span></span><span class=\\\"highlighted-line\\\">                __html<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">highlightCode</span><span class=\\\"token punctuation\\\">(</span>language<span class=\\\"token punctuation\\\">,</span> code<span class=\\\"token punctuation\\\">,</span> highlightedLineNumbers<span class=\\\"token punctuation\\\">)</span></span><span class=\\\"highlighted-line\\\">            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></span><span class=\\\"highlighted-line\\\">            <span class=\\\"token comment\\\">// 将代码块头部的行号传入高亮处理函数，生产出需要的html（它还会处理code中的注释形式的高亮）</span></span>        <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token regex\\\">/Unknown language/</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">.</span>message<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token keyword\\\">throw</span> err<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <h4 {...{\n      \"id\": \"highlightcodejs\"\n    }}>{`highlightCode.js`}</h4>\n    <p>{`这个文件的作用主要就是`}<inlineCode parentName=\"p\">{`针对语言进行grammer高亮`}</inlineCode>{`然后将处理过的 code 用`}<inlineCode parentName=\"p\">{`highlightLines`}</inlineCode>{`函数标记 lineNumber 高亮`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token punctuation\\\">.</span>\\n├── getCodeBlockOptions<span class=\\\"token punctuation\\\">.</span>js\\n<span class=\\\"highlighted-line\\\">├── highlightCode<span class=\\\"token punctuation\\\">.</span>js</span>├── highlightLines<span class=\\\"token punctuation\\\">.</span>js\\n├── index<span class=\\\"token punctuation\\\">.</span>js\\n└── loadPrismLanguage<span class=\\\"token punctuation\\\">.</span>js\\n<span class=\\\"token comment\\\">/*\\nCode used under license from Gatsby\\nhttps://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-remark-prismjs/src/\\n*/</span>\\n\\n<span class=\\\"token keyword\\\">const</span> Prism <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">prismjs</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> _ <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">lodash</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> loadPrismLanguage <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">./loadPrismLanguage</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> highlightLines <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">./highlightLines</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">exports</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">language<span class=\\\"token punctuation\\\">,</span> code<span class=\\\"token punctuation\\\">,</span> lineNumbersHighlight <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// (Try to) load languages on demand.</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>Prism<span class=\\\"token punctuation\\\">.</span>languages<span class=\\\"token punctuation\\\">[</span>language<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token function\\\">loadPrismLanguage</span><span class=\\\"token punctuation\\\">(</span>language<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token comment\\\">// Language wasn't loaded so let's bail.</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>language <span class=\\\"token operator\\\">===</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">none</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">return</span> code<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// Don't escape if set to none.</span>\\n            <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">return</span> _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">escape</span><span class=\\\"token punctuation\\\">(</span>code<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> grammar <span class=\\\"token operator\\\">=</span> Prism<span class=\\\"token punctuation\\\">.</span>languages<span class=\\\"token punctuation\\\">[</span>language<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> highlightedCode <span class=\\\"token operator\\\">=</span> Prism<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">highlight</span><span class=\\\"token punctuation\\\">(</span>code<span class=\\\"token punctuation\\\">,</span> grammar<span class=\\\"token punctuation\\\">,</span> language<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"highlighted-line\\\">    <span class=\\\"token keyword\\\">const</span> codeSplits <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">highlightLines</span><span class=\\\"token punctuation\\\">(</span>highlightedCode<span class=\\\"token punctuation\\\">,</span> lineNumbersHighlight<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span>\\n    <span class=\\\"token keyword\\\">let</span> finalCode <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> lastIdx <span class=\\\"token operator\\\">=</span> codeSplits<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// Don't add back the new line character after highlighted lines</span>\\n    <span class=\\\"token comment\\\">// as they need to be display: block and full-width.</span>\\n    codeSplits<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">split<span class=\\\"token punctuation\\\">,</span> idx</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        split<span class=\\\"token punctuation\\\">.</span>highlight\\n            <span class=\\\"token operator\\\">?</span> <span class=\\\"token punctuation\\\">(</span>finalCode <span class=\\\"token operator\\\">+=</span> split<span class=\\\"token punctuation\\\">.</span>code<span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>finalCode <span class=\\\"token operator\\\">+=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>split<span class=\\\"token punctuation\\\">.</span>code<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>idx <span class=\\\"token operator\\\">==</span> lastIdx <span class=\\\"token operator\\\">?</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token template-punctuation string\\\">`</span></span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">\\\\n</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> finalCode<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <h4 {...{\n      \"id\": \"highlightlinesjs\"\n    }}>{`highlightLines.js`}</h4>\n    <p>{`这段代码只做一件事就是`}<inlineCode parentName=\"p\">{`高亮行`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token punctuation\\\">.</span>\\n├── getCodeBlockOptions<span class=\\\"token punctuation\\\">.</span>js\\n├── highlightCode<span class=\\\"token punctuation\\\">.</span>js\\n<span class=\\\"highlighted-line\\\">├── highlightLines<span class=\\\"token punctuation\\\">.</span>js</span>├── index<span class=\\\"token punctuation\\\">.</span>js\\n└── loadPrismLanguage<span class=\\\"token punctuation\\\">.</span>js\\n<span class=\\\"token comment\\\">/*\\nCode used under license from Gatsby\\nhttps://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-remark-prismjs/src/\\n*/</span>\\n\\n<span class=\\\"token keyword\\\">const</span> rangeParser <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">parse-numeric-range</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * As code has already been prism-highlighted at this point,\\n * a JSX opening comment:\\n *     {/*\\n * would look like this:\\n *     &lt;span class=\\\"token punctuation\\\">{&lt;/span>&lt;span class=\\\"token comment\\\">/*\\n * And a HTML opening comment:\\n *     &lt;!--\\n * would look like this:\\n *     &amp;lt;!--\\n */</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">HIGHLIGHTED_JSX_COMMENT_START</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">&lt;span class=\\\"token punctuation\\\">\\\\\\\\{&lt;\\\\\\\\/span>&lt;span class=\\\"token comment\\\">\\\\\\\\/\\\\\\\\*</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">HIGHLIGHTED_JSX_COMMENT_END</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">\\\\\\\\*\\\\\\\\/&lt;\\\\\\\\/span>&lt;span class=\\\"token punctuation\\\">\\\\\\\\}&lt;/span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">HIGHLIGHTED_HTML_COMMENT_START</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">&amp;lt;!--</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">PRISMJS_COMMENT_OPENING_SPAN_TAG</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">(&lt;span\\\\\\\\sclass=\\\"token\\\\\\\\scomment\\\">)?</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">PRISMJS_COMMENT_CLOSING_SPAN_TAG</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">(&lt;\\\\\\\\/span>)?</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">COMMENT_START</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">RegExp</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">(#|\\\\\\\\/\\\\\\\\/|\\\\\\\\{\\\\\\\\/\\\\\\\\*|\\\\\\\\/\\\\\\\\*+|</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token constant\\\">HIGHLIGHTED_HTML_COMMENT_START</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">)</span><span class=\\\"token template-punctuation string\\\">`</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">createDirectiveRegExp</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">featureSelector</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n    <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">RegExp</span><span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>featureSelector<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-(next-line|line|start|end|range)({([^}]+)})?</span><span class=\\\"token template-punctuation string\\\">`</span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">COMMENT_END</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">RegExp</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">(-->|\\\\\\\\*\\\\\\\\/\\\\\\\\}|\\\\\\\\*\\\\\\\\/)?</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">DIRECTIVE</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createDirectiveRegExp</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">(highlight|hide)</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">HIGHLIGHT_DIRECTIVE</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createDirectiveRegExp</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">highlight</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">END_DIRECTIVE</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    highlight<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token regex\\\">/highlight-end/</span><span class=\\\"token punctuation\\\">,</span>\\n    hide<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token regex\\\">/hide-end/</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">PLAIN_TEXT_WITH_LF_TEST</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token regex\\\">/&lt;span class=\\\"token plain-text\\\">[^&lt;]*\\\\n[^&lt;]*&lt;\\\\/span>/g</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">stripComment</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">line</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n    <span class=\\\"token comment\\\">/**\\n     * This regexp does the following:\\n     * 1. Match a comment start, along with the accompanying PrismJS opening comment span tag;\\n     * 2. Match one of the directives;\\n     * 3. Match a comment end, along with the accompanying PrismJS closing span tag.\\n     */</span>\\n    line<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">replace</span><span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">RegExp</span><span class=\\\"token punctuation\\\">(</span>\\n            <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">\\\\\\\\s*(</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token constant\\\">HIGHLIGHTED_JSX_COMMENT_START</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">|</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token constant\\\">PRISMJS_COMMENT_OPENING_SPAN_TAG</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token constant\\\">COMMENT_START</span><span class=\\\"token punctuation\\\">.</span>source<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">)\\\\\\\\s*</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token constant\\\">DIRECTIVE</span><span class=\\\"token punctuation\\\">.</span>source<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">\\\\\\\\s*(</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token constant\\\">HIGHLIGHTED_JSX_COMMENT_END</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">|</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token constant\\\">COMMENT_END</span><span class=\\\"token punctuation\\\">.</span>source<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token constant\\\">PRISMJS_COMMENT_CLOSING_SPAN_TAG</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">)</span><span class=\\\"token template-punctuation string\\\">`</span></span>\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token template-punctuation string\\\">`</span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">highlightWrap</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">line</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n    <span class=\\\"token punctuation\\\">[</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">&lt;span class=\\\"highlighted-line\\\"></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span> line<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">&lt;/span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">parseLine</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">line<span class=\\\"token punctuation\\\">,</span> code<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">,</span> actions</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">,</span> feature<span class=\\\"token punctuation\\\">,</span> directive<span class=\\\"token punctuation\\\">,</span> directiveRange<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> line<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">match</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">DIRECTIVE</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> flagSource <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n        feature<span class=\\\"token punctuation\\\">,</span>\\n        index<span class=\\\"token punctuation\\\">,</span>\\n        directive<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>feature<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>directive<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>directiveRange<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>directive<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">next-line</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">:</span>\\n            actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">flag</span><span class=\\\"token punctuation\\\">(</span>feature<span class=\\\"token punctuation\\\">,</span> index <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> flagSource<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hide</span><span class=\\\"token punctuation\\\">(</span>index<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"highlighted-line\\\">            <span class=\\\"token comment\\\">// 跨行高亮的逻辑</span></span><span class=\\\"highlighted-line\\\">        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">start</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span></span><span class=\\\"highlighted-line\\\">            <span class=\\\"token comment\\\">// find the next `${feature}-end` directive, starting from next line</span></span><span class=\\\"highlighted-line\\\">            <span class=\\\"token keyword\\\">const</span> endIndex <span class=\\\"token operator\\\">=</span> code<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">findIndex</span><span class=\\\"token punctuation\\\">(</span></span><span class=\\\"highlighted-line\\\">                <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">line<span class=\\\"token punctuation\\\">,</span> idx</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> idx <span class=\\\"token operator\\\">></span> index <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token constant\\\">END_DIRECTIVE</span><span class=\\\"token punctuation\\\">[</span>feature<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span>line<span class=\\\"token punctuation\\\">)</span></span><span class=\\\"highlighted-line\\\">            <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span><span class=\\\"highlighted-line\\\"></span><span class=\\\"highlighted-line\\\">            <span class=\\\"token keyword\\\">const</span> end <span class=\\\"token operator\\\">=</span> endIndex <span class=\\\"token operator\\\">===</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">?</span> code<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token punctuation\\\">:</span> endIndex<span class=\\\"token punctuation\\\">;</span></span><span class=\\\"highlighted-line\\\"></span><span class=\\\"highlighted-line\\\">            actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hide</span><span class=\\\"token punctuation\\\">(</span>index<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span><span class=\\\"highlighted-line\\\">            actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hide</span><span class=\\\"token punctuation\\\">(</span>end<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span><span class=\\\"highlighted-line\\\"></span><span class=\\\"highlighted-line\\\">            <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> index <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> end<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span></span><span class=\\\"highlighted-line\\\">                actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">flag</span><span class=\\\"token punctuation\\\">(</span>feature<span class=\\\"token punctuation\\\">,</span> i<span class=\\\"token punctuation\\\">,</span> flagSource<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span><span class=\\\"highlighted-line\\\">            <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"highlighted-line\\\">            <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span></span><span class=\\\"highlighted-line\\\">        <span class=\\\"token punctuation\\\">}</span></span>        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">line</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">:</span>\\n            actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">flag</span><span class=\\\"token punctuation\\\">(</span>feature<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">,</span> flagSource<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">stripComment</span><span class=\\\"token punctuation\\\">(</span>index<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">range</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">:</span>\\n            actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hide</span><span class=\\\"token punctuation\\\">(</span>index<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>directiveRange<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">const</span> strippedDirectiveRange <span class=\\\"token operator\\\">=</span> directiveRange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">slice</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token keyword\\\">const</span> range <span class=\\\"token operator\\\">=</span> rangeParser<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parse</span><span class=\\\"token punctuation\\\">(</span>strippedDirectiveRange<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>range<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                    range<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">relativeIndex</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n                        actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">flag</span><span class=\\\"token punctuation\\\">(</span>\\n                            feature<span class=\\\"token punctuation\\\">,</span>\\n                            index <span class=\\\"token operator\\\">+</span> relativeIndex<span class=\\\"token punctuation\\\">,</span>\\n                            flagSource\\n                        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n\\n            console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">warn</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">Invalid match specified: \\\"</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>line<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">trim</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">\\\"</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">exports</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">highlightLineRange</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">code<span class=\\\"token punctuation\\\">,</span> highlights <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"highlighted-line\\\">    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>highlights<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">||</span> <span class=\\\"token constant\\\">HIGHLIGHT_DIRECTIVE</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span>code<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span></span>        <span class=\\\"token comment\\\">// HACK split plain-text spans with line separators inside into multiple plain-text spans</span>\\n        <span class=\\\"token comment\\\">// separatered by line separator - this fixes line highlighting behaviour for jsx</span>\\n        code <span class=\\\"token operator\\\">=</span> code<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">replace</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">PLAIN_TEXT_WITH_LF_TEST</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">match</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n            match<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">replace</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token regex\\\">/\\\\n/g</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">&lt;/span>\\\\n&lt;span class=\\\"token plain-text\\\"></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> split <span class=\\\"token operator\\\">=</span> code<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">split</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">\\\\n</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> lines <span class=\\\"token operator\\\">=</span> split<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">code</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>code<span class=\\\"token punctuation\\\">,</span> highlight<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> hide<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> flagSources<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> actions <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function-variable function\\\">flag</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">feature<span class=\\\"token punctuation\\\">,</span> line<span class=\\\"token punctuation\\\">,</span> flagSource</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>line <span class=\\\"token operator\\\">>=</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">&amp;&amp;</span> line <span class=\\\"token operator\\\">&lt;</span> lines<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">const</span> lineMeta <span class=\\\"token operator\\\">=</span> lines<span class=\\\"token punctuation\\\">[</span>line<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n                lineMeta<span class=\\\"token punctuation\\\">[</span>feature<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n                lineMeta<span class=\\\"token punctuation\\\">.</span>flagSources<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>flagSource<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token function-variable function\\\">hide</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">line</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">flag</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">hide</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span> line<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token function-variable function\\\">highlight</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">line</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">flag</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">highlight</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span> line<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token function-variable function\\\">stripComment</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">line</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n            lines<span class=\\\"token punctuation\\\">[</span>line<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>code <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">stripComment</span><span class=\\\"token punctuation\\\">(</span>lines<span class=\\\"token punctuation\\\">[</span>line<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>code<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">transform</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">lines</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n        lines\\n            <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span>hide<span class=\\\"token punctuation\\\">,</span> highlight<span class=\\\"token punctuation\\\">,</span> flagSources<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> index</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>hide <span class=\\\"token operator\\\">&amp;&amp;</span> highlight<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token keyword\\\">const</span> formattedSources <span class=\\\"token operator\\\">=</span> flagSources\\n                        <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>\\n                            <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span>feature<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">,</span> directive<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n                                <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">  - Line </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>\\n                                    index <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span>\\n                                <span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>feature<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> (\\\"</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>directive<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">\\\")</span><span class=\\\"token template-punctuation string\\\">`</span></span>\\n                        <span class=\\\"token punctuation\\\">)</span>\\n                        <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">\\\\n</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                    <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token function\\\">Error</span><span class=\\\"token punctuation\\\">(</span>\\n                        <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">Line </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>\\n                            index <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span>\\n                        <span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> has been marked as both hidden and highlighted.\\\\n</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>formattedSources<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span>\\n                    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n\\n                <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">!</span>hide<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">line</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>line<span class=\\\"token punctuation\\\">.</span>highlight<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                    line<span class=\\\"token punctuation\\\">.</span>code <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">highlightWrap</span><span class=\\\"token punctuation\\\">(</span>line<span class=\\\"token punctuation\\\">.</span>code<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n                <span class=\\\"token keyword\\\">return</span> line<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// If a highlight range is passed with the language declaration, e.g.</span>\\n    <span class=\\\"token comment\\\">// ``jsx{1, 3-4}</span>\\n    <span class=\\\"token comment\\\">// we only use that and do not try to parse highlight directives</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>highlights<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        highlights<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">lineNumber</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"highlighted-line\\\">            actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">highlight</span><span class=\\\"token punctuation\\\">(</span>lineNumber <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>// 高亮块声明</span></span>        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">transform</span><span class=\\\"token punctuation\\\">(</span>lines<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> split<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">const</span> line <span class=\\\"token operator\\\">=</span> split<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">DIRECTIVE</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span>line<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"highlighted-line\\\">            <span class=\\\"token function\\\">parseLine</span><span class=\\\"token punctuation\\\">(</span>line<span class=\\\"token punctuation\\\">,</span> split<span class=\\\"token punctuation\\\">,</span> i<span class=\\\"token punctuation\\\">,</span> actions<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>// 高亮指令</span></span>        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">transform</span><span class=\\\"token punctuation\\\">(</span>lines<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"背景\",\n    level: 2,\n    title: \"背景\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"toc\",\n    level: 2,\n    title: \"Toc\",\n    children: [\n        {\n              id: \"toc-数据来源及其数据结构\",\n              level: 3,\n              title: \"Toc 数据来源及其数据结构\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"代码块高亮\",\n    level: 2,\n    title: \"代码块高亮\",\n    children: [\n        {\n              id: \"code-block-highlight-语法\",\n              level: 3,\n              title: \"code block highlight 语法\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"mdx-中的具体实现\",\n              level: 3,\n              title: \"mdx 中的具体实现\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}