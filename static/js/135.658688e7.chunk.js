(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{232:function(n,s,a){"use strict";a.r(s),a.d(s,"readingTime",function(){return e}),a.d(s,"default",function(){return l}),a.d(s,"tableOfContents",function(){return u}),a.d(s,"frontMatter",function(){return i});var t=a(32),p=(a(0),a(44)),e={text:"1 min read",minutes:.945,time:56699.99999999999,words:189},o={},c="wrapper";function l(n){var s=n.components,a=Object(t.a)(n,["components"]);return Object(p.b)(c,Object.assign({},o,a,{components:s,mdxType:"MDXLayout"}),Object(p.b)("h2",{id:"\u4f60\u53ef\u4ee5\u4ece\u672c\u6587\u4e86\u89e3\u5230"},"\u4f60\u53ef\u4ee5\u4ece\u672c\u6587\u4e86\u89e3\u5230"),Object(p.b)("h2",{id:"\u80cc\u666f"},"\u80cc\u666f"),Object(p.b)("p",null,"\u5728\u770b",Object(p.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/vercel/vercel/blob/3ff777b8ede7ab9a76c5b9ccfcb0e2799ca21957/packages/cli/src/util/deploy/process-deployment.ts"}),"vercel/cli"),"\u4ee3\u7801\u7684\u65f6\u5019\u4ec0\u4e48\u770b\u5230\u4e86\u6bd4\u8f83\u5c11\u89c1\u7684\u7528\u6cd5\u3002"),Object(p.b)("p",null,"\u662f",Object(p.b)("inlineCode",{parentName:"p"},"for await of"),"\u4e0e",Object(p.b)("inlineCode",{parentName:"p"},"generator"),"\u7684\u7ed3\u5408\u3002\u7a0d\u540e\u4f1a demo \u6765\u8bf4\u660e\u3002"),Object(p.b)("h2",{id:"\u9996\u5148\u8c01\u5728\u7528\u8fd9\u4e2a\u5199\u6cd5"},"\u9996\u5148\u8c01\u5728\u7528\u8fd9\u4e2a\u5199\u6cd5"),Object(p.b)("p",null,"\u5728\u4ee3\u7801\u641c\u7d22\u5e73\u53f0",Object(p.b)("a",Object.assign({parentName:"p"},{href:"https://sourcegraph.com/search?q=context:global+for+await+%28const+&patternType=literal"}),"sourcegraph"),"\u4e0a\u641c\u7d22\u5173\u952e\u5b57",Object(p.b)("inlineCode",{parentName:"p"},"for await (const"),"\uff0c\u53ef\u4ee5\u770b\u5230\u6709 n \u591a\u5927\u578b\u9879\u76ee\u5728\u7528\u3002"),Object(p.b)("p",null,"\u6211\u4eec\u6765\u770b stars \u6392\u540d\u7b2c\u4e00\u7684 puppeteer \u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u51fa\u8fd9\u90e8\u5206\u662f\u4ee5\u6d41\u7684\u65b9\u5f0f\u5206\u7247\u8bfb\u53d6chunk\u5b58\u5165buffer\u3002"),Object(p.b)("pre",null,Object(p.b)("code",Object.assign({parentName:"pre"},{className:"language-ts","data-language":"ts","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getReadableAsBuffer</span><span class="token punctuation">(</span>\n    <span class="token parameter">readable<span class="token punctuation">:</span> Readable<span class="token punctuation">,</span>\n    path<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span></span>\n<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Buffer<span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isNode <span class="token operator">&amp;&amp;</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>\n            <span class="token string">\'Cannot write to a path outside of Node.js environment.\'</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> fs <span class="token operator">=</span> isNode <span class="token operator">?</span> <span class="token keyword">await</span> <span class="token function">importFSModule</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> fileHandle<span class="token punctuation">:</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'fs\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>promises<span class="token punctuation">.</span>FileHandle<span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>path <span class="token operator">&amp;&amp;</span> fs<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        fileHandle <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">\'w\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> buffers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="highlighted-line">    <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">const</span> chunk <span class="token keyword">of</span> readable<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>        buffers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>fileHandle<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>fileHandle<span class="token punctuation">,</span> chunk<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token keyword">await</span> fileHandle<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> resultBuffer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n        resultBuffer <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>buffers<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> resultBuffer<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n'}}))),Object(p.b)("p",null,"\u5176\u4ed6\u7684\u4f8b\u5b50\u4e5f\u90fd\u5dee\u4e0d\u591a\uff0c\u57fa\u672c\u6a21\u5f0f\u4e5f\u5c31\u662f\u8bed\u6cd5\u6240\u5b9a\u4e49\u7684\u3002of\u540e\u9762\u63a5iterable\u5bf9\u8c61\uff08\u901a\u5e38\u662f\u6570\u7ec4\u3001\u8fed\u4ee3\u5668\u7b49\u7b49\uff09\uff0cpuppeteer\u91cc\u9762\u7528\u7684\u662f\u6570\u7ec4\u3002vercel\u7528\u7684\u662fiterator\u3002"),Object(p.b)("pre",null,Object(p.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span>variable <span class="token keyword">of</span> iterable<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  statement\n<span class="token punctuation">}</span>\n'}}))),Object(p.b)("p",null,"\u90a3\u4e48\u6765\u770b\u770bvercel\u7684iterator\u7528\u6cd5\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u8fd9\u662f\u4e00\u4e2acli\u5e94\u7528\uff0c\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u9700\u8981\u901a\u8fc7\u5c4f\u5e55\u8f93\u51fa\u7ed9\u7528\u6237\u8fdb\u884c\u5230\u54ea\u4e00\u6b65\u4e86\u3002"),Object(p.b)("p",null,"\u4e3a\u4e86\u6e05\u6670\u671f\u95f4\u53bb\u6389\u4e86\u4e1a\u52a1\u4ee3\u7801\uff0c\u62bd\u8c61\u6210\u4ee5\u4e0b\u6700\u7b80demo\u3002"),Object(p.b)("p",null,"\u5176main\u51fd\u6570\u662f\u5728\u6267\u884c\u4e00\u6bb5\u4ee3\u7801createSomething\u7684\u65f6\u5019\u4e2d\u9014\u53bb\u6267\u884c\u53e6\u4e00\u6bb5\u4ee3\u7801createOtherStuff\uff0c\u518d\u56de\u6765\u7ee7\u7eed\u6267\u884ccreateSomething\u3002"),Object(p.b)("p",null,"\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u6a21\u5f0f\u6709\u4e00\u4e2a\u7279\u70b9\uff0cyield\u51fa\u6765\u7684\u6d88\u606f\u6700\u7ec8\u90fd\u629b\u5230\u4e86main\u51fd\u6570\uff0c\u6709\u4e00\u79cd\u4e8b\u4ef6\u96c6\u7ebf\u5668\u7684\u6548\u679c\u3002"),Object(p.b)("pre",null,Object(p.b)("code",Object.assign({parentName:"pre"},{className:"language-ts","data-language":"ts","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">const</span> event <span class="token keyword">of</span> <span class="token function">createSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// update spinner/indicator</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">async</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">createSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">yield</span> <span class="token string">\'createSomething-1\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">yield</span> <span class="token string">\'createSomething-2\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">const</span> event <span class="token keyword">of</span> <span class="token function">createOtherStuff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">yield</span> event<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">yield</span> <span class="token string">\'event-done\'</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">async</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">createOtherStuff</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">yield</span> <span class="token string">\'createOtherStuff-1\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">yield</span> <span class="token string">\'createOtherStuff-2\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">yield</span> <span class="token string">\'createOtherStuff-done\'</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}))),Object(p.b)("h2",{id:"\u5c0f\u8282"},"\u5c0f\u8282"),Object(p.b)("p",null,"\u8fd9\u662f\u4e00\u4e2a\u5f88\u6709\u8da3\u4f46\u662f\u5f88\u5f3a\u5927\u7684\u5199\u6cd5\uff0c\u5e0c\u671b\u4e4b\u540e\u6709\u673a\u4f1a\u80fd\u518d\u9879\u76ee\u4e2d\u7528\u4e0a\u3002"))}l.isMDXComponent=!0;var u=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];return[{id:"\u4f60\u53ef\u4ee5\u4ece\u672c\u6587\u4e86\u89e3\u5230",level:2,title:"\u4f60\u53ef\u4ee5\u4ece\u672c\u6587\u4e86\u89e3\u5230",children:[]},{id:"\u80cc\u666f",level:2,title:"\u80cc\u666f",children:[]},{id:"\u9996\u5148\u8c01\u5728\u7528\u8fd9\u4e2a\u5199\u6cd5",level:2,title:"\u9996\u5148\u8c01\u5728\u7528\u8fd9\u4e2a\u5199\u6cd5",children:[]},{id:"\u5c0f\u8282",level:2,title:"\u5c0f\u8282",children:[]}]},i={}}}]);
//# sourceMappingURL=135.658688e7.chunk.js.map