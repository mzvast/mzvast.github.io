{"version":3,"sources":["routes/posts/2016/11-23-python-pyenv/document.mdx"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_mzvast_mzvast_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","href","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"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","file":"static/js/82.e687c3ad.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.985,\"time\":59100,\"words\":197}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"环境\"\n    }}>{`环境`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`类unix系统`}</li>\n      <li parentName=\"ul\">{`不支持windows`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"安装\"\n    }}>{`安装`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`前置需求`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Ubuntu/Debian:  `}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`\\`\\`\\`bash\nsudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \nlibreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils\n\\`\\`\\`\n`}</code></pre>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Fedora/CentOS/RHEL:  `}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`\\`\\`\\`bash\nyum install zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel openssl-devel\n\\`\\`\\`\n`}</code></pre>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Mac OS X:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`\\`\\`\\`bash\nbrew install readline xz\n\\`\\`\\`\n`}</code></pre>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`运行一键安装脚本(安装完自带virtualenv插件)`}</p>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\",\n        \"data-language\": \"bash\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"$ <span class=\\\"token function\\\">curl</span> -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">bash</span>\\n\"\n        }\n      }}></code></pre>\n    <ul>\n      <li parentName=\"ul\">{`然后根据提示可能需要把这段加入到~/.bash_profile,重载一下shell`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\",\n        \"data-language\": \"bash\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token builtin class-name\\\">export</span> <span class=\\\"token assign-left variable\\\"><span class=\\\"token environment constant\\\">PATH</span></span><span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"~/.pyenv/bin:<span class=\\\"token environment constant\\\">$PATH</span>\\\"</span>\\n<span class=\\\"token builtin class-name\\\">eval</span> <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\"><span class=\\\"token variable\\\">$(</span>pyenv init -<span class=\\\"token variable\\\">)</span></span>\\\"</span>\\n<span class=\\\"token builtin class-name\\\">eval</span> <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\"><span class=\\\"token variable\\\">$(</span>pyenv virtualenv-init -<span class=\\\"token variable\\\">)</span></span>\\\"</span>\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"以创建flask项目为例测试\"\n    }}>{`以创建flask项目为例测试`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`在任意位置新建flask目录:`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`mkdir -p pythonProject/flask&&cd pythonProject/flask`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`安装3.5.2版本python:`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`pyenv install 3.5.2`}</inlineCode>{`\n- 注意：在proxychains4代理的情况下若在ipv6网络中安装后面的python可能会报错`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`You must get working getaddrinfo() function. or you can specify \"--disable-ipv6\". getaddrinfo()`}</inlineCode>{`\n- 解决方法`}<br parentName=\"p\"></br>{`\n`}{`在命令前加上代理地址，例如`}<br parentName=\"p\"></br>{`\n`}{``}<inlineCode parentName=\"p\">{`http_proxy=127.0.0.1:1080 pyenv install 3.5.2`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`在3.5.2版本下创建名为flask的虚拟环境(这个flask的命名和上面那个目录名没有任何关系):`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`pyenv virtualenv 3.5.2 flask`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`新建pyenv用于识别环境的文件(pyenv通过该文件识别这个目录的虚拟环境)：`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`echo \"flask\"> .python-version`}</inlineCode><br parentName=\"p\"></br>{`\n`}{`此时可以看到命令提示符前出现了`}<inlineCode parentName=\"p\">{`(flask)`}</inlineCode>{`的标识，说明现在的环境与系统环境隔离了`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`安装Flask包`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`pip install Flask`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`新建flask demo主程序\n`}<inlineCode parentName=\"p\">{`cat >app.py`}</inlineCode>{`\n粘贴这段`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`\\`\\`\\`python\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello():\n    return \"Hello World!\"\n\nif __name__ == \"__main__\":\n    app.run()\n\\`\\`\\`\n`}</code></pre>\n        <p parentName=\"li\">{`回车,ctrl+D`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`运行`}<inlineCode parentName=\"p\">{`python app.py`}</inlineCode>{`可以看到程序正常运行了`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`卸载某virtualenv`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`pyenv uninstall flask`}</inlineCode></p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"shell环境下使用virtualenv\"\n    }}>{`shell环境下使用virtualenv`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`上面介绍的是用.python-version文件的方式让shell自动识别当前目录所在环境。假如想手动切换当前shell所用的virtualenv该怎么操作呢？  `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\",\n            \"data-language\": \"bash\",\n            \"data-highlighted-line-numbers\": \"\",\n            \"dangerouslySetInnerHTML\": {\n              \"__html\": \"<span class=\\\"token comment\\\">#pyenv shell &lt; virtualenv NAME 或者system ></span>\\npyenv shell flask <span class=\\\"token comment\\\">#切换到名为flask的virtualenv</span>\\npyenv shell system <span class=\\\"token comment\\\">#切换到系统默认的环境</span>\\n\"\n            }\n          }}></code></pre>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"后记\"\n    }}>{`后记`}</h2>\n    <p>{`这样一来在linux系统上的python版本管理问题是解决了，而且使用起来跟nvm特别接近，但在windows环境并不能用这个程序，有待进一步探索。`}</p>\n    <h2 {...{\n      \"id\": \"参考\"\n    }}>{`参考`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/yyuu/pyenv\"\n        }}>{`pyenv`}</a>{`  `}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/yyuu/pyenv-installer\"\n        }}>{`pyenv-installer安装器`}</a>{`  `}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/yyuu/pyenv-virtualenv\"\n        }}>{`pyenv-virtualenv插件`}</a>{`  `}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"环境\",\n    level: 2,\n    title: \"环境\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"安装\",\n    level: 2,\n    title: \"安装\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"以创建flask项目为例测试\",\n    level: 2,\n    title: \"以创建flask项目为例测试\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"shell环境下使用virtualenv\",\n    level: 2,\n    title: \"shell环境下使用virtualenv\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"后记\",\n    level: 2,\n    title: \"后记\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"参考\",\n    level: 2,\n    title: \"参考\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}