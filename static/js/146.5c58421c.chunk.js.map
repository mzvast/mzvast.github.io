{"version":3,"sources":["routes/posts/2022/12/28-0006-Add-CodePen-support/document.mdx"],"names":["readingTime","text","minutes","time","words","makeShortcode","name","props","console","warn","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","Tweet","CodePen","layoutProps","MDXLayout","MDXContent","_ref","components","_home_runner_work_mzvast_github_io_mzvast_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","mdxType","id","tweetLink","theme","codePenId","parentName","href","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"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","file":"static/js/146.5c58421c.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"3 min read\",\"minutes\":2.71,\"time\":162600,\"words\":542}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Tweet = makeShortcode(\"Tweet\");\nconst CodePen = makeShortcode(\"CodePen\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"你可以从本文了解到\"\n    }}>{`你可以从本文了解到`}</h2>\n    <p>{`如何让 mdx 支持各种嵌入式内容，使得可展示的内容大大扩展。包括了几十种内容。`}</p>\n    <h2 {...{\n      \"id\": \"最终效果-demo\"\n    }}>{`最终效果 demo`}</h2>\n    <Tweet tweetLink=\"studio_hungry/status/1278829444124282882?s=20\" theme=\"dark\" mdxType=\"Tweet\" />\n    <CodePen codePenId=\"PNaGbb\" mdxType=\"CodePen\" />\n    <h2 {...{\n      \"id\": \"如何安装和使用\"\n    }}>{`如何安装和使用`}</h2>\n    <p>{`1、安装依赖`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.mdx-embed.com/?path=/docs/introduction--page\"\n      }}>{`mdx-embed`}</a></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\",\n        \"data-language\": \"bash\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token function\\\">yarn</span> <span class=\\\"token function\\\">add</span> mdx-embed\\n\"\n        }\n      }}></code></pre>\n    <p>{`2、将页面用`}<inlineCode parentName=\"p\">{`MDXEmbedProvider`}</inlineCode>{`包裹起来`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\",\n        \"data-language\": \"ts\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>MDXEmbedProvider<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'mdx-embed'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span>children<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token operator\\\">&lt;</span>MDXProvider\\n            components<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>\\n                a<span class=\\\"token punctuation\\\">:</span> Link<span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token function-variable function\\\">wrapper</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span>children<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n<span class=\\\"highlighted-line\\\">                    <span class=\\\"token operator\\\">&lt;</span>MDXEmbedProvider<span class=\\\"token operator\\\">></span></span>                        <span class=\\\"token operator\\\">&lt;</span>div className<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>styles<span class=\\\"token punctuation\\\">.</span>content<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span>children<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n<span class=\\\"highlighted-line\\\">                    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>MDXEmbedProvider<span class=\\\"token operator\\\">></span></span>                <span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token operator\\\">></span>\\n            <span class=\\\"token operator\\\">&lt;</span>MDXComponent <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>MDXProvider<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"原理小探\"\n    }}>{`原理小探`}</h2>\n    <p>{`首先看`}<inlineCode parentName=\"p\">{`MDXEmbedProvider`}</inlineCode>{`的代码，如下，基本上就是在原来的`}<inlineCode parentName=\"p\">{`MDXProvider`}</inlineCode>{`上又增加一层封装，使得支持Embed组件`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"data-language\": \"tsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> FunctionComponent <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> MDXProvider <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@mdx-js/react'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> components <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./components'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">IMdxProviderProps</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">/** React Children */</span>\\n  children<span class=\\\"token punctuation\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>ReactNode<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"highlighted-line\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> MDXEmbedProvider<span class=\\\"token punctuation\\\">:</span> FunctionComponent<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">IMdxProviderProps</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\"> = ({ children }) => (</span></span><span class=\\\"token plain-text\\\">  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MDXProvider</span></span> <span class=\\\"token attr-name\\\">components</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>components<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>children<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">MDXProvider</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\"></span>\\n<span class=\\\"token plain-text\\\">);</span>\\n<span class=\\\"token plain-text\\\"></span>\"\n        }\n      }}></code></pre>\n    <p>{`那我们去看一下`}<inlineCode parentName=\"p\">{`@mdx-js/react`}</inlineCode>{`中的`}<inlineCode parentName=\"p\">{`MDXProvider`}</inlineCode>{`做了什么`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> MDXContext <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createContext</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">const</span> emptyObject <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useMDXComponents</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">components</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> contextComponents <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useContext</span><span class=\\\"token punctuation\\\">(</span>MDXContext<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token comment\\\">// Memoize to avoid unnecessary top-level context changes</span>\\n  <span class=\\\"token keyword\\\">return</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useMemo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// Custom merge via a function prop</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">typeof</span> components <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'function'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">components</span><span class=\\\"token punctuation\\\">(</span>contextComponents<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>contextComponents<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>components<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token comment\\\">// 合并 components和contextComponents</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>contextComponents<span class=\\\"token punctuation\\\">,</span> components<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">MDXProvider</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span>components<span class=\\\"token punctuation\\\">,</span> children<span class=\\\"token punctuation\\\">,</span> disableParentContext<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> allComponents <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useMDXComponents</span><span class=\\\"token punctuation\\\">(</span>components<span class=\\\"token punctuation\\\">)</span> \\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>disableParentContext<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    allComponents <span class=\\\"token operator\\\">=</span> components <span class=\\\"token operator\\\">||</span> emptyObject\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createElement</span><span class=\\\"token punctuation\\\">(</span>\\n    MDXContext<span class=\\\"token punctuation\\\">.</span>Provider<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span>value<span class=\\\"token punctuation\\\">:</span> allComponents<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 将这些components提供给children</span>\\n    children\\n  <span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`下面看一个test case，这说明内层定义的组件优先先进行转换，未命中的才会又上层组件来处理。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'should support components as a function'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span> Content<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">evaluate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'# hi\\\\n## hello'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token operator\\\">...</span>runtime<span class=\\\"token punctuation\\\">,</span>\\n    useMDXComponents\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  assert<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">equal</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token function\\\">renderToString</span><span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span>MDXProvider\\n        components<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token function-variable function\\\">h1</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>color<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'tomato'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">...</span><span class=\\\"token attr-value\\\">props</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token function-variable function\\\">h2</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h2</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>color<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'rebeccapurple'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">...</span><span class=\\\"token attr-value\\\">props</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>MDXProvider\\n          components<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token function-variable function\\\">h2</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h2</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>color<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'papayawhip'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">...</span><span class=\\\"token attr-value\\\">props</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token operator\\\">></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Content</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">MDXProvider</span></span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">MDXProvider</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token string\\\">'&lt;h1>hi&lt;/h1>\\\\n&lt;h2 style=\\\"color:papayawhip\\\">hello&lt;/h2>'</span>\\n  <span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`上面代码的运行顺序是`}</p>\n    <p>{`1、`}<inlineCode parentName=\"p\">{`'# hi\\\\n## hello'`}</inlineCode>{`先被内层组件转换成`}<inlineCode parentName=\"p\">{`'# hi\\\\n<h2 style=\"color:papayawhip\">hello</h2>'`}</inlineCode></p>\n    <p>{`2、`}<inlineCode parentName=\"p\">{`'# hi\\\\n<h2 style=\"color:papayawhip\">hello</h2>'`}</inlineCode>{`被外层组件转换成`}<inlineCode parentName=\"p\">{`'<h1>hi</h1>\\\\n<h2 style=\"color:papayawhip\">hello</h2>'`}</inlineCode></p>\n    <p>{`那有人就要问了，为什么evaluate会执行这个转换，他怎么知道`}<inlineCode parentName=\"p\">{`# hi`}</inlineCode>{`要命中`}<inlineCode parentName=\"p\">{`h1`}</inlineCode>{`组件呢？`}</p>\n    <p>{`那么我们就需要来看`}<inlineCode parentName=\"p\">{`evaluate`}</inlineCode>{`这个函数，他调用了compile进行编译，`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// packages/mdx/lib/evaluate\\\\.js</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">evaluate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">vfileCompatible<span class=\\\"token punctuation\\\">,</span> evaluateOptions</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>compiletime<span class=\\\"token punctuation\\\">,</span> runtime<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">resolveEvaluateOptions</span><span class=\\\"token punctuation\\\">(</span>evaluateOptions<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">// 分离编译时参数和运行时参数</span>\\n  <span class=\\\"token comment\\\">// V8 on Erbium.</span>\\n  <span class=\\\"token comment\\\">/* c8 ignore next 2 */</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">run</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">compile</span><span class=\\\"token punctuation\\\">(</span>vfileCompatible<span class=\\\"token punctuation\\\">,</span> compiletime<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> runtime<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// packages/mdx/lib/compile\\\\.js</span>\\n<span class=\\\"token comment\\\">/**\\n * Compile MDX to JS.\\n *\\n * @param {VFileCompatible} vfileCompatible\\n *   MDX document to parse (`string`, `Buffer`, `vfile`, anything that can be\\n *   given to `vfile`).\\n * @param {CompileOptions} [compileOptions]\\n * @return {Promise&lt;VFile>}\\n */</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">compile</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">vfileCompatible<span class=\\\"token punctuation\\\">,</span> compileOptions</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>file<span class=\\\"token punctuation\\\">,</span> options<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">resolveFileAndOptions</span><span class=\\\"token punctuation\\\">(</span>vfileCompatible<span class=\\\"token punctuation\\\">,</span> compileOptions<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">// 生成一个VFile对象</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">createProcessor</span><span class=\\\"token punctuation\\\">(</span>options<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">process</span><span class=\\\"token punctuation\\\">(</span>file<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`VFile是`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/unifiedjs/unified\"\n      }}>{`unified`}</a>{`中用到的一个数据结构，用于在内存中进行文件操作。`}</p>\n    <p>{`调用了`}<inlineCode parentName=\"p\">{`createProcessor`}</inlineCode>{`方法，代码如下。其主要工作就是将mdx解析成AST，最终经过一系列插件运算，转换成JSON对象`}</p>\n    <p>{`其中经过了3个AST转换，分别是`}<inlineCode parentName=\"p\">{`mdast,hast,esast`}</inlineCode>{`。`}</p>\n    <p><inlineCode parentName=\"p\">{`MDAST（Markdown Abstract Syntax Tree）`}</inlineCode>{`是一种用于表示 Markdown 文本的抽象语法树（AST）格式。它是使用 Remark（一个用于处理 Markdown 文本的 JavaScript 库）解析 Markdown 文本后得到的结果。`}</p>\n    <p><inlineCode parentName=\"p\">{`HAST（HTML Abstract Syntax Tree）`}</inlineCode>{`是一种用于表示 HTML 文本的抽象语法树（AST）格式。它是使用 Rehype（一个用于处理 HTML 文本的 JavaScript 库）解析 HTML 文本后得到的结果。`}</p>\n    <p><inlineCode parentName=\"p\">{`ESAST（JavaScript Abstract Syntax Tree）`}</inlineCode>{`是一种用于表示 JavaScript 代码的抽象语法树（AST）格式。它是使用 Recast（一个用于处理 JavaScript 代码的 JavaScript 库）解析 JavaScript 代码后得到的结果。`}</p>\n    <p>{`因此，MDAST 用于表示 Markdown 文本，HAST 用于表示 HTML 文本，ESAST 用于表示 JavaScript 代码。`}</p>\n    <p>{`经过`}<inlineCode parentName=\"p\">{`mdx-loader`}</inlineCode>{`的处理后，会输出JS文件`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> mdx <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'@mdx-js/mdx'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">// ...</span>\\nmodule<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">exports</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">source</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> result\\n  <span class=\\\"token comment\\\">// ...</span>\\n\\n  <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n    result <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">mdx</span><span class=\\\"token punctuation\\\">(</span>mdxContent<span class=\\\"token punctuation\\\">,</span> options<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token comment\\\">// ...</span>\\n  <span class=\\\"token keyword\\\">let</span> code <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">\\nimport React from 'react'\\nimport { mdx } from '@mdx-js/react' // 注入react  binding\\nexport const readingTime = </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token constant\\\">JSON</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">stringify</span><span class=\\\"token punctuation\\\">(</span>estimatedReadingTime<span class=\\\"token punctuation\\\">)</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">\\n</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>result<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">\\n</span><span class=\\\"token template-punctuation string\\\">`</span></span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span> code<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`那么`}<a parentName=\"p\" {...{\n        \"href\": \"https://sourcegraph.com/github.com/mdx-js/mdx@v1.6.22/-/blob/packages/react/src/create-element.js\"\n      }}>{`mdx binding`}</a>{`是个啥呢？如下`}</p>\n    <p>{`在`}<inlineCode parentName=\"p\">{`compile`}</inlineCode>{`的过程中，会在处理这个mdx文件的时候会给上面这段代码增加一个注释`}<inlineCode parentName=\"p\">{`/* @jsx mdx */`}</inlineCode>{`，这就使得替换了React.createElement方法，也就起到了从components中映射自定义组件的能力。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// node_modules/@mdx-js/mdx/index.js</span>\\n<span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">compile</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">mdx<span class=\\\"token punctuation\\\">,</span> options <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> opts <span class=\\\"token operator\\\">=</span> Object<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">assign</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">DEFAULT_OPTIONS</span><span class=\\\"token punctuation\\\">,</span> options<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">const</span> compiler <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createCompiler</span><span class=\\\"token punctuation\\\">(</span>opts<span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> fileOpts <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>contents<span class=\\\"token punctuation\\\">:</span> mdx<span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>opts<span class=\\\"token punctuation\\\">.</span>filepath<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    fileOpts<span class=\\\"token punctuation\\\">.</span>path <span class=\\\"token operator\\\">=</span> opts<span class=\\\"token punctuation\\\">.</span>filepath\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>contents<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> compiler<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">process</span><span class=\\\"token punctuation\\\">(</span>fileOpts<span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">/* @jsx mdx */\\n</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>contents<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`总结一下就是`}</p>\n    <p>{`1、编译时，md通过mdx-loader转换成js文件`}</p>\n    <p>{`2、运行时，createElement被劫持，注入了自定义组件`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"你可以从本文了解到\",\n    level: 2,\n    title: \"你可以从本文了解到\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"最终效果-demo\",\n    level: 2,\n    title: \"最终效果 demo\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"如何安装和使用\",\n    level: 2,\n    title: \"如何安装和使用\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"原理小探\",\n    level: 2,\n    title: \"原理小探\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}